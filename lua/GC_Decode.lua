-- auto make by Tool ProtocolMaker don't modify anything!!!
local CmdGCSToGCSDecodeTable = {}

--------  the cmd type to iCmd code--------------------------
CMD_GC_STARTSCRIPT = 39209
CMD_GC_LOADSCRIPTMAXID = 39186
CMD_GC_CARRYACHIEVEREWARDID = 39225
CMD_GC_CARRYSCRIPTDIFF = 39217
CMD_GC_CARRYSPECIALARRAY = 39262
CMD_GC_CHANGEDYNAMICCONFIG = 39234
CMD_GC_CLICKMAP = 39238
CMD_GC_CLICKNPC = 39169
CMD_GC_CLICK_NPC_INTERACTOPER = 39237
CMD_GC_CLICKNPCINTERACT = 39207
CMD_GC_CLICKCHOICE = 39185
CMD_GC_CLICKTRYINTERACTWITHNPC = 39210
CMD_GC_CLICKADDATTRPOINT = 39180
CMD_GC_CLICKEQUIPITEM = 39257
CMD_GC_CLICKUNEQUIPITEM = 39222
CMD_GC_CLICKSELECTSUBMITITEM = 39233
CMD_GC_CLICKGAMEOVER = 39249
CMD_GC_CLICKSCRIPTARENABATTLESTART = 39184
CMD_GC_CLICKCLOSESCRIPTARENA = 39231
CMD_GC_CLICKCHEAT = 39239
CMD_GC_CLICKPICKUPADVLOOT = 39254
CMD_GC_CLICKITEMOPR = 39174
CMD_GC_CLICK_INCOMPLETEBOOKBOX = 39195
CMD_GC_CLICK_SHOPOPR = 39202
CMD_GC_CLICK_EXCHANGE_SILVER = 39171
CMD_GC_CLICKCREATEROLE = 39188
CMD_GC_CLICKCREATEBABY = 39203
CMD_GC_CLICKCREATEROLERANDOMATTR = 39183
CMD_GC_CLICKRANDOMGIFT = 39212
CMD_GC_CLICKROLEADDGIFT = 39214
CMD_GC_CLICKROLEDELGIFT = 39201
CMD_GC_CLICKRANDOMWISHREWARDS = 39198
CMD_GC_CLICKCHOOSEWISHREWARDS = 39242
CMD_GC_CLICKTASKTAG_SET = 39256
CMD_GC_CLICKCHOOSEPLATITEM = 39266
CMD_GC_CLICKACHIEVEPOINT = 39215
CMD_GC_CLICKMAZE = 39263
CMD_GC_CLICKWEEKDIFF = 39268
CMD_GC_CLICKCHANGEEMBATTLEMARTIAL = 39251
CMD_GC_CLICKSETEMBATTLESUBROLE = 39219
CMD_GC_CLICKUNLOCKROLE = 39200
CMD_GC_CLICKUNLOCKSKIN = 39246
CMD_GC_CLICKSETTITLE = 39187
CMD_GC_CLICKFORGETMARTIAL = 39220
CMD_GC_CLICKROLEDISGUISE = 39235
CMD_GC_CLICKFINALBATTLEENTERCITY = 39181
CMD_GC_CLICKFINALBATTLEQUITCITY = 39267
CMD_GC_CLICKFINALBATTLEOPENBOX = 39172
CMD_GC_CLICKBABYLEARN = 39255
CMD_GC_CLICKHIGHTOWEREMBATTLEOVER = 39229
CMD_GC_CLICKCLEARINTERACTINFO = 39191
CMD_GC_CLICKFINALBATTLEANTIJAMMA = 39250
CMD_GC_CLICKCHOOSEROLEID = 39182
CMD_GC_CLICKGETBABYCLOSE = 39178
CMD_GC_CLICKQUERYRESDROPACTIVITYINFO = 39226
CMD_GC_CLICKEXCHANGECOLLECTACTIVITY = 39232
CMD_GC_CLICKDIALOG = 39176
CMD_GC_SETNICKNAME = 39218
CMD_GC_SETCLANBRANCHSTATE = 39252
CMD_GC_KILLCLANBRANCH = 39248
CMD_GC_DISPLAY_BEGIN = 39259
CMD_GC_DISPLAY_SUBMITITEM_SELECT = 39194
CMD_GC_DISPLAY_UPDATE_DELEGATION_STATE = 39244
CMD_GC_SERVERFRIENDOPENTREASURE = 39177
CMD_GC_WEEKROUNDEND = 39247
CMD_GC_UPDATEWEEKROUNDDATA = 39228
CMD_GC_STARTSCRIPTARENA = 39196
CMD_GC_SCRIPTARENABATTLEEND = 39205
CMD_GC_DISPLAY_LOGICDEBUGINFO = 39223
CMD_GC_DISPLAY_SYSTEMINFO = 39245
CMD_GC_DISPLAY_DIALOG = 39192
CMD_GC_DISPLAY_SELECT = 39224
CMD_GC_DISPLAY_MAPMOVE = 39265
CMD_GC_DISPLAY_GAMEDATA = 39243
CMD_GC_DISPLAY_ROLECREATE = 39206
CMD_GC_DISPLAY_ROLEDELETE = 39230
CMD_GC_DISPLAY_NPCUPDATE = 39170
CMD_GC_DISPLAY_NPCDELETE = 39258
CMD_GC_DISPLAY_MAINROLEINFO = 39190
CMD_GC_DISPLAY_TEAMINFO = 39253
CMD_GC_DISPLAY_MAINROLENAME = 39241
CMD_GC_DISPLAY_MAINROLEPETINFO = 39221
CMD_GC_DISPLAY_MAINROLENICKINFO = 39199
CMD_GC_DISPLAY_ROLECOMMON = 39193
CMD_GC_DISPLAY_ROLEFAVOR = 39261
CMD_GC_DISPLAY_ROLEBRO = 39179
CMD_GC_DISPLAY_ROLEATTRS = 39189
CMD_GC_DISPLAY_ROLEITEMS = 39211
CMD_GC_DISPLAY_ROLEMARTIALS = 39264
CMD_GC_DISPLAYACHIEVEPOINT = 39227
CMD_GC_DISPLAYUNLOCKROLE = 39236
CMD_GC_DISPLAYUNLOCKSKIN = 39208
CMD_GC_DISPLAYNEWTOAST = 39197
CMD_GC_DISPLAY_EVOLUTIONDELETE = 39175
CMD_GC_DISPLAY_EVOLUTIONUPDATE = 39240
CMD_GC_DISPLAY_EVOLUTIONRECORDUPDATE = 39216
CMD_GC_DISPLAY_EVOLUTIONRECORDDELETE = 39173
CMD_GC_DISPLAY_MONTHEVOLUTION = 39260
CMD_GC_DISPLAY_ITEMDELETE = 39213
CMD_GC_DISPLAY_ITEMUPDATE = 39204
CMD_GC_DISPLAY_TEMPBAG_UPDATE = 39309
CMD_GC_CLICK_TEMPBAG_MOVEBACK = 39286
CMD_GC_CLICK_BAGCAPACITY_BUY = 39325
CMD_GC_DISPLAY_DRTIMER_UPDATE = 39317
CMD_GC_DISPLAY_MARTIALDELETE = 39362
CMD_GC_DISPLAY_MARTIALUPDATE = 39334
CMD_GC_DISPLAY_ROLEGIFT = 39338
CMD_GC_DISPLAY_GIFTUPDATE = 39269
CMD_GC_DISPLAY_GIFTDELETE = 39337
CMD_GC_DISPLAY_ROLEWISHTASKS = 39307
CMD_GC_DISPLAY_WISHTASKUPDATE = 39285
CMD_GC_DISPLAY_WISHTASKDELETE = 39310
CMD_GC_DISPLAY_ACHIEVEDELETE = 39280
CMD_GC_DISPLAY_UNLOCKUPDATE = 39357
CMD_GC_DISPLAY_TAGUPDATE = 39322
CMD_GC_DISPLAY_TAGDELETE = 39333
CMD_GC_DISPLAY_WEEKROUNDITEMOUT = 39349
CMD_GC_DISPLAY_WEEKROUNDITEMIN = 39284
CMD_GC_DISPLAY_ITEM_REFORGE_RESULT = 39331
CMD_GC_DISPLAY_TASKADD = 39339
CMD_GC_DISPLAY_TASKUPDATE = 39354
CMD_GC_DISPLAY_TASKCOMPLETE = 39274
CMD_GC_DISPLAY_TASKREMOVE = 39295
CMD_GC_DISPLAY_ENTERBIGMAP = 39302
CMD_GC_DISPLAY_SHOPITEM = 39297
CMD_GC_DISPLAY_DISPOSITION = 39288
CMD_GC_DISPLAY_CREATEMAINROLE = 39303
CMD_GC_DISPLAY_CREATEBABYROLE = 39283
CMD_GC_DISPLAYCITYDATA = 39312
CMD_GC_DISPLAYCITYMOVE = 39314
CMD_GC_DISPLAY_RANDOMGIFT = 39301
CMD_GC_DISPLAY_RANDOMWISHREWARDPOOL = 39298
CMD_GC_DISPLAY_CHOOSEWISHREWARDS = 39342
CMD_GC_DISPLAY_EXECUTEPLOT = 39356
CMD_GC_DISPLAY_EXECUTECUSTOMPLOT = 39366
CMD_GC_DISPLAYMAPADVLOOTS = 39315
CMD_GC_DISPLAY_MAZEUPDATE = 39363
CMD_GC_DISPLAY_MAZECARDUPDATE = 39364
CMD_GC_DISPLAY_MAZEAREAUPDATE = 39351
CMD_GC_DISPLAY_MAZEGRIDUPDATE = 39319
CMD_GC_DISPLAY_MAZEUNLOCKGRIDCHOICE = 39300
CMD_GC_DISPLAY_MAZEUNLOCKGRIDSUCCESS = 39346
CMD_GC_DISPLAY_MAZEMOVE = 39287
CMD_GC_DISPLAY_MAZEMOVETONEWAREA = 39320
CMD_GC_DISPLAY_DYNAMICADVLOOTUPDATE = 39335
CMD_GC_DISPLAY_CLEARINTERACTSTATE = 39281
CMD_GC_DISPLAY_TRIGGERADVGIFT = 39367
CMD_GC_DISPLAY_INCOMPLETEBOOKBOX = 39272
CMD_GC_DISPLAY_ENTERCITY = 39355
CMD_GC_DISPLAY_EMBATTLEMARTIALUPDATE = 39329
CMD_GC_DISPLAY_SHOWFOREGROUND = 39291
CMD_GC_DISPLAY_UPDATEUNLOCKDISGUISE = 39350
CMD_GC_DISPLAY_FINALBATTLEUPDATEINFO = 39282
CMD_GC_DISPLAY_FINALBATTLEUPDATECITY = 39278
CMD_GC_DISPLAY_CLAN_ELIMINATE_SHOW = 39326
CMD_GC_DISPLAY_SHOWDATAENDRECORD = 39332
CMD_GC_DISPLAY_HIGHTOWERBASEINFO = 39368
CMD_GC_DISPLAY_HIGHTOWERRESTROLE = 39318
CMD_GC_DISPLAY_AIINFO = 39352
CMD_GC_DISPLAY_BATTLE_SHOWEMBATTLEUI = 39386
CMD_GC_DISPLAY_BATTLE_START = 39348
CMD_GC_DISPLAY_BATTLE_UPDATEUNIT = 39294
CMD_GC_DISPLAY_BATTLE_CREATEUNIT = 39344
CMD_GC_DISPLAY_BATTLE_UPDATECOMBO = 39277
CMD_GC_DISPLAY_BATTLE_OBSERVEUNIT = 39347
CMD_GC_DISPLAY_BATTLE_BUFFDESC = 39328
CMD_GC_DISPLAY_BATTLE_UPDATEROUND = 39296
CMD_GC_DISPLAY_BATTLE_AUTOBATTLE = 39305
CMD_GC_DISPLAY_BATTLE_CHECK = 39323
CMD_GC_DISPLAY_BATTLE_UPDATEOPTUNIT = 39345
CMD_GC_DISPLAY_BATTLE_GAMEEND = 39292
CMD_GC_CLICK_BATTLE_OPERATEUNIT = 39324
CMD_GC_CLICK_BATTLE_GAMEEND = 39365
CMD_GC_CLICK_BATTLE_AUTO = 39343
CMD_GC_CLICK_BATTLE_OBSERVE = 39306
CMD_GC_CLICK_BATTLE_WHEELWAR_RESULT = 39330
CMD_GC_DISPLAY_HURTINFO = 39270
CMD_GC_DISPLAY_BATTLE_UPDATETREASUREBOX = 39358
CMD_GC_CLICK_BATTLE_CHECK = 39290
CMD_GC_DISPLAY_CALLHELPBACKINFO = 39353
CMD_GC_DISPLAY_INVITEABLE_UPDATE = 39341
CMD_GC_CLICK_NPC_INTERACT_BEG = 39321
CMD_GC_DISPLAY_NPC_INTERACT_RANDOM_ITEMS = 39299
CMD_GC_DISPLAY_MAPUPDATE = 39293
CMD_GC_DISPLAY_NPC_INTERACT_GIVE_GIFT = 39361
CMD_GC_DISPLAY_INTERACT_DATE_UPDATE = 39279
CMD_GC_DISPLAY_INTERACT_REFRESHTIMES_UPDATE = 39271
CMD_GC_CLICK_CHOOSE_TIGUAN = 39275
CMD_GC_CLICK_START_CLAN_ELIMINATE = 39273
CMD_GC_CLICK_LIMITSHOP_ACTION = 39289
CMD_GC_CLICK_SELECT_ZHUAZHOU = 39369
CMD_GC_CLICK_ADD_CLAN_DELEGATION_TASK = 39304
CMD_GC_CLICK_ADD_CITY_DELEGATION_TASK = 39276
CMD_GC_DISPLAY_ADD_INTERACT_OPTION = 39379
CMD_GC_DISPLAY_REMOVE_INTERACT_OPTION = 39380
CMD_GC_DISPLAY_CLOSEGIVEGIFT = 39381
CMD_GC_DISPLAY_UPDATE_ROLE_SELECT_EVENT = 39391
CMD_GC_DISPLAY_PLAYMAZEROLEANIM = 39393
CMD_GC_DISPLAY_SHOWMAZEROLEBUBBLE = 39383
CMD_GC_DISPLAY_MAZEENEMYESCAPE = 39382
CMD_GC_DISPLAY_UPDATE_TITLEID = 39392
CMD_GC_DISPLAY_CUSTOM_PLOT = 39308
CMD_GC_DISPLAY_DYNAMICS_TOAST = 39387
CMD_GC_CLICK_CHANGESUBROLE = 39311
CMD_GC_CLICK_BREAKDISPLIMIT = 39370
CMD_GC_CLICK_CONSULTCLOSE = 39398
CMD_GC_CLICK_LEAVETEAM = 39399
CMD_GC_DISPLAY_UNLEAVEABLE_UPDATE = 39400
CMD_GC_DISPLAY_UPDATECHOICEINFO = 39401
CMD_GC_DISPLAY_SHOWCHOICEWINDOW = 39402
CMD_GC_DISPLAY_CLEARCHOICEINFO = 39403
CMD_GC_DISPLAY_START_GUIDE = 39404
CMD_GC_DISPLAY_REDKNIFE_UPDATE = 39405
CMD_GC_DISPLAY_REDKNIFE_DELETE = 39406
CMD_GC_DISPLAY_END = 39407
CMD_GC_CLICK_CLAN_JOIN = 39408
CMD_GC_DISPLAY_CLAN_INFO_UPDATE = 39409
CMD_GC_CLICK_CLAN_ENTER = 39410
CMD_GC_CLICK_CLAN_MISSION_START = 39411
CMD_GC_CLICK_CLAN_MISSION_SELECT_ROLE = 39412
CMD_GC_CLICK_CLAN_MARTIAL_LEARN = 39413
CMD_GC_DISPLAY_CLAN_BRANCH_INFO_UPDATE = 39414
CMD_GC_DISPLAY_CLAN_BRANCH_RESULT = 39415
CMD_GC_CLICK_AIINFO = 39416
CMD_GC_CLICK_UPLOADAIINFO = 39417
CMD_GC_CLICK_UPDATEROLEEMBATTLE = 39418
CMD_GC_DISPLAY_UPDATEROLEEMBATTLERET = 39419
CMD_GC_DISPLAY_INITROLEEMBATTLE = 39420
CMD_GC_UPDATERANKLIST = 39421
CMD_GC_DISPALYBABYSTATE = 39422
CMD_GC_ARENABATTLECALC = 39423
CMD_GC_ARENABATTLECALCRESULT = 39424
CMD_GC_CHALLENGEPLATROLECALC = 39425
CMD_GC_GIVEUPCHALLENGEPLATROLECALC = 39426
CMD_GC_ZMBATTLECALC = 39427
CMD_GC_ZMBATTLECALCRESULT = 39428
CMD_GC_DISPLAY_DUELROLE = 39429
CMD_GC_SHOWCHOOSEROLE = 39430
CMD_GC_ARENABATTLEBIGCMDPACK = 39431
CMD_GC_STARTSHARELIMITSHOP = 39432
CMD_GC_ROLELEARNSECRETBOOKMARTIAL = 39433
CMD_GC_DISPLAY_DIFFDROPUPDATE = 39434
CMD_GC_DISPLAY_FORCEWEEKEND = 39435
CMD_GC_CLICK_ROLECHALLENGESELECTROLE = 39436
CMD_GC_CLICK_MARTIALSTRONG = 39437
CMD_GC_DISPLAY_MARTIALSTRONG = 39438
CMD_GC_CLICK_MAKEMARTIALSECRET = 39439
CMD_GC_DISPLAY_MAKEMARTIALSECRET = 39440
CMD_GC_DISPLAY_RESDROPACTIVITY = 39441
CMD_GC_DISPLAY_COLLECTACTIVITYEXCHANGERES = 39442
CMD_GC_DISPLAY_UPDATESAMETHREADPLAYERINFO = 39443
CMD_GC_DISPLAY_NOTICECLIENTFIGHTPLAYER = 39444
CMD_GC_DISPLAY_NOTICECLIENTADDFRIEND = 39445
CMD_GC_DISPLAY_LEVELUP = 39446
CMD_GC_DISPLAY_CLEARALLCHOICEINFO = 39447
CMD_GC_DISPLAY_SHOWCOMMONEMBATTLE = 39448
CMD_GC_CLICK_COMMONEMBATTLERESULT = 39449
CMD_GC_DISPLAYUPDATECUSTOMADVLOOT = 39450
CMD_GC_CLICKPICKCUSTOMADVLOOT = 39451
CMD_GC_DISPLAYAUTOBATTLETESTREPLAY = 39457
CMD_GC_SHOWDIALOG = 39453
CMD_GC_CLICK_ROLEFACEOPERATE = 39458
CMD_GC_DISPLAY_ROLEFACEQUERY = 39455
CMD_GC_DISPLAY_ROLEFACERESULT = 39460
CMD_GC_CLICK_MAZEENTRY = 39452
CMD_GC_DISPLAY_DISGUISE = 39454
--------------------------------------------------------------
function registerGCSToGCSCommand()
	CmdGCSToGCSDecodeTable[CMD_GC_STARTSCRIPT] = Decode_SeGC_StartScript
	CmdGCSToGCSDecodeTable[CMD_GC_LOADSCRIPTMAXID] = Decode_SeGC_LoadScriptMaxID
	CmdGCSToGCSDecodeTable[CMD_GC_CARRYACHIEVEREWARDID] = Decode_SeGC_CarryAchieveRewardID
	CmdGCSToGCSDecodeTable[CMD_GC_CARRYSCRIPTDIFF] = Decode_SeGC_CarryScriptDiff
	CmdGCSToGCSDecodeTable[CMD_GC_CARRYSPECIALARRAY] = Decode_SeGC_CarrySpecialArray
	CmdGCSToGCSDecodeTable[CMD_GC_CHANGEDYNAMICCONFIG] = Decode_SeGC_ChangeDynamicConfig
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKMAP] = Decode_SeGC_ClickMap
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKNPC] = Decode_SeGC_ClickNPC
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_NPC_INTERACTOPER] = Decode_SeGC_Click_NPC_InteractOper
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKNPCINTERACT] = Decode_SeGC_ClickNpcInteract
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHOICE] = Decode_SeGC_ClickChoice
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKTRYINTERACTWITHNPC] = Decode_SeGC_ClickTryInteractWithNpc
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKADDATTRPOINT] = Decode_SeGC_ClickAddAttrPoint
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKEQUIPITEM] = Decode_SeGC_ClickEquipItem
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKUNEQUIPITEM] = Decode_SeGC_ClickUnequipItem
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKSELECTSUBMITITEM] = Decode_SeGC_ClickSelectSubmitItem
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKGAMEOVER] = Decode_SeGC_ClickGameOver
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKSCRIPTARENABATTLESTART] = Decode_SeGC_ClickScriptArenaBattleStart
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCLOSESCRIPTARENA] = Decode_SeGC_ClickCloseScriptArena
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHEAT] = Decode_SeGC_ClickCheat
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKPICKUPADVLOOT] = Decode_SeGC_ClickPickUpAdvLoot
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKITEMOPR] = Decode_SeGC_ClickItemOpr
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_INCOMPLETEBOOKBOX] = Decode_SeGC_Click_InCompleteBookBox
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_SHOPOPR] = Decode_SeGC_Click_ShopOpr
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_EXCHANGE_SILVER] = Decode_SeGC_Click_Exchange_Silver
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCREATEROLE] = Decode_SeGC_ClickCreateRole
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCREATEBABY] = Decode_SeGC_ClickCreateBaby
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCREATEROLERANDOMATTR] = Decode_SeGC_ClickCreateRoleRandomAttr
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKRANDOMGIFT] = Decode_SeGC_ClickRandomGift
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKROLEADDGIFT] = Decode_SeGC_ClickRoleAddGift
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKROLEDELGIFT] = Decode_SeGC_ClickRoleDelGift
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKRANDOMWISHREWARDS] = Decode_SeGC_ClickRandomWishRewards
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHOOSEWISHREWARDS] = Decode_SeGC_ClickChooseWishRewards
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKTASKTAG_SET] = Decode_SeGC_ClickTaskTag_Set
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHOOSEPLATITEM] = Decode_SeGC_ClickChoosePlatItem
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKACHIEVEPOINT] = Decode_SeGC_ClickAchievePoint
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKMAZE] = Decode_SeGC_ClickMaze
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKWEEKDIFF] = Decode_SeGC_ClickWeekDiff
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHANGEEMBATTLEMARTIAL] = Decode_SeGC_ClickChangeEmBattleMartial
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKSETEMBATTLESUBROLE] = Decode_SeGC_ClickSetEmBattleSubRole
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKUNLOCKROLE] = Decode_SeGC_ClickUnlockRole
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKUNLOCKSKIN] = Decode_SeGC_ClickUnlockSkin
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKSETTITLE] = Decode_SeGC_ClickSetTitle
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKFORGETMARTIAL] = Decode_SeGC_ClickForgetMartial
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKROLEDISGUISE] = Decode_SeGC_ClickRoleDisguise
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKFINALBATTLEENTERCITY] = Decode_SeGC_ClickFinalBattleEnterCity
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKFINALBATTLEQUITCITY] = Decode_SeGC_ClickFinalBattleQuitCity
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKFINALBATTLEOPENBOX] = Decode_SeGC_ClickFinalBattleOpenBox
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKBABYLEARN] = Decode_SeGC_ClickBabyLearn
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKHIGHTOWEREMBATTLEOVER] = Decode_SeGC_ClickHighTowerEmbattleOver
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCLEARINTERACTINFO] = Decode_SeGC_ClickClearInteractInfo
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKFINALBATTLEANTIJAMMA] = Decode_SeGC_ClickFinalBattleAntiJamma
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKCHOOSEROLEID] = Decode_SeGC_ClickChooseRoleID
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKGETBABYCLOSE] = Decode_SeGC_ClickGetBabyClose
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKQUERYRESDROPACTIVITYINFO] = Decode_SeGC_ClickQueryResDropActivityInfo
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKEXCHANGECOLLECTACTIVITY] = Decode_SeGC_ClickExchangeCollectActivity
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKDIALOG] = Decode_SeGC_ClickDialog
	CmdGCSToGCSDecodeTable[CMD_GC_SETNICKNAME] = Decode_SeGC_SetNickName
	CmdGCSToGCSDecodeTable[CMD_GC_SETCLANBRANCHSTATE] = Decode_SeGC_SetClanBranchState
	CmdGCSToGCSDecodeTable[CMD_GC_KILLCLANBRANCH] = Decode_SeGC_KillClanBranch
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BEGIN] = Decode_SeGC_Display_Begin
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SUBMITITEM_SELECT] = Decode_SeGC_Display_SubmitItem_Select
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATE_DELEGATION_STATE] = Decode_SeGC_Display_Update_Delegation_State
	CmdGCSToGCSDecodeTable[CMD_GC_SERVERFRIENDOPENTREASURE] = Decode_SeGC_ServerFriendOpenTreasure
	CmdGCSToGCSDecodeTable[CMD_GC_WEEKROUNDEND] = Decode_SeGC_WeekRoundEnd
	CmdGCSToGCSDecodeTable[CMD_GC_UPDATEWEEKROUNDDATA] = Decode_SeGC_UpdateWeekRoundData
	CmdGCSToGCSDecodeTable[CMD_GC_STARTSCRIPTARENA] = Decode_SeGC_StartScriptArena
	CmdGCSToGCSDecodeTable[CMD_GC_SCRIPTARENABATTLEEND] = Decode_SeGC_ScriptArenaBattleEnd
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_LOGICDEBUGINFO] = Decode_SeGC_Display_LogicDebugInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SYSTEMINFO] = Decode_SeGC_Display_SystemInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DIALOG] = Decode_SeGC_Display_Dialog
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SELECT] = Decode_SeGC_Display_Select
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAPMOVE] = Decode_SeGC_Display_MapMove
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_GAMEDATA] = Decode_SeGC_Display_GameData
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLECREATE] = Decode_SeGC_Display_RoleCreate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEDELETE] = Decode_SeGC_Display_RoleDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NPCUPDATE] = Decode_SeGC_Display_NpcUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NPCDELETE] = Decode_SeGC_Display_NpcDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAINROLEINFO] = Decode_SeGC_Display_MainRoleInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TEAMINFO] = Decode_SeGC_Display_TeamInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAINROLENAME] = Decode_SeGC_Display_MainRoleName
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAINROLEPETINFO] = Decode_SeGC_Display_MainRolePetInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAINROLENICKINFO] = Decode_SeGC_Display_MainRoleNickInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLECOMMON] = Decode_SeGC_Display_RoleCommon
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEFAVOR] = Decode_SeGC_Display_RoleFavor
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEBRO] = Decode_SeGC_Display_RoleBro
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEATTRS] = Decode_SeGC_Display_RoleAttrs
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEITEMS] = Decode_SeGC_Display_RoleItems
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEMARTIALS] = Decode_SeGC_Display_RoleMartials
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYACHIEVEPOINT] = Decode_SeGC_DisplayAchievePoint
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYUNLOCKROLE] = Decode_SeGC_DisplayUnlockRole
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYUNLOCKSKIN] = Decode_SeGC_DisplayUnlockSkin
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYNEWTOAST] = Decode_SeGC_DisplayNewToast
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EVOLUTIONDELETE] = Decode_SeGC_Display_EvolutionDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EVOLUTIONUPDATE] = Decode_SeGC_Display_EvolutionUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EVOLUTIONRECORDUPDATE] = Decode_SeGC_Display_EvolutionRecordUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EVOLUTIONRECORDDELETE] = Decode_SeGC_Display_EvolutionRecordDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MONTHEVOLUTION] = Decode_SeGC_Display_MonthEvolution
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ITEMDELETE] = Decode_SeGC_Display_ItemDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ITEMUPDATE] = Decode_SeGC_Display_ItemUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TEMPBAG_UPDATE] = Decode_SeGC_Display_TempBag_Update
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_TEMPBAG_MOVEBACK] = Decode_SeGC_Click_TempBag_MoveBack
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BAGCAPACITY_BUY] = Decode_SeGC_Click_BagCapacity_Buy
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DRTIMER_UPDATE] = Decode_SeGC_Display_DRTimer_Update
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MARTIALDELETE] = Decode_SeGC_Display_MartialDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MARTIALUPDATE] = Decode_SeGC_Display_MartialUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEGIFT] = Decode_SeGC_Display_RoleGift
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_GIFTUPDATE] = Decode_SeGC_Display_GiftUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_GIFTDELETE] = Decode_SeGC_Display_GiftDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEWISHTASKS] = Decode_SeGC_Display_RoleWishTasks
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_WISHTASKUPDATE] = Decode_SeGC_Display_WishTaskUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_WISHTASKDELETE] = Decode_SeGC_Display_WishTaskDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ACHIEVEDELETE] = Decode_SeGC_Display_AchieveDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UNLOCKUPDATE] = Decode_SeGC_Display_UnLockUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TAGUPDATE] = Decode_SeGC_Display_TagUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TAGDELETE] = Decode_SeGC_Display_TagDelete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_WEEKROUNDITEMOUT] = Decode_SeGC_Display_WeekRoundItemOut
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_WEEKROUNDITEMIN] = Decode_SeGC_Display_WeekRoundItemIn
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ITEM_REFORGE_RESULT] = Decode_SeGC_Display_Item_ReForge_Result
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TASKADD] = Decode_SeGC_Display_TaskAdd
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TASKUPDATE] = Decode_SeGC_Display_TaskUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TASKCOMPLETE] = Decode_SeGC_Display_TaskComplete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TASKREMOVE] = Decode_SeGC_Display_TaskRemove
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ENTERBIGMAP] = Decode_SeGC_Display_EnterBigMap
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOPITEM] = Decode_SeGC_Display_ShopItem
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DISPOSITION] = Decode_SeGC_Display_Disposition
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CREATEMAINROLE] = Decode_SeGC_Display_CreateMainRole
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CREATEBABYROLE] = Decode_SeGC_Display_CreateBabyRole
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYCITYDATA] = Decode_SeGC_DisplayCityData
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYCITYMOVE] = Decode_SeGC_DisplayCityMove
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_RANDOMGIFT] = Decode_SeGC_Display_RandomGift
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_RANDOMWISHREWARDPOOL] = Decode_SeGC_Display_RandomWishRewardPool
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CHOOSEWISHREWARDS] = Decode_SeGC_Display_ChooseWishRewards
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EXECUTEPLOT] = Decode_SeGC_Display_ExecutePlot
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EXECUTECUSTOMPLOT] = Decode_SeGC_Display_ExecuteCustomPlot
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYMAPADVLOOTS] = Decode_SeGC_DisplayMapAdvLoots
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEUPDATE] = Decode_SeGC_Display_MazeUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZECARDUPDATE] = Decode_SeGC_Display_MazeCardUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEAREAUPDATE] = Decode_SeGC_Display_MazeAreaUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEGRIDUPDATE] = Decode_SeGC_Display_MazeGridUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEUNLOCKGRIDCHOICE] = Decode_SeGC_Display_MazeUnlockGridChoice
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEUNLOCKGRIDSUCCESS] = Decode_SeGC_Display_MazeUnlockGridSuccess
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEMOVE] = Decode_SeGC_Display_MazeMove
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEMOVETONEWAREA] = Decode_SeGC_Display_MazeMoveToNewArea
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DYNAMICADVLOOTUPDATE] = Decode_SeGC_Display_DynamicAdvLootUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLEARINTERACTSTATE] = Decode_SeGC_Display_ClearInteractState
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_TRIGGERADVGIFT] = Decode_SeGC_Display_TriggerAdvGift
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_INCOMPLETEBOOKBOX] = Decode_SeGC_Display_InCompleteBookBox
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ENTERCITY] = Decode_SeGC_Display_EnterCity
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_EMBATTLEMARTIALUPDATE] = Decode_SeGC_Display_EmBattleMartialUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOWFOREGROUND] = Decode_SeGC_Display_ShowForeground
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATEUNLOCKDISGUISE] = Decode_SeGC_Display_UpdateUnlockDisguise
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_FINALBATTLEUPDATEINFO] = Decode_SeGC_Display_FinalBattleUpdateInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_FINALBATTLEUPDATECITY] = Decode_SeGC_Display_FinalBattleUpdateCity
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLAN_ELIMINATE_SHOW] = Decode_SeGC_Display_Clan_Eliminate_Show
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOWDATAENDRECORD] = Decode_SeGC_Display_ShowDataEndRecord
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_HIGHTOWERBASEINFO] = Decode_SeGC_Display_HighTowerBaseInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_HIGHTOWERRESTROLE] = Decode_SeGC_Display_HighTowerRestRole
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_AIINFO] = Decode_SeGC_Display_AIInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_SHOWEMBATTLEUI] = Decode_SeGC_Display_Battle_ShowEmbattleUI
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_START] = Decode_SeGC_Display_Battle_Start
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_UPDATEUNIT] = Decode_SeGC_Display_Battle_UpdateUnit
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_CREATEUNIT] = Decode_SeGC_Display_Battle_CreateUnit
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_UPDATECOMBO] = Decode_SeGC_Display_Battle_UpdateCombo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_OBSERVEUNIT] = Decode_SeGC_Display_Battle_ObserveUnit
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_BUFFDESC] = Decode_SeGC_Display_Battle_BuffDesc
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_UPDATEROUND] = Decode_SeGC_Display_Battle_UpdateRound
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_AUTOBATTLE] = Decode_SeGC_Display_Battle_AutoBattle
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_CHECK] = Decode_SeGC_Display_Battle_Check
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_UPDATEOPTUNIT] = Decode_SeGC_Display_Battle_UpdateOptUnit
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_GAMEEND] = Decode_SeGC_Display_Battle_GameEnd
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_OPERATEUNIT] = Decode_SeGC_Click_Battle_OperateUnit
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_GAMEEND] = Decode_SeGC_Click_Battle_GameEnd
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_AUTO] = Decode_SeGC_Click_Battle_Auto
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_OBSERVE] = Decode_SeGC_Click_Battle_OBSERVE
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_WHEELWAR_RESULT] = Decode_SeGC_Click_Battle_WheelWar_Result
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_HURTINFO] = Decode_SeGC_Display_HurtInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_BATTLE_UPDATETREASUREBOX] = Decode_SeGC_Display_Battle_UpdateTreasureBox
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BATTLE_CHECK] = Decode_SeGC_Click_Battle_Check
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CALLHELPBACKINFO] = Decode_SeGC_Display_CallHelpBackInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_INVITEABLE_UPDATE] = Decode_SeGC_Display_Inviteable_Update
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_NPC_INTERACT_BEG] = Decode_SeGC_Click_NPC_Interact_Beg
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NPC_INTERACT_RANDOM_ITEMS] = Decode_SeGC_Display_NPC_Interact_Random_Items
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAPUPDATE] = Decode_SeGC_Display_MapUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NPC_INTERACT_GIVE_GIFT] = Decode_SeGC_Display_NPC_Interact_Give_Gift
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_INTERACT_DATE_UPDATE] = Decode_SeGC_Display_Interact_Date_Update
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_INTERACT_REFRESHTIMES_UPDATE] = Decode_SeGC_Display_Interact_RefreshTimes_Update
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CHOOSE_TIGUAN] = Decode_SeGC_Click_Choose_TiGuan
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_START_CLAN_ELIMINATE] = Decode_SeGC_CLICK_START_CLAN_ELIMINATE
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_LIMITSHOP_ACTION] = Decode_SeGC_Click_LimitShop_Action
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_SELECT_ZHUAZHOU] = Decode_SeGC_Click_Select_Zhuazhou
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_ADD_CLAN_DELEGATION_TASK] = Decode_SeGC_Click_Add_Clan_Delegation_Task
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_ADD_CITY_DELEGATION_TASK] = Decode_SeGC_Click_Add_City_Delegation_Task
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ADD_INTERACT_OPTION] = Decode_SeGC_Display_Add_Interact_Option
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_REMOVE_INTERACT_OPTION] = Decode_SeGC_Display_Remove_Interact_Option
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLOSEGIVEGIFT] = Decode_SeGC_Display_CloseGiveGift
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATE_ROLE_SELECT_EVENT] = Decode_SeGC_Display_Update_Role_Select_Event
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_PLAYMAZEROLEANIM] = Decode_SeGC_Display_PlayMazeRoleAnim
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOWMAZEROLEBUBBLE] = Decode_SeGC_Display_ShowMazeRoleBubble
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAZEENEMYESCAPE] = Decode_SeGC_Display_MazeEnemyEscape
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATE_TITLEID] = Decode_SeGC_Display_Update_TitleID
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CUSTOM_PLOT] = Decode_SeGC_Display_Custom_Plot
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DYNAMICS_TOAST] = Decode_SeGC_Display_Dynamics_Toast
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CHANGESUBROLE] = Decode_SeGC_Click_ChangeSubRole
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_BREAKDISPLIMIT] = Decode_SeGC_Click_BreakDispLimit
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CONSULTCLOSE] = Decode_SeGC_Click_ConsultClose
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_LEAVETEAM] = Decode_SeGC_Click_LeaveTeam
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UNLEAVEABLE_UPDATE] = Decode_SeGC_Display_UnLeaveable_Update
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATECHOICEINFO] = Decode_SeGC_Display_UpdateChoiceInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOWCHOICEWINDOW] = Decode_SeGC_Display_ShowChoiceWindow
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLEARCHOICEINFO] = Decode_SeGC_Display_ClearChoiceInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_START_GUIDE] = Decode_SeGC_Display_Start_Guide
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_REDKNIFE_UPDATE] = Decode_SeGC_Display_RedKnife_Update
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_REDKNIFE_DELETE] = Decode_SeGC_Display_RedKnife_Delete
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_END] = Decode_SeGC_Display_End
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CLAN_JOIN] = Decode_SeGC_Click_Clan_Join
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLAN_INFO_UPDATE] = Decode_SeGC_Display_Clan_Info_Update
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CLAN_ENTER] = Decode_SeGC_Click_Clan_Enter
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CLAN_MISSION_START] = Decode_SeGC_Click_Clan_Mission_Start
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CLAN_MISSION_SELECT_ROLE] = Decode_SeGC_Click_Clan_Mission_Select_Role
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_CLAN_MARTIAL_LEARN] = Decode_SeGC_Click_Clan_Martial_Learn
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLAN_BRANCH_INFO_UPDATE] = Decode_SeGC_Display_Clan_Branch_Info_Update
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLAN_BRANCH_RESULT] = Decode_SeGC_Display_Clan_Branch_Result
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_AIINFO] = Decode_SeGC_Click_AIInfo
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_UPLOADAIINFO] = Decode_SeGC_Click_UploadAIInfo
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_UPDATEROLEEMBATTLE] = Decode_SeGC_Click_UpdateRoleEmbattle
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATEROLEEMBATTLERET] = Decode_SeGC_Display_UpdateRoleEmbattleRet
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_INITROLEEMBATTLE] = Decode_SeGC_Display_InitRoleEmbattle
	CmdGCSToGCSDecodeTable[CMD_GC_UPDATERANKLIST] = Decode_SeGC_UpdateRanklist
	CmdGCSToGCSDecodeTable[CMD_GC_DISPALYBABYSTATE] = Decode_SeGC_DispalyBabyState
	CmdGCSToGCSDecodeTable[CMD_GC_ARENABATTLECALC] = Decode_SeGC_ArenaBattleCalc
	CmdGCSToGCSDecodeTable[CMD_GC_ARENABATTLECALCRESULT] = Decode_SeGC_ArenaBattleCalcResult
	CmdGCSToGCSDecodeTable[CMD_GC_CHALLENGEPLATROLECALC] = Decode_SeGC_ChallengePlatRoleCalc
	CmdGCSToGCSDecodeTable[CMD_GC_GIVEUPCHALLENGEPLATROLECALC] = Decode_SeGC_GiveUpChallengePlatRoleCalc
	CmdGCSToGCSDecodeTable[CMD_GC_ZMBATTLECALC] = Decode_SeGC_ZmBattleCalc
	CmdGCSToGCSDecodeTable[CMD_GC_ZMBATTLECALCRESULT] = Decode_SeGC_ZmBattleCalcResult
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DUELROLE] = Decode_SeGC_Display_DuelRole
	CmdGCSToGCSDecodeTable[CMD_GC_SHOWCHOOSEROLE] = Decode_SeGC_ShowChooseRole
	CmdGCSToGCSDecodeTable[CMD_GC_ARENABATTLEBIGCMDPACK] = Decode_SeGC_ArenaBattleBigCmdPack
	CmdGCSToGCSDecodeTable[CMD_GC_STARTSHARELIMITSHOP] = Decode_SeGC_StartShareLimitShop
	CmdGCSToGCSDecodeTable[CMD_GC_ROLELEARNSECRETBOOKMARTIAL] = Decode_SeGC_RoleLearnSecretBookMartial
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DIFFDROPUPDATE] = Decode_SeGC_Display_DiffDropUpdate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_FORCEWEEKEND] = Decode_SeGC_Display_ForceWeekEnd
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_ROLECHALLENGESELECTROLE] = Decode_SeGC_Click_RoleChallengeSelectRole
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_MARTIALSTRONG] = Decode_SeGC_Click_MartialStrong
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MARTIALSTRONG] = Decode_SeGC_Display_MartialStrong
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_MAKEMARTIALSECRET] = Decode_SeGC_Click_MakeMartialSecret
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_MAKEMARTIALSECRET] = Decode_SeGC_Display_MakeMartialSecret
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_RESDROPACTIVITY] = Decode_SeGC_Display_ResDropActivity
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_COLLECTACTIVITYEXCHANGERES] = Decode_SeGC_Display_CollectActivityExchangeRes
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_UPDATESAMETHREADPLAYERINFO] = Decode_SeGC_Display_UpdateSameThreadPlayerInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NOTICECLIENTFIGHTPLAYER] = Decode_SeGC_Display_NoticeClientFightPlayer
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_NOTICECLIENTADDFRIEND] = Decode_SeGC_Display_NoticeClientAddFriend
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_LEVELUP] = Decode_SeGC_Display_LevelUP
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_CLEARALLCHOICEINFO] = Decode_SeGC_Display_ClearAllChoiceInfo
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_SHOWCOMMONEMBATTLE] = Decode_SeGC_Display_ShowCommonEmbattle
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_COMMONEMBATTLERESULT] = Decode_SeGC_Click_CommonEmbattleResult
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYUPDATECUSTOMADVLOOT] = Decode_SeGC_DisplayUpdateCustomAdvLoot
	CmdGCSToGCSDecodeTable[CMD_GC_CLICKPICKCUSTOMADVLOOT] = Decode_SeGC_ClickPickCustomAdvLoot
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAYAUTOBATTLETESTREPLAY] = Decode_SeGC_DisplayAutoBattleTestReplay
	CmdGCSToGCSDecodeTable[CMD_GC_SHOWDIALOG] = Decode_SeGC_ShowDialog
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_ROLEFACEOPERATE] = Decode_SeGC_Click_RoleFaceOperate
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEFACEQUERY] = Decode_SeGC_Display_RoleFaceQuery
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_ROLEFACERESULT] = Decode_SeGC_Display_RoleFaceResult
	CmdGCSToGCSDecodeTable[CMD_GC_CLICK_MAZEENTRY] = Decode_SeGC_Click_MazeEntry
	CmdGCSToGCSDecodeTable[CMD_GC_DISPLAY_DISGUISE] = Decode_SeGC_Display_Disguise
end

function GetGCSToGCSDecodeFuncByCmd(iCmd)
	if CmdGCSToGCSDecodeTable[iCmd] ~= nil then
		return CmdGCSToGCSDecodeTable[iCmd]
	else
		return nil
	end
end

function Decode_SeGC_StartScript(netStreamValue)
	local result = { ["uiScriptID"] = 0,["iDataSize"] = 0,["akCarryData"] = nil,} 
	result["uiScriptID"] = netStreamValue:ReadInt()
	result["iDataSize"] = netStreamValue:ReadInt()
	local iDataSize = result["iDataSize"]
		result["akCarryData"] = {}
	for i = 0,iDataSize or -1 do
		if i >= iDataSize then
			break
		end
		result["akCarryData"][i] = netStreamValue:ReadByte()
	end
	return result
end

function Decode_SeGC_LoadScriptMaxID(netStreamValue)
	local result = { ["uiMaxRoleID"] = 0,["uiMaxItemID"] = 0,["uiMaxMartialID"] = 0,["uiMaxTaskID"] = 0,["uiMaxTagID"] = 0,["uiMaxDynamicID"] = 0,["uiMaxGiftID"] = 0,["uiMaxEvolutionID"] = 0,["uiMaxWishID"] = 0,["uiMaxMapID"] = 0,["uiMaxMazeID"] = 0,["uiMaxMazeAreaID"] = 0,["uiMaxMazeCardID"] = 0,["uiMaxMazeGridID"] = 0,["uiMaxClanID"] = 0,["uiMaxCityID"] = 0,["uiMaxContactID"] = 0,} 
	result["uiMaxRoleID"] = netStreamValue:ReadInt()
	result["uiMaxItemID"] = netStreamValue:ReadInt()
	result["uiMaxMartialID"] = netStreamValue:ReadInt()
	result["uiMaxTaskID"] = netStreamValue:ReadInt()
	result["uiMaxTagID"] = netStreamValue:ReadInt()
	result["uiMaxDynamicID"] = netStreamValue:ReadInt()
	result["uiMaxGiftID"] = netStreamValue:ReadInt()
	result["uiMaxEvolutionID"] = netStreamValue:ReadInt()
	result["uiMaxWishID"] = netStreamValue:ReadInt()
	result["uiMaxMapID"] = netStreamValue:ReadInt()
	result["uiMaxMazeID"] = netStreamValue:ReadInt()
	result["uiMaxMazeAreaID"] = netStreamValue:ReadInt()
	result["uiMaxMazeCardID"] = netStreamValue:ReadInt()
	result["uiMaxMazeGridID"] = netStreamValue:ReadInt()
	result["uiMaxClanID"] = netStreamValue:ReadInt()
	result["uiMaxCityID"] = netStreamValue:ReadInt()
	result["uiMaxContactID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_CarryAchieveRewardID(netStreamValue)
	local result = { ["iNum"] = 0,["auiAchieveReward"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	local iNum = result["iNum"]
		result["auiAchieveReward"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["auiAchieveReward"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_CarryScriptDiff(netStreamValue)
	local result = { ["iDiff"] = 1,["iWeekNum"] = 1,["iDeleteNum"] = 1,} 
	result["iDiff"] = netStreamValue:ReadInt()
	result["iWeekNum"] = netStreamValue:ReadInt()
	result["iDeleteNum"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_CarrySpecialArray(netStreamValue)
	local result = { ["iNum"] = 0,["akSpecialArray"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akSpecialArray"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakSpecialArray = { ["eType"] = nil,["iNum1"] = 0,["iNum2"] = 0,["iNum3"] = false,} 
		tempakSpecialArray["eType"] = netStreamValue:ReadInt()
		tempakSpecialArray["iNum1"] = netStreamValue:ReadInt()
		tempakSpecialArray["iNum2"] = netStreamValue:ReadInt()
		tempakSpecialArray["iNum3"] = netStreamValue:ReadByte()
		result["akSpecialArray"][i] = tempakSpecialArray
	end
	return result
end

function Decode_SeGC_ChangeDynamicConfig(netStreamValue)
	local result = { ["bOpenBattleLog"] = true,["bOpenDebugLog"] = true,} 
	result["bOpenBattleLog"] = netStreamValue:ReadByte()
	result["bOpenDebugLog"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_ClickMap(netStreamValue)
	local result = { ["eMapOpType"] = CMT_NULL,["uiMapID"] = 0,} 
	result["eMapOpType"] = netStreamValue:ReadInt()
	result["uiMapID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickNPC(netStreamValue)
	local result = { ["uiMapID"] = 0,["uiNpcID"] = 0,["uiMazeBaseID"] = 0,["uiAreaIndex"] = 0,["uiRow"] = 0,["uiColumn"] = 0,} 
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiNpcID"] = netStreamValue:ReadInt()
	result["uiMazeBaseID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_NPC_InteractOper(netStreamValue)
	local result = { ["eNPCInteractType"] = NPCIT_UNKNOW,["iParam1"] = 0,["iParam2"] = 0,["iParam3"] = 0,} 
	result["eNPCInteractType"] = netStreamValue:ReadInt()
	result["iParam1"] = netStreamValue:ReadInt()
	result["iParam2"] = netStreamValue:ReadInt()
	result["iParam3"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickNpcInteract(netStreamValue)
	local result = { ["uiChoiceLangID"] = 0,["uiRoleBaseID"] = 0,["uiMapID"] = 0,["uiConditionID"] = 0,["uiMazeTypeID"] = 0,["uiAreaIndex"] = 0,["uiCardID"] = 0,["uiRow"] = 0,["uiColumn"] = 0,} 
	result["uiChoiceLangID"] = netStreamValue:ReadInt()
	result["uiRoleBaseID"] = netStreamValue:ReadInt()
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiConditionID"] = netStreamValue:ReadInt()
	result["uiMazeTypeID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiCardID"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickChoice(netStreamValue)
	local result = { ["uiChoiceLangID"] = 0,} 
	result["uiChoiceLangID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickTryInteractWithNpc(netStreamValue)
	local result = { ["uiMapID"] = 0,["uiRoleID"] = 0,["uiMazeBaseID"] = 0,["uiAreaIndex"] = 0,["uiRow"] = 0,["uiColumn"] = 0,} 
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiMazeBaseID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickAddAttrPoint(netStreamValue)
	local result = { ["uiRoleID"] = 0,["auiValue"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["auiValue"] = {}
	for i = 0,RAAPT_NUMS or -1 do
		if i >= RAAPT_NUMS then
			break
		end
		result["auiValue"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_ClickEquipItem(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiItemID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickUnequipItem(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiItemID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickSelectSubmitItem(netStreamValue)
	local result = { ["uiTaskID"] = 0,["uiTaskEdgeID"] = 0,["iNum"] = 0,["auItems"] = nil,} 
	result["uiTaskID"] = netStreamValue:ReadInt()
	result["uiTaskEdgeID"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	result["auItems"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempauItems = { ["uiItemID"] = 0,["uiItemNum"] = 0,} 
		tempauItems["uiItemID"] = netStreamValue:ReadInt()
		tempauItems["uiItemNum"] = netStreamValue:ReadInt()
		result["auItems"][i] = tempauItems
	end
	return result
end

function Decode_SeGC_ClickGameOver(netStreamValue)
	local result = { ["uiParam"] = 0,} 
	result["uiParam"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickScriptArenaBattleStart(netStreamValue)
	local result = { ["uiArenaType"] = 0,} 
	result["uiArenaType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickCloseScriptArena(netStreamValue)
	local result = { ["uiArenaType"] = 0,} 
	result["uiArenaType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickCheat(netStreamValue)
	local result = { ["acCheatParam"] = nil,} 
	result["acCheatParam"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_ClickPickUpAdvLoot(netStreamValue)
	local result = { ["dwAdvLootCount"] = 0,["akAdvLootDatas"] = nil,} 
	result["dwAdvLootCount"] = netStreamValue:ReadInt()
	result["akAdvLootDatas"] = {}
		local dwAdvLootCount = result["dwAdvLootCount"]
	for i = 0,dwAdvLootCount or -1 do
		if i >= dwAdvLootCount then
			break
		end
		local tempakAdvLootDatas = { ["uiSite"] = 0,["uiMID"] = 0,["uiAreaID"] = 0,["uiAdvLootID"] = 0,["uiDynamicAdvLootID"] = 0,} 
		tempakAdvLootDatas["uiSite"] = netStreamValue:ReadInt()
		tempakAdvLootDatas["uiMID"] = netStreamValue:ReadInt()
		tempakAdvLootDatas["uiAreaID"] = netStreamValue:ReadInt()
		tempakAdvLootDatas["uiAdvLootID"] = netStreamValue:ReadInt()
		tempakAdvLootDatas["uiDynamicAdvLootID"] = netStreamValue:ReadInt()
		result["akAdvLootDatas"][i] = tempakAdvLootDatas
	end
	return result
end

function Decode_SeGC_ClickItemOpr(netStreamValue)
	local result = { ["eItemOprType"] = CIT_NULL,["uiRoleID"] = 0,["uiItemID"] = 0,["uiNum"] = 0,["uiChooseNum"] = 0,["adwChooseItem"] = nil,["uiMakerID"] = 0,["uiDynamicAttrID"] = 0,["isPerfect"] = 0,["uiGiveupDynamicAttrID"] = 0,["iItemNum"] = nil,["auiItem"] = nil,["uiMapID"] = 0,["uiMazeID"] = 0,["uiRoleBaseID"] = 0,} 
	result["eItemOprType"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	result["uiNum"] = netStreamValue:ReadInt()
	result["uiChooseNum"] = netStreamValue:ReadInt()
	local uiChooseNum = result["uiChooseNum"]
		result["adwChooseItem"] = {}
	for i = 0,uiChooseNum or -1 do
		if i >= uiChooseNum then
			break
		end
		result["adwChooseItem"][i] = netStreamValue:ReadInt()
	end
	result["uiMakerID"] = netStreamValue:ReadInt()
	result["uiDynamicAttrID"] = netStreamValue:ReadInt()
	result["isPerfect"] = netStreamValue:ReadByte()
	result["uiGiveupDynamicAttrID"] = netStreamValue:ReadInt()
	result["iItemNum"] = netStreamValue:ReadInt()
	local iItemNum = result["iItemNum"]
		result["auiItem"] = {}
	for i = 0,iItemNum or -1 do
		if i >= iItemNum then
			break
		end
		result["auiItem"][i] = netStreamValue:ReadInt()
	end
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiRoleBaseID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_InCompleteBookBox(netStreamValue)
	local result = { ["uiRoleID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_ShopOpr(netStreamValue)
	local result = { ["eShopType"] = CST_NULL,["uiShopID"] = 0,["uiNum"] = 0,["akItemData"] = nil,["uiMapID"] = 0,["uiMazeID"] = 0,["uiRoleBaseID"] = 0,} 
	result["eShopType"] = netStreamValue:ReadInt()
	result["uiShopID"] = netStreamValue:ReadInt()
	result["uiNum"] = netStreamValue:ReadInt()
	result["akItemData"] = {}
		local uiNum = result["uiNum"]
	for i = 0,uiNum or -1 do
		if i >= uiNum then
			break
		end
		local tempakItemData = { ["uiItemID"] = 0,["uiItemNum"] = 0,} 
		tempakItemData["uiItemID"] = netStreamValue:ReadInt()
		tempakItemData["uiItemNum"] = netStreamValue:ReadInt()
		result["akItemData"][i] = tempakItemData
	end
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiRoleBaseID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Exchange_Silver(netStreamValue)
	local result = { ["uiGoldNum"] = 0,} 
	result["uiGoldNum"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickCreateRole(netStreamValue)
	local result = { ["uiTypeID"] = nil,["acName"] = nil,["uiModelID"] = nil,} 
	result["uiTypeID"] = netStreamValue:ReadInt()
	result["acName"] = netStreamValue:ReadString()
	result["uiModelID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickCreateBaby(netStreamValue)
	local result = { ["uiTypeID"] = nil,["acName"] = nil,} 
	result["uiTypeID"] = netStreamValue:ReadInt()
	result["acName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_ClickCreateRoleRandomAttr(netStreamValue)
	local result = { ["uiTypeID"] = nil,} 
	result["uiTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickRandomGift(netStreamValue)
	local result = { ["uiType"] = 0,["uiRoleID"] = 0,["uiNum"] = 0,} 
	result["uiType"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiNum"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickRoleAddGift(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiGiftTypeID"] = 0,["eAddType"] = RAGT_NULL,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiGiftTypeID"] = netStreamValue:ReadInt()
	result["eAddType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickRoleDelGift(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiGiftID"] = 0,["uiGiftTypeID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiGiftID"] = netStreamValue:ReadInt()
	result["uiGiftTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickRandomWishRewards(netStreamValue)
	local result = { ["uiType"] = 0,["uiRoleID"] = 0,["uiWishTaskID"] = 0,["uiNum"] = 0,} 
	result["uiType"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiWishTaskID"] = netStreamValue:ReadInt()
	result["uiNum"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickChooseWishRewards(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiWishTaskID"] = 0,["uiWishRewardID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiWishTaskID"] = netStreamValue:ReadInt()
	result["uiWishRewardID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickTaskTag_Set(netStreamValue)
	local result = { ["uiTypeID"] = nil,["uiValue"] = nil,} 
	result["uiTypeID"] = netStreamValue:ReadInt()
	result["uiValue"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickChoosePlatItem(netStreamValue)
	local result = { ["uiScriptID"] = 0,["bEnter"] = true,["iItemNum"] = nil,["auiItem"] = nil,} 
	result["uiScriptID"] = netStreamValue:ReadInt()
	result["bEnter"] = netStreamValue:ReadByte()
	result["iItemNum"] = netStreamValue:ReadInt()
	local iItemNum = result["iItemNum"]
		result["auiItem"] = {}
	for i = 0,iItemNum or -1 do
		if i >= iItemNum then
			break
		end
		result["auiItem"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_ClickAchievePoint(netStreamValue)
	local result = { ["uiFree"] = 0,} 
	result["uiFree"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickMaze(netStreamValue)
	local result = { ["eMazeOprType"] = CMAT_NULL,["uiMazeID"] = 0,["uiAreaIndex"] = 0,["uiRow"] = 0,["uiColumn"] = 0,} 
	result["eMazeOprType"] = netStreamValue:ReadInt()
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickWeekDiff(netStreamValue)
	local result = { ["uiChooseDiff"] = 0,} 
	result["uiChooseDiff"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickChangeEmBattleMartial(netStreamValue)
	local result = { ["uiRoleUID"] = 0,["kChooseMartialInfo"] = nil,["uiChooseIndex"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	result["kChooseMartialInfo"] = {["dwUID"] = 0,["dwTypeID"] = 0,["dwIndex"] = 0,}
		result["kChooseMartialInfo"]["dwUID"] = netStreamValue:ReadInt()
		result["kChooseMartialInfo"]["dwTypeID"] = netStreamValue:ReadInt()
		result["kChooseMartialInfo"]["dwIndex"] = netStreamValue:ReadInt()
	result["uiChooseIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickSetEmBattleSubRole(netStreamValue)
	local result = { ["uiRoleUID"] = 0,["uiSubRoleUID"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	result["uiSubRoleUID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickUnlockRole(netStreamValue)
	local result = { ["uiTitleID"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickUnlockSkin(netStreamValue)
	local result = { ["uiTitleID"] = nil,["uiIndex"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	result["uiIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickSetTitle(netStreamValue)
	local result = { ["uiTitleID"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickForgetMartial(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiMartialTypeID"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiMartialTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickRoleDisguise(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiDisguiseItemTypeID"] = nil,["bUseItem"] = true,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiDisguiseItemTypeID"] = netStreamValue:ReadInt()
	result["bUseItem"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_ClickFinalBattleEnterCity(netStreamValue)
	local result = { ["uiFinalBattleCityID"] = 0,["bIsInCity"] = 0,} 
	result["uiFinalBattleCityID"] = netStreamValue:ReadInt()
	result["bIsInCity"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_ClickFinalBattleQuitCity(netStreamValue)
	local result = { ["uiFinalBattleCityID"] = 0,} 
	result["uiFinalBattleCityID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickFinalBattleOpenBox(netStreamValue)
	local result = { ["uiFinalBattleCityID"] = 0,} 
	result["uiFinalBattleCityID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickBabyLearn(netStreamValue)
	local result = { ["uiBabyRoleID"] = 0,["uiMasterTypeID"] = 0,} 
	result["uiBabyRoleID"] = netStreamValue:ReadInt()
	result["uiMasterTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickHighTowerEmbattleOver(netStreamValue)
	local result = { ["bSubmit"] = nil,} 
	result["bSubmit"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_ClickClearInteractInfo(netStreamValue)
	local result = { ["uiFree"] = nil,} 
	result["uiFree"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickFinalBattleAntiJamma(netStreamValue)
	local result = { ["uiFree"] = nil,} 
	result["uiFree"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickChooseRoleID(netStreamValue)
	local result = { ["uiRoleID"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickGetBabyClose(netStreamValue)
	local result = { ["uiRoleID"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickQueryResDropActivityInfo(netStreamValue)
	local result = { ["eQueryType"] = EN_QUERY_RESDROP_ACTIVITY_NULL,} 
	result["eQueryType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickExchangeCollectActivity(netStreamValue)
	local result = { ["uiCollectResDropActivityID"] = nil,["uiCollectActivityIndex"] = nil,} 
	result["uiCollectResDropActivityID"] = netStreamValue:ReadInt()
	result["uiCollectActivityIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ClickDialog(netStreamValue)
	local result = { ["uiDialogType"] = 0,["uiTask"] = 0,["uiTaskRet"] = 0,["uiRetValue"] = 0,["uiTaskRet2"] = 0,["uiRetValue2"] = 0,} 
	result["uiDialogType"] = netStreamValue:ReadInt()
	result["uiTask"] = netStreamValue:ReadInt()
	result["uiTaskRet"] = netStreamValue:ReadInt()
	result["uiRetValue"] = netStreamValue:ReadInt()
	result["uiTaskRet2"] = netStreamValue:ReadInt()
	result["uiRetValue2"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_SetNickName(netStreamValue)
	local result = { ["uiNpcID"] = 0,["acName"] = nil,} 
	result["uiNpcID"] = netStreamValue:ReadInt()
	result["acName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_SetClanBranchState(netStreamValue)
	local result = { ["uiClanID"] = 0,["uiClanType"] = 0,} 
	result["uiClanID"] = netStreamValue:ReadInt()
	result["uiClanType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_KillClanBranch(netStreamValue)
	local result = { ["uiClanTypeID"] = 0,} 
	result["uiClanTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Begin(netStreamValue)
	local result = { ["uiParam"] = 0,} 
	result["uiParam"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_SubmitItem_Select(netStreamValue)
	local result = { ["uiConditionNum"] = 0,["acCondDescID"] = nil,["iNum"] = 0,["auItems"] = nil,} 
	result["uiConditionNum"] = netStreamValue:ReadInt()
	result["acCondDescID"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	local iNum = result["iNum"]
		result["auItems"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["auItems"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_Update_Delegation_State(netStreamValue)
	local result = { ["uiClanTaskCount"] = 0,["auiClanIDList"] = nil,["auiHasStartClanDelegation"] = nil,["uiCityTaskCount"] = 0,["auiCityIDList"] = nil,["auiHasStartCityDelegation"] = nil,} 
	result["uiClanTaskCount"] = netStreamValue:ReadInt()
	local uiClanTaskCount = result["uiClanTaskCount"]
		result["auiClanIDList"] = {}
	for i = 0,uiClanTaskCount or -1 do
		if i >= uiClanTaskCount then
			break
		end
		result["auiClanIDList"][i] = netStreamValue:ReadInt()
	end
	local uiClanTaskCount = result["uiClanTaskCount"]
		result["auiHasStartClanDelegation"] = {}
	for i = 0,uiClanTaskCount or -1 do
		if i >= uiClanTaskCount then
			break
		end
		result["auiHasStartClanDelegation"][i] = netStreamValue:ReadInt()
	end
	result["uiCityTaskCount"] = netStreamValue:ReadInt()
	local uiCityTaskCount = result["uiCityTaskCount"]
		result["auiCityIDList"] = {}
	for i = 0,uiCityTaskCount or -1 do
		if i >= uiCityTaskCount then
			break
		end
		result["auiCityIDList"][i] = netStreamValue:ReadInt()
	end
	local uiCityTaskCount = result["uiCityTaskCount"]
		result["auiHasStartCityDelegation"] = {}
	for i = 0,uiCityTaskCount or -1 do
		if i >= uiCityTaskCount then
			break
		end
		result["auiHasStartCityDelegation"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_ServerFriendOpenTreasure(netStreamValue)
	local result = { ["uiScriptID"] = 0,["uiTreasureID"] = 0,["uiMazeID"] = 0,["uiFromID"] = 0,} 
	result["uiScriptID"] = netStreamValue:ReadInt()
	result["uiTreasureID"] = netStreamValue:ReadInt()
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiFromID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_WeekRoundEnd(netStreamValue)
	local result = { ["uiEndType"] = 0,["uiEndShowType"] = 0,["uiCurScriptID"] = 0,["uiCurDiff"] = 0,["uiTotalScore"] = 0,["uiItemConvertMeridians"] = 0,["uiTakeOutBabyID"] = 0,["uiDontTakeOut"] = 0,["iStoryItemCount"] = 0,["kStoryItem"] = nil,["iAwardItemCount"] = 0,["kAwardItem"] = nil,["iScriptEndItemCount"] = 0,["kScriptEndItem"] = nil,} 
	result["uiEndType"] = netStreamValue:ReadInt()
	result["uiEndShowType"] = netStreamValue:ReadInt()
	result["uiCurScriptID"] = netStreamValue:ReadInt()
	result["uiCurDiff"] = netStreamValue:ReadInt()
	result["uiTotalScore"] = netStreamValue:ReadInt()
	result["uiItemConvertMeridians"] = netStreamValue:ReadInt()
	result["uiTakeOutBabyID"] = netStreamValue:ReadInt()
	result["uiDontTakeOut"] = netStreamValue:ReadInt()
	result["iStoryItemCount"] = netStreamValue:ReadInt()
	result["kStoryItem"] = {}
		local iStoryItemCount = result["iStoryItemCount"]
	for i = 0,iStoryItemCount or -1 do
		if i >= iStoryItemCount then
			break
		end
		local tempkStoryItem = { ["uiEnumType"] = 0,["uiCompleteNum"] = 0,} 
		tempkStoryItem["uiEnumType"] = netStreamValue:ReadInt()
		tempkStoryItem["uiCompleteNum"] = netStreamValue:ReadDword64()
		result["kStoryItem"][i] = tempkStoryItem
	end
	result["iAwardItemCount"] = netStreamValue:ReadInt()
	result["kAwardItem"] = {}
		local iAwardItemCount = result["iAwardItemCount"]
	for i = 0,iAwardItemCount or -1 do
		if i >= iAwardItemCount then
			break
		end
		local tempkAwardItem = { ["uiRewardType"] = 0,["uiBaseID"] = 0,["uiNum"] = 0,} 
		tempkAwardItem["uiRewardType"] = netStreamValue:ReadInt()
		tempkAwardItem["uiBaseID"] = netStreamValue:ReadInt()
		tempkAwardItem["uiNum"] = netStreamValue:ReadInt()
		result["kAwardItem"][i] = tempkAwardItem
	end
	result["iScriptEndItemCount"] = netStreamValue:ReadInt()
	result["kScriptEndItem"] = {}
		local iScriptEndItemCount = result["iScriptEndItemCount"]
	for i = 0,iScriptEndItemCount or -1 do
		if i >= iScriptEndItemCount then
			break
		end
		local tempkScriptEndItem = { ["uiScriptEndType"] = 0,["uiNum"] = 0,} 
		tempkScriptEndItem["uiScriptEndType"] = netStreamValue:ReadInt()
		tempkScriptEndItem["uiNum"] = netStreamValue:ReadInt()
		result["kScriptEndItem"][i] = tempkScriptEndItem
	end
	return result
end

function Decode_SeGC_UpdateWeekRoundData(netStreamValue)
	local result = { ["iStoryItemCount"] = 0,["kStoryItem"] = nil,} 
	result["iStoryItemCount"] = netStreamValue:ReadInt()
	result["kStoryItem"] = {}
		local iStoryItemCount = result["iStoryItemCount"]
	for i = 0,iStoryItemCount or -1 do
		if i >= iStoryItemCount then
			break
		end
		local tempkStoryItem = { ["uiEnumType"] = 0,["uiCompleteNum"] = 0,} 
		tempkStoryItem["uiEnumType"] = netStreamValue:ReadInt()
		tempkStoryItem["uiCompleteNum"] = netStreamValue:ReadDword64()
		result["kStoryItem"][i] = tempkStoryItem
	end
	return result
end

function Decode_SeGC_StartScriptArena(netStreamValue)
	local result = { ["uiArenaType"] = 0,["uiTaskTag"] = 0,["iCount"] = 0,["auiBaseID"] = nil,["iRandCount"] = 0,["auiRandBaseID"] = nil,} 
	result["uiArenaType"] = netStreamValue:ReadInt()
	result["uiTaskTag"] = netStreamValue:ReadInt()
	result["iCount"] = netStreamValue:ReadInt()
	local iCount = result["iCount"]
		result["auiBaseID"] = {}
	for i = 0,iCount or -1 do
		if i >= iCount then
			break
		end
		result["auiBaseID"][i] = netStreamValue:ReadInt()
	end
	result["iRandCount"] = netStreamValue:ReadInt()
	local iRandCount = result["iRandCount"]
		result["auiRandBaseID"] = {}
	for i = 0,iRandCount or -1 do
		if i >= iRandCount then
			break
		end
		result["auiRandBaseID"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_ScriptArenaBattleEnd(netStreamValue)
	local result = { ["uiTagValue"] = 0,} 
	result["uiTagValue"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_LogicDebugInfo(netStreamValue)
	local result = { ["uiMemorySize"] = nil,["uiInstRoleNums"] = nil,["uiNpcRoleNums"] = nil,["uiNpcItemNums"] = nil,["uiMartialNums"] = nil,["uiShopNums"] = nil,["uiTaskNums"] = nil,["uiGiftNums"] = nil,["uiCityNums"] = nil,["uiMapNums"] = nil,["uiAttrsNums"] = nil,["uiAchieveNums"] = nil,["uiEvolutionNums"] = nil,["uiMazeGridNums"] = nil,["uiMazeCardNums"] = nil,["uiMazeAreaNums"] = nil,["uiInstRoleMemSize"] = nil,["uiNpcRoleMemSize"] = nil,["uiNpcItemMemSize"] = nil,["uiMartialMemSize"] = nil,["uiShopMemSize"] = nil,["uiTaskMemSize"] = nil,["uiGiftMemSize"] = nil,["uiCityMemSize"] = nil,["uiMapMemSize"] = nil,["uiAttrsMemSize"] = nil,["uiAchieveMemSize"] = nil,["uiEvolutionMemSize"] = nil,["uiMazeGridMemSize"] = nil,["uiMazeCardMemSize"] = nil,["uiMazeAreaMemSize"] = nil,["uiBattleMemSize"] = nil,["uiInstRoleUpdateMemSize"] = nil,["uiNpcRoleUpdateMemSize"] = nil,["uiNpcItemUpdateMemSize"] = nil,["uiMartialUpdateMemSize"] = nil,["uiShopUpdateMemSize"] = nil,["uiTaskUpdateMemSize"] = nil,["uiGiftUpdateMemSize"] = nil,["uiCityUpdateMemSize"] = nil,["uiMapUpdateMemSize"] = nil,["uiAttrsUpdateMemSize"] = nil,["uiAchieveUpdateMemSize"] = nil,["uiEvolutionUpdateMemSize"] = nil,["uiMazeGridUpdateMemSize"] = nil,["uiMazeCardUpdateMemSize"] = nil,["uiMazeAreaUpdateMemSize"] = nil,["uiInstRoleInsertMemSize"] = nil,["uiNpcRoleInsertMemSize"] = nil,["uiNpcItemInsertMemSize"] = nil,["uiMartialInsertMemSize"] = nil,["uiShopInsertMemSize"] = nil,["uiTaskInsertMemSize"] = nil,["uiGiftInsertMemSize"] = nil,["uiCityInsertMemSize"] = nil,["uiMapInsertMemSize"] = nil,["uiAttrsInsertMemSize"] = nil,["uiAchieveInsertMemSize"] = nil,["uiEvolutionInsertMemSize"] = nil,["uiMazeGridInsertMemSize"] = nil,["uiMazeCardInsertMemSize"] = nil,["uiMazeAreaInsertMemSize"] = nil,["uiSerializeSize"] = nil,["uiGenerateShowSize"] = nil,["uiCostTime"] = nil,["iFuncCallNums"] = 0,["akFuncCallInfos"] = nil,} 
	result["uiMemorySize"] = netStreamValue:ReadInt()
	result["uiInstRoleNums"] = netStreamValue:ReadInt()
	result["uiNpcRoleNums"] = netStreamValue:ReadInt()
	result["uiNpcItemNums"] = netStreamValue:ReadInt()
	result["uiMartialNums"] = netStreamValue:ReadInt()
	result["uiShopNums"] = netStreamValue:ReadInt()
	result["uiTaskNums"] = netStreamValue:ReadInt()
	result["uiGiftNums"] = netStreamValue:ReadInt()
	result["uiCityNums"] = netStreamValue:ReadInt()
	result["uiMapNums"] = netStreamValue:ReadInt()
	result["uiAttrsNums"] = netStreamValue:ReadInt()
	result["uiAchieveNums"] = netStreamValue:ReadInt()
	result["uiEvolutionNums"] = netStreamValue:ReadInt()
	result["uiMazeGridNums"] = netStreamValue:ReadInt()
	result["uiMazeCardNums"] = netStreamValue:ReadInt()
	result["uiMazeAreaNums"] = netStreamValue:ReadInt()
	result["uiInstRoleMemSize"] = netStreamValue:ReadInt()
	result["uiNpcRoleMemSize"] = netStreamValue:ReadInt()
	result["uiNpcItemMemSize"] = netStreamValue:ReadInt()
	result["uiMartialMemSize"] = netStreamValue:ReadInt()
	result["uiShopMemSize"] = netStreamValue:ReadInt()
	result["uiTaskMemSize"] = netStreamValue:ReadInt()
	result["uiGiftMemSize"] = netStreamValue:ReadInt()
	result["uiCityMemSize"] = netStreamValue:ReadInt()
	result["uiMapMemSize"] = netStreamValue:ReadInt()
	result["uiAttrsMemSize"] = netStreamValue:ReadInt()
	result["uiAchieveMemSize"] = netStreamValue:ReadInt()
	result["uiEvolutionMemSize"] = netStreamValue:ReadInt()
	result["uiMazeGridMemSize"] = netStreamValue:ReadInt()
	result["uiMazeCardMemSize"] = netStreamValue:ReadInt()
	result["uiMazeAreaMemSize"] = netStreamValue:ReadInt()
	result["uiBattleMemSize"] = netStreamValue:ReadInt()
	result["uiInstRoleUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiNpcRoleUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiNpcItemUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiMartialUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiShopUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiTaskUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiGiftUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiCityUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiMapUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiAttrsUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiAchieveUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiEvolutionUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiMazeGridUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiMazeCardUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiMazeAreaUpdateMemSize"] = netStreamValue:ReadInt()
	result["uiInstRoleInsertMemSize"] = netStreamValue:ReadInt()
	result["uiNpcRoleInsertMemSize"] = netStreamValue:ReadInt()
	result["uiNpcItemInsertMemSize"] = netStreamValue:ReadInt()
	result["uiMartialInsertMemSize"] = netStreamValue:ReadInt()
	result["uiShopInsertMemSize"] = netStreamValue:ReadInt()
	result["uiTaskInsertMemSize"] = netStreamValue:ReadInt()
	result["uiGiftInsertMemSize"] = netStreamValue:ReadInt()
	result["uiCityInsertMemSize"] = netStreamValue:ReadInt()
	result["uiMapInsertMemSize"] = netStreamValue:ReadInt()
	result["uiAttrsInsertMemSize"] = netStreamValue:ReadInt()
	result["uiAchieveInsertMemSize"] = netStreamValue:ReadInt()
	result["uiEvolutionInsertMemSize"] = netStreamValue:ReadInt()
	result["uiMazeGridInsertMemSize"] = netStreamValue:ReadInt()
	result["uiMazeCardInsertMemSize"] = netStreamValue:ReadInt()
	result["uiMazeAreaInsertMemSize"] = netStreamValue:ReadInt()
	result["uiSerializeSize"] = netStreamValue:ReadInt()
	result["uiGenerateShowSize"] = netStreamValue:ReadInt()
	result["uiCostTime"] = netStreamValue:ReadInt()
	result["iFuncCallNums"] = netStreamValue:ReadInt()
	result["akFuncCallInfos"] = {}
		local iFuncCallNums = result["iFuncCallNums"]
	for i = 0,iFuncCallNums or -1 do
		if i >= iFuncCallNums then
			break
		end
		local tempakFuncCallInfos = { ["acFuncName"] = nil,["uiCallTimes"] = 0,["uiCallCostTime"] = 0,} 
		tempakFuncCallInfos["acFuncName"] = netStreamValue:ReadString()
		tempakFuncCallInfos["uiCallTimes"] = netStreamValue:ReadInt()
		tempakFuncCallInfos["uiCallCostTime"] = netStreamValue:ReadInt()
		result["akFuncCallInfos"][i] = tempakFuncCallInfos
	end
	return result
end

function Decode_SeGC_Display_SystemInfo(netStreamValue)
	local result = { ["eSysInfoType"] = nil,["kContent"] = nil,} 
	result["eSysInfoType"] = netStreamValue:ReadInt()
	result["kContent"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_Dialog(netStreamValue)
	local result = { ["kContent"] = nil,} 
	result["kContent"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_Select(netStreamValue)
	local result = { ["iNum"] = 0,["akContent"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akContent"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakContent = { ["acContent"] = nil,} 
		tempakContent["acContent"] = netStreamValue:ReadString()
		result["akContent"][i] = tempakContent
	end
	return result
end

function Decode_SeGC_Display_MapMove(netStreamValue)
	local result = { ["uiMapID"] = 0,} 
	result["uiMapID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_GameData(netStreamValue)
	local result = { ["eCurState"] = nil,["eCurUIState"] = nil,["uiParam1"] = nil,["uiParam2"] = nil,} 
	result["eCurState"] = netStreamValue:ReadInt()
	result["eCurUIState"] = netStreamValue:ReadInt()
	result["uiParam1"] = netStreamValue:ReadInt()
	result["uiParam2"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_RoleCreate(netStreamValue)
	local result = { ["uiID"] = 0,["bNewRole"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["bNewRole"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_RoleDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_NpcUpdate(netStreamValue)
	local result = { ["uiID"] = 0,["kNpcData"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["kNpcData"] = {["uiTypeID"] = 0,["uiIndex"] = 0,["iGoodEvil"] = 0,["uiStaticItemsFlag"] = 0,["uiStaticEquipsFlag"] = 0,}
		result["kNpcData"]["uiTypeID"] = netStreamValue:ReadInt()
		result["kNpcData"]["uiIndex"] = netStreamValue:ReadInt()
		result["kNpcData"]["iGoodEvil"] = netStreamValue:ReadInt()
		result["kNpcData"]["uiStaticItemsFlag"] = netStreamValue:ReadInt()
		result["kNpcData"]["uiStaticEquipsFlag"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_NpcDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MainRoleInfo(netStreamValue)
	local result = { ["uiInfoNum"] = nil,["akInfos"] = nil,} 
	result["uiInfoNum"] = netStreamValue:ReadInt()
	result["akInfos"] = {}
		local uiInfoNum = result["uiInfoNum"]
	for i = 0,uiInfoNum or -1 do
		if i >= uiInfoNum then
			break
		end
		local tempakInfos = { ["uiDataType"] = 0,["uiValue"] = 0,} 
		tempakInfos["uiDataType"] = netStreamValue:ReadInt()
		tempakInfos["uiValue"] = netStreamValue:ReadInt()
		result["akInfos"][i] = tempakInfos
	end
	return result
end

function Decode_SeGC_Display_TeamInfo(netStreamValue)
	local result = { ["iTeammatesNum"] = nil,["auiTeammates"] = nil,} 
	result["iTeammatesNum"] = netStreamValue:ReadByte()
	local iTeammatesNum = result["iTeammatesNum"]
		result["auiTeammates"] = {}
	for i = 0,iTeammatesNum or -1 do
		if i >= iTeammatesNum then
			break
		end
		result["auiTeammates"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_MainRoleName(netStreamValue)
	local result = { ["kName"] = nil,} 
	result["kName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_MainRolePetInfo(netStreamValue)
	local result = { ["iMainRoleID"] = 0,["iTotalNum"] = nil,["iPetsNum"] = nil,["auiPets"] = nil,} 
	result["iMainRoleID"] = netStreamValue:ReadInt()
	result["iTotalNum"] = netStreamValue:ReadInt()
	result["iPetsNum"] = netStreamValue:ReadInt()
	result["auiPets"] = {}
		local iPetsNum = result["iPetsNum"]
	for i = 0,iPetsNum or -1 do
		if i >= iPetsNum then
			break
		end
		local tempauiPets = { ["uiBaseID"] = 0,["uiFragment"] = 0,} 
		tempauiPets["uiBaseID"] = netStreamValue:ReadInt()
		tempauiPets["uiFragment"] = netStreamValue:ReadInt()
		result["auiPets"][i] = tempauiPets
	end
	return result
end

function Decode_SeGC_Display_MainRoleNickInfo(netStreamValue)
	local result = { ["iNicksNum"] = nil,["auiNicks"] = nil,} 
	result["iNicksNum"] = netStreamValue:ReadInt()
	result["auiNicks"] = {}
		local iNicksNum = result["iNicksNum"]
	for i = 0,iNicksNum or -1 do
		if i >= iNicksNum then
			break
		end
		local tempauiNicks = { ["uiNpcID"] = 0,["acName"] = nil,} 
		tempauiNicks["uiNpcID"] = netStreamValue:ReadInt()
		tempauiNicks["acName"] = netStreamValue:ReadString()
		result["auiNicks"][i] = tempauiNicks
	end
	return result
end

function Decode_SeGC_Display_RoleCommon(netStreamValue)
	local result = { ["iValueChangeFlag"] = nil,["uiID"] = nil,["uiTypeID"] = nil,["uiSex"] = nil,["uiNameID"] = nil,["uiFamilyNameID"] = nil,["uiFirstNameID"] = nil,["uiTitleID"] = nil,["uiPostFixNameID"] = nil,["uiLevel"] = nil,["uiClanID"] = nil,["uiHP"] = nil,["uiMP"] = nil,["uiExp"] = nil,["uiRemainAttrPoint"] = nil,["uiFragment"] = nil,["uiOverlayLevel"] = nil,["iGoodEvil"] = nil,["uiRemainGiftPoint"] = nil,["uiModelID"] = nil,["uiRank"] = nil,["uiMartialNum"] = nil,["uiGiftNum"] = nil,["uiEatFoodNum"] = nil,["uiEatFoodMaxNum"] = nil,["uiMarry"] = nil,["uiSubRole"] = nil,["uiHasSubRole"] = nil,["uiRoleChallengeState"] = nil,["auiHeritGift"] = nil,["auiHeritMartial"] = nil,} 
	local iValueChangeFlag = netStreamValue:ReadInt()
	result["iValueChangeFlag"] = iValueChangeFlag
	if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
		result["uiID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
		result["uiTypeID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
		result["uiSex"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
		result["uiNameID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
		result["uiFamilyNameID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
		result["uiFirstNameID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
		result["uiTitleID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
		result["uiPostFixNameID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
		result["uiLevel"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
		result["uiClanID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
		result["uiHP"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
		result["uiMP"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
		result["uiExp"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
		result["uiRemainAttrPoint"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
		result["uiFragment"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
		result["uiOverlayLevel"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
		result["iGoodEvil"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 17) == ( 1 << 17) then
		result["uiRemainGiftPoint"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
		result["uiModelID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 19) == ( 1 << 19) then
		result["uiRank"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 20) == ( 1 << 20) then
		result["uiMartialNum"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 21) == ( 1 << 21) then
		result["uiGiftNum"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 22) == ( 1 << 22) then
		result["uiEatFoodNum"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 23) == ( 1 << 23) then
		result["uiEatFoodMaxNum"] = netStreamValue:ReadByte()
	end
	result["uiMarry"] = {}
	for i = 0,256 or -1 do
		if i >= 256 then
			break
		end
		result["uiMarry"][i] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 25) == ( 1 << 25) then
		result["uiSubRole"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 26) == ( 1 << 26) then
		result["uiHasSubRole"] = netStreamValue:ReadByte()
	end
	if (iValueChangeFlag & 1 << 27) == ( 1 << 27) then
		result["uiRoleChallengeState"] = netStreamValue:ReadByte()
	end
	result["auiHeritGift"] = {}
	for i = 0,256 or -1 do
		if i >= 256 then
			break
		end
		result["auiHeritGift"][i] = netStreamValue:ReadInt()
	end
	result["auiHeritMartial"] = {}
	for i = 0,256 or -1 do
		if i >= 256 then
			break
		end
		result["auiHeritMartial"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_RoleFavor(netStreamValue)
	local result = { ["uiID"] = 0,["auiFavor"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["auiFavor"] = {}
	for i = 0,SSD_MAX_ROLE_FAVOR_NUM or -1 do
		if i >= SSD_MAX_ROLE_FAVOR_NUM then
			break
		end
		result["auiFavor"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_RoleBro(netStreamValue)
	local result = { ["uiID"] = 0,["uiBroAndSisNum"] = nil,["auiBroAndSis"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiBroAndSisNum"] = netStreamValue:ReadByte()
	local uiBroAndSisNum = result["uiBroAndSisNum"]
		result["auiBroAndSis"] = {}
	for i = 0,uiBroAndSisNum or -1 do
		if i >= uiBroAndSisNum then
			break
		end
		result["auiBroAndSis"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_RoleAttrs(netStreamValue)
	local result = { ["uiID"] = 0,["iAttrsNums"] = nil,["akAttrs"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["iAttrsNums"] = netStreamValue:ReadInt()
	result["akAttrs"] = {}
		local iAttrsNums = result["iAttrsNums"]
	for i = 0,iAttrsNums or -1 do
		if i >= iAttrsNums then
			break
		end
		local tempakAttrs = { ["uiType"] = 0,["iValue"] = 0,["iBaseValue"] = 0,} 
		tempakAttrs["uiType"] = netStreamValue:ReadInt()
		tempakAttrs["iValue"] = netStreamValue:ReadInt()
		tempakAttrs["iBaseValue"] = netStreamValue:ReadInt()
		result["akAttrs"][i] = tempakAttrs
	end
	return result
end

function Decode_SeGC_Display_RoleItems(netStreamValue)
	local result = { ["uiID"] = 0,["iItemNum"] = nil,["iDelItemNum"] = nil,["auiRoleItem"] = nil,["auiDelRoleItem"] = nil,["auiEquipItem"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["iItemNum"] = netStreamValue:ReadInt()
	result["iDelItemNum"] = netStreamValue:ReadInt()
	local iItemNum = result["iItemNum"]
		result["auiRoleItem"] = {}
	for i = 0,iItemNum or -1 do
		if i >= iItemNum then
			break
		end
		result["auiRoleItem"][i] = netStreamValue:ReadInt()
	end
	local iDelItemNum = result["iDelItemNum"]
		result["auiDelRoleItem"] = {}
	for i = 0,iDelItemNum or -1 do
		if i >= iDelItemNum then
			break
		end
		result["auiDelRoleItem"][i] = netStreamValue:ReadInt()
	end
	result["auiEquipItem"] = {}
	for i = 0,REI_NUMS or -1 do
		if i >= REI_NUMS then
			break
		end
		result["auiEquipItem"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_RoleMartials(netStreamValue)
	local result = { ["uiID"] = 0,["iMartialNum"] = nil,["auiRoleMartials"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["iMartialNum"] = netStreamValue:ReadInt()
	local iMartialNum = result["iMartialNum"]
		result["auiRoleMartials"] = {}
	for i = 0,iMartialNum or -1 do
		if i >= iMartialNum then
			break
		end
		result["auiRoleMartials"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_DisplayAchievePoint(netStreamValue)
	local result = { ["uiAchievePoint"] = 0,} 
	result["uiAchievePoint"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_DisplayUnlockRole(netStreamValue)
	local result = { ["uiTitleID"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_DisplayUnlockSkin(netStreamValue)
	local result = { ["uiTitleID"] = nil,["uiIndex"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	result["uiIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_DisplayNewToast(netStreamValue)
	local result = { ["uiBaseID"] = nil,["uiParam1"] = nil,["uiParam2"] = nil,["uiParam3"] = nil,} 
	result["uiBaseID"] = netStreamValue:ReadInt()
	result["uiParam1"] = netStreamValue:ReadInt()
	result["uiParam2"] = netStreamValue:ReadInt()
	result["uiParam3"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_EvolutionDelete(netStreamValue)
	local result = { ["iSize"] = 0,["akEvolutionData"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akEvolutionData"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakEvolutionData = { ["iValueChangeFlag"] = 0,["uiNpcID"] = 0,["uiID"] = 0,["uiType"] = 0,["iParam1"] = 0,["iParam2"] = 0,["iParam3"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadByte()
		tempakEvolutionData["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakEvolutionData["uiNpcID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakEvolutionData["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakEvolutionData["uiType"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakEvolutionData["iParam1"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakEvolutionData["iParam2"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakEvolutionData["iParam3"] = netStreamValue:ReadInt()
		end
		result["akEvolutionData"][i] = tempakEvolutionData
	end
	return result
end

function Decode_SeGC_Display_EvolutionUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akEvolutionData"] = nil,["uiTime"] = 0,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akEvolutionData"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakEvolutionData = { ["iValueChangeFlag"] = 0,["uiNpcID"] = 0,["uiID"] = 0,["uiType"] = 0,["iParam1"] = 0,["iParam2"] = 0,["iParam3"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadByte()
		tempakEvolutionData["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakEvolutionData["uiNpcID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakEvolutionData["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakEvolutionData["uiType"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakEvolutionData["iParam1"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakEvolutionData["iParam2"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakEvolutionData["iParam3"] = netStreamValue:ReadInt()
		end
		result["akEvolutionData"][i] = tempakEvolutionData
	end
	result["uiTime"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_EvolutionRecordUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akEvolutionRecord"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akEvolutionRecord"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakEvolutionRecord = { ["iValueChangeFlag"] = 0,["uiID"] = 0,["uiBaseID"] = 0,["iParam1"] = 0,["iParam2"] = 0,["iParam3"] = 0,["iParam4"] = 0,["uiCityID"] = 0,["iTime"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakEvolutionRecord["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakEvolutionRecord["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakEvolutionRecord["uiBaseID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakEvolutionRecord["iParam1"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakEvolutionRecord["iParam2"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakEvolutionRecord["iParam3"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakEvolutionRecord["iParam4"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakEvolutionRecord["uiCityID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakEvolutionRecord["iTime"] = netStreamValue:ReadInt()
		end
		result["akEvolutionRecord"][i] = tempakEvolutionRecord
	end
	return result
end

function Decode_SeGC_Display_EvolutionRecordDelete(netStreamValue)
	local result = { ["iSize"] = 0,["akEvolutionRecord"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akEvolutionRecord"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakEvolutionRecord = { ["iValueChangeFlag"] = 0,["uiID"] = 0,["uiBaseID"] = 0,["iParam1"] = 0,["iParam2"] = 0,["iParam3"] = 0,["iParam4"] = 0,["uiCityID"] = 0,["iTime"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakEvolutionRecord["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakEvolutionRecord["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakEvolutionRecord["uiBaseID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakEvolutionRecord["iParam1"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakEvolutionRecord["iParam2"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakEvolutionRecord["iParam3"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakEvolutionRecord["iParam4"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakEvolutionRecord["uiCityID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakEvolutionRecord["iTime"] = netStreamValue:ReadInt()
		end
		result["akEvolutionRecord"][i] = tempakEvolutionRecord
	end
	return result
end

function Decode_SeGC_Display_MonthEvolution(netStreamValue)
	local result = { ["uiYear"] = 0,["uiMonth"] = 0,} 
	result["uiYear"] = netStreamValue:ReadInt()
	result["uiMonth"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ItemDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ItemUpdate(netStreamValue)
	local result = { ["iValueChangeFlag"] = 0,["iSize"] = 0,["akRoleItem"] = nil,} 
	local iValueChangeFlag = netStreamValue:ReadByte()
	result["iValueChangeFlag"] = iValueChangeFlag
	if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
		result["iSize"] = netStreamValue:ReadInt()
	end
	result["akRoleItem"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakRoleItem = { ["iValueChangeFlag"] = 0,["uiID"] = 0,["uiTypeID"] = 0,["uiItemNum"] = 0,["uiDueTime"] = 0,["uiEnhanceGrade"] = 0,["uiCoinRemainRecastTimes"] = 0,["iAttrNum"] = 0,["auiAttrData"] = nil,["uiOwnerID"] = 0,["bBelongToMainRole"] = 0,["uiSpendIron"] = 0,["uiPerfectPower"] = 0,["uiSpendTongLingYu"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakRoleItem["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakRoleItem["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakRoleItem["uiTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakRoleItem["uiItemNum"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakRoleItem["uiDueTime"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakRoleItem["uiEnhanceGrade"] = netStreamValue:ReadShort()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakRoleItem["uiCoinRemainRecastTimes"] = netStreamValue:ReadShort()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakRoleItem["iAttrNum"] = netStreamValue:ReadInt()
		end
		local iAttrNum = tempakRoleItem["iAttrNum"]
		tempakRoleItem["auiAttrData"] = {}
		for j = 0,iAttrNum or -1 do
			if j >= iAttrNum then
				break
			end
			local tempauiAttrData = { ["uiAttrUID"] = 0,["uiType"] = 0,["iBaseValue"] = 0,["iExtraValue"] = 0,["uiRecastType"] = 0,} 
			tempauiAttrData["uiAttrUID"] = netStreamValue:ReadInt()
			tempauiAttrData["uiType"] = netStreamValue:ReadInt()
			tempauiAttrData["iBaseValue"] = netStreamValue:ReadInt()
			tempauiAttrData["iExtraValue"] = netStreamValue:ReadInt()
			tempauiAttrData["uiRecastType"] = netStreamValue:ReadByte()
			tempakRoleItem["auiAttrData"][j] = tempauiAttrData
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakRoleItem["uiOwnerID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakRoleItem["bBelongToMainRole"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakRoleItem["uiSpendIron"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakRoleItem["uiPerfectPower"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakRoleItem["uiSpendTongLingYu"] = netStreamValue:ReadInt()
		end
		result["akRoleItem"][i] = tempakRoleItem
	end
	return result
end

function Decode_SeGC_Display_TempBag_Update(netStreamValue)
	local result = { ["iFlag"] = 0,["iLength"] = 0,["auiItemIDs"] = nil,} 
	result["iFlag"] = netStreamValue:ReadByte()
	result["iLength"] = netStreamValue:ReadInt()
	local iLength = result["iLength"]
		result["auiItemIDs"] = {}
	for i = 0,iLength or -1 do
		if i >= iLength then
			break
		end
		result["auiItemIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Click_TempBag_MoveBack(netStreamValue)
	local result = { ["iLength"] = 0,["auiItemIDs"] = nil,} 
	result["iLength"] = netStreamValue:ReadInt()
	local iLength = result["iLength"]
		result["auiItemIDs"] = {}
	for i = 0,iLength or -1 do
		if i >= iLength then
			break
		end
		result["auiItemIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Click_BagCapacity_Buy(netStreamValue)
	local result = { ["uiCount"] = 0,} 
	result["uiCount"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_DRTimer_Update(netStreamValue)
	local result = { ["iFlag"] = 0,["uiTimerID"] = 0,["uiTimerExpiration"] = 0,} 
	result["iFlag"] = netStreamValue:ReadByte()
	result["uiTimerID"] = netStreamValue:ReadInt()
	result["uiTimerExpiration"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MartialDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MartialUpdate(netStreamValue)
	local result = { ["iValueChangeFlag"] = nil,["iSize"] = nil,["akRoleMartial"] = nil,} 
	local iValueChangeFlag = netStreamValue:ReadByte()
	result["iValueChangeFlag"] = iValueChangeFlag
	if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
		result["iSize"] = netStreamValue:ReadInt()
	end
	result["akRoleMartial"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakRoleMartial = { ["iValueChangeFlag"] = nil,["uiID"] = nil,["uiRoleUID"] = nil,["uiTypeID"] = nil,["uiLevel"] = nil,["uiExp"] = nil,["uiExtExpApp"] = nil,["uiMaxLevel"] = nil,["iMartialAttrSize"] = nil,["akMartialAttrs"] = nil,["iMartialUnlockItemSize"] = nil,["auiMartialUnlockItems"] = nil,["iMartialInfluenceSize"] = nil,["akMartialInfluences"] = nil,["iMartialUnlockSkillSize"] = nil,["auiMartialUnlockSkills"] = nil,["iStrongLevel"] = nil,["iStrongCount"] = nil,["uiAttr1"] = nil,["uiAttr2"] = nil,["uiAttr3"] = nil,["uiColdTime"] = nil,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakRoleMartial["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakRoleMartial["uiID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakRoleMartial["uiRoleUID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakRoleMartial["uiTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakRoleMartial["uiLevel"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakRoleMartial["uiExp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakRoleMartial["uiExtExpApp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakRoleMartial["uiMaxLevel"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakRoleMartial["iMartialAttrSize"] = netStreamValue:ReadByte()
		end
		local iMartialAttrSize = tempakRoleMartial["iMartialAttrSize"]
	if iMartialAttrSize ~= nil then 
		tempakRoleMartial["akMartialAttrs"] = {}
		for j = 0,iMartialAttrSize or -1 do
			if j >= iMartialAttrSize then
				break
			end
			local tempakMartialAttrs = { ["uiType"] = nil,["iValue"] = nil,} 
			tempakMartialAttrs["uiType"] = netStreamValue:ReadInt()
			tempakMartialAttrs["iValue"] = netStreamValue:ReadInt()
			tempakRoleMartial["akMartialAttrs"][j] = tempakMartialAttrs
		end
	end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakRoleMartial["iMartialUnlockItemSize"] = netStreamValue:ReadByte()
		end
		local iMartialUnlockItemSize = tempakRoleMartial["iMartialUnlockItemSize"]
	if iMartialUnlockItemSize ~= nil then 
			tempakRoleMartial["auiMartialUnlockItems"] = {}
		for j = 0,iMartialUnlockItemSize or -1 do
			if j >= iMartialUnlockItemSize then
				break
			end
			tempakRoleMartial["auiMartialUnlockItems"][j] = netStreamValue:ReadInt()
		end
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakRoleMartial["iMartialInfluenceSize"] = netStreamValue:ReadByte()
		end
		local iMartialInfluenceSize = tempakRoleMartial["iMartialInfluenceSize"]
	if iMartialInfluenceSize ~= nil then 
		tempakRoleMartial["akMartialInfluences"] = {}
		for j = 0,iMartialInfluenceSize or -1 do
			if j >= iMartialInfluenceSize then
				break
			end
			local tempakMartialInfluences = { ["uiAttrType"] = nil,["uiMartialTypeID"] = nil,["uiMartialValue"] = nil,["uiMartialInit"] = nil,} 
			tempakMartialInfluences["uiAttrType"] = netStreamValue:ReadInt()
			tempakMartialInfluences["uiMartialTypeID"] = netStreamValue:ReadInt()
			tempakMartialInfluences["uiMartialValue"] = netStreamValue:ReadInt()
			tempakMartialInfluences["uiMartialInit"] = netStreamValue:ReadByte()
			tempakRoleMartial["akMartialInfluences"][j] = tempakMartialInfluences
		end
	end
		if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakRoleMartial["iMartialUnlockSkillSize"] = netStreamValue:ReadByte()
		end
		local iMartialUnlockSkillSize = tempakRoleMartial["iMartialUnlockSkillSize"]
	if iMartialUnlockSkillSize ~= nil then 
			tempakRoleMartial["auiMartialUnlockSkills"] = {}
		for j = 0,iMartialUnlockSkillSize or -1 do
			if j >= iMartialUnlockSkillSize then
				break
			end
			tempakRoleMartial["auiMartialUnlockSkills"][j] = netStreamValue:ReadInt()
		end
		end
		if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakRoleMartial["iStrongLevel"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakRoleMartial["iStrongCount"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 17) == ( 1 << 17) then
			tempakRoleMartial["uiAttr1"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
			tempakRoleMartial["uiAttr2"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 19) == ( 1 << 19) then
			tempakRoleMartial["uiAttr3"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 20) == ( 1 << 20) then
			tempakRoleMartial["uiColdTime"] = netStreamValue:ReadByte()
		end
		result["akRoleMartial"][i] = tempakRoleMartial
	end
	return result
end

function Decode_SeGC_Display_RoleGift(netStreamValue)
	local result = { ["uiID"] = 0,["giftNum"] = nil,["uiGiftUsedNum"] = nil,["uiRemainGiftPoint"] = nil,["auiRoleGift"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["giftNum"] = netStreamValue:ReadInt()
	result["uiGiftUsedNum"] = netStreamValue:ReadInt()
	result["uiRemainGiftPoint"] = netStreamValue:ReadInt()
	local giftNum = result["giftNum"]
		result["auiRoleGift"] = {}
	for i = 0,giftNum or -1 do
		if i >= giftNum then
			break
		end
		result["auiRoleGift"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_GiftUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akRoleGift"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akRoleGift"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakRoleGift = { ["uiID"] = 0,["uiTypeID"] = 0,["uiGiftSourceType"] = 0,["bIsGrowUp"] = 0,} 
		tempakRoleGift["uiID"] = netStreamValue:ReadInt()
		tempakRoleGift["uiTypeID"] = netStreamValue:ReadInt()
		tempakRoleGift["uiGiftSourceType"] = netStreamValue:ReadInt()
		tempakRoleGift["bIsGrowUp"] = netStreamValue:ReadByte()
		result["akRoleGift"][i] = tempakRoleGift
	end
	return result
end

function Decode_SeGC_Display_GiftDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_RoleWishTasks(netStreamValue)
	local result = { ["uiID"] = 0,["iWishTasksNum"] = nil,["auiRoleWishTasks"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["iWishTasksNum"] = netStreamValue:ReadInt()
	local iWishTasksNum = result["iWishTasksNum"]
		result["auiRoleWishTasks"] = {}
	for i = 0,iWishTasksNum or -1 do
		if i >= iWishTasksNum then
			break
		end
		result["auiRoleWishTasks"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_WishTaskUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akRoleWishTask"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akRoleWishTask"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakRoleWishTask = { ["uiID"] = 0,["uiTypeID"] = 0,["uiState"] = 0,["uiReward"] = 0,["uiRoleCard"] = 0,["bFirstGet"] = 0,} 
		tempakRoleWishTask["uiID"] = netStreamValue:ReadInt()
		tempakRoleWishTask["uiTypeID"] = netStreamValue:ReadInt()
		tempakRoleWishTask["uiState"] = netStreamValue:ReadInt()
		tempakRoleWishTask["uiReward"] = netStreamValue:ReadInt()
		tempakRoleWishTask["uiRoleCard"] = netStreamValue:ReadInt()
		tempakRoleWishTask["bFirstGet"] = netStreamValue:ReadByte()
		result["akRoleWishTask"][i] = tempakRoleWishTask
	end
	return result
end

function Decode_SeGC_Display_WishTaskDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_AchieveDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_UnLockUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akItems"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akItems"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakItems = { ["uiUnLockType"] = 0,["uiUnLockID"] = 0,["uiUnLockNum"] = 0,} 
		tempakItems["uiUnLockType"] = netStreamValue:ReadInt()
		tempakItems["uiUnLockID"] = netStreamValue:ReadInt()
		tempakItems["uiUnLockNum"] = netStreamValue:ReadInt()
		result["akItems"][i] = tempakItems
	end
	return result
end

function Decode_SeGC_Display_TagUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akTag"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akTag"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakTag = { ["uiID"] = 0,["uiTypeID"] = 0,["uiValue"] = 0,} 
		tempakTag["uiID"] = netStreamValue:ReadInt()
		tempakTag["uiTypeID"] = netStreamValue:ReadInt()
		tempakTag["uiValue"] = netStreamValue:ReadInt()
		result["akTag"][i] = tempakTag
	end
	return result
end

function Decode_SeGC_Display_TagDelete(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_WeekRoundItemOut(netStreamValue)
	local result = { ["iSize"] = 0,["auiItemIDs"] = nil,["uiBackJingmai"] = 0,} 
	result["iSize"] = netStreamValue:ReadInt()
	local iSize = result["iSize"]
		result["auiItemIDs"] = {}
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		result["auiItemIDs"][i] = netStreamValue:ReadInt()
	end
	result["uiBackJingmai"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_WeekRoundItemIn(netStreamValue)
	local result = { ["iSize"] = 0,} 
	result["iSize"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Item_ReForge_Result(netStreamValue)
	local result = { ["uiDynamicAttrID"] = 0,["uiAttrTypeID"] = 0,["iBaseValue"] = 0,["iExtraValue"] = 0,["uiEnhanceWhiteAttrTypeID"] = 0,["uiBlueAttrTypeID"] = 0,["iBlueBaseValue"] = 0,} 
	result["uiDynamicAttrID"] = netStreamValue:ReadInt()
	result["uiAttrTypeID"] = netStreamValue:ReadInt()
	result["iBaseValue"] = netStreamValue:ReadInt()
	result["iExtraValue"] = netStreamValue:ReadInt()
	result["uiEnhanceWhiteAttrTypeID"] = netStreamValue:ReadInt()
	result["uiBlueAttrTypeID"] = netStreamValue:ReadInt()
	result["iBlueBaseValue"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_TaskAdd(netStreamValue)
	local result = { ["uiID"] = 0,["uiTypeID"] = 0,["uiTaskProgressType"] = 0,["uiTaskState"] = 0,["iDescStateSize"] = 0,["auiDescStates"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiTypeID"] = netStreamValue:ReadInt()
	result["uiTaskProgressType"] = netStreamValue:ReadInt()
	result["uiTaskState"] = netStreamValue:ReadInt()
	result["iDescStateSize"] = netStreamValue:ReadInt()
	result["auiDescStates"] = {}
		local iDescStateSize = result["iDescStateSize"]
	for i = 0,iDescStateSize or -1 do
		if i >= iDescStateSize then
			break
		end
		local tempauiDescStates = { ["uiDescID"] = 0,["uiDescState"] = 0,["auiDescProcess"] = nil,} 
		tempauiDescStates["uiDescID"] = netStreamValue:ReadInt()
		tempauiDescStates["uiDescState"] = netStreamValue:ReadInt()
		tempauiDescStates["auiDescProcess"] = {}
		for j = 0,4 or -1 do
			if j >= 4 then
				break
			end
			tempauiDescStates["auiDescProcess"][j] = netStreamValue:ReadInt()
		end
		result["auiDescStates"][i] = tempauiDescStates
	end
	return result
end

function Decode_SeGC_Display_TaskUpdate(netStreamValue)
	local result = { ["uiID"] = 0,["uiTypeID"] = 0,["uiTaskProgressType"] = 0,["uiTaskState"] = 0,["iDescStateSize"] = 0,["uiCompleteBranchReward"] = 0,["auiDescStates"] = nil,["iNotRepeatedEdgeSize"] = 0,["auiFinishNotRepeatedEdge"] = nil,["iEdgeSize"] = 0,["auiEdgeIdList"] = nil,["akEdgeRegState"] = nil,["akEdgeCondState"] = nil,["uiTaskGroup"] = 0,["uiNormalRewardCount"] = 0,["auiTaskNormalRewardList"] = nil,["uiRewardCount"] = 0,["auiTaskRewardList"] = nil,["uiRewardGoodEvil"] = 0,["uiRoleDispositionRewardSize"] = 0,["auiRoleDispositionRole"] = nil,["auiRoleDispositionValue"] = nil,["uiClanDispositionRewardSize"] = 0,["auiClanDispositionClan"] = nil,["auiClanDispositionValue"] = nil,["uiCityDispositionRewardSize"] = 0,["auiCityDispositionCity"] = nil,["auiCityDispositionValue"] = nil,["uiRoleCardReward"] = 0,["bGetRoleCardReward"] = 0,["uiTaskLevel"] = 0,["uiTaskDifficulty"] = 0,["uiCustomKeyDyDataSize"] = 0,["auiCustomKeyDyDataKeyList"] = nil,["auiCustomKeyDyDataValueList"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiTypeID"] = netStreamValue:ReadInt()
	result["uiTaskProgressType"] = netStreamValue:ReadInt()
	result["uiTaskState"] = netStreamValue:ReadInt()
	result["iDescStateSize"] = netStreamValue:ReadInt()
	result["uiCompleteBranchReward"] = netStreamValue:ReadInt()
	result["auiDescStates"] = {}
		local iDescStateSize = result["iDescStateSize"]
	for i = 0,iDescStateSize or -1 do
		if i >= iDescStateSize then
			break
		end
		local tempauiDescStates = { ["uiDescID"] = 0,["uiDescState"] = 0,["auiDescProcess"] = nil,} 
		tempauiDescStates["uiDescID"] = netStreamValue:ReadInt()
		tempauiDescStates["uiDescState"] = netStreamValue:ReadInt()
		tempauiDescStates["auiDescProcess"] = {}
		for j = 0,4 or -1 do
			if j >= 4 then
				break
			end
			tempauiDescStates["auiDescProcess"][j] = netStreamValue:ReadInt()
		end
		result["auiDescStates"][i] = tempauiDescStates
	end
	result["iNotRepeatedEdgeSize"] = netStreamValue:ReadInt()
	local iNotRepeatedEdgeSize = result["iNotRepeatedEdgeSize"]
		result["auiFinishNotRepeatedEdge"] = {}
	for i = 0,iNotRepeatedEdgeSize or -1 do
		if i >= iNotRepeatedEdgeSize then
			break
		end
		result["auiFinishNotRepeatedEdge"][i] = netStreamValue:ReadInt()
	end
	result["iEdgeSize"] = netStreamValue:ReadInt()
	local iEdgeSize = result["iEdgeSize"]
		result["auiEdgeIdList"] = {}
	for i = 0,iEdgeSize or -1 do
		if i >= iEdgeSize then
			break
		end
		result["auiEdgeIdList"][i] = netStreamValue:ReadInt()
	end
	local iEdgeSize = result["iEdgeSize"]
		result["akEdgeRegState"] = {}
	for i = 0,iEdgeSize or -1 do
		if i >= iEdgeSize then
			break
		end
		result["akEdgeRegState"][i] = netStreamValue:ReadInt()
	end
	local iEdgeSize = result["iEdgeSize"]
		result["akEdgeCondState"] = {}
	for i = 0,iEdgeSize or -1 do
		if i >= iEdgeSize then
			break
		end
		result["akEdgeCondState"][i] = netStreamValue:ReadInt()
	end
	result["uiTaskGroup"] = netStreamValue:ReadInt()
	result["uiNormalRewardCount"] = netStreamValue:ReadInt()
	local uiNormalRewardCount = result["uiNormalRewardCount"]
		result["auiTaskNormalRewardList"] = {}
	for i = 0,uiNormalRewardCount or -1 do
		if i >= uiNormalRewardCount then
			break
		end
		result["auiTaskNormalRewardList"][i] = netStreamValue:ReadInt()
	end
	result["uiRewardCount"] = netStreamValue:ReadInt()
	local uiRewardCount = result["uiRewardCount"]
		result["auiTaskRewardList"] = {}
	for i = 0,uiRewardCount or -1 do
		if i >= uiRewardCount then
			break
		end
		result["auiTaskRewardList"][i] = netStreamValue:ReadInt()
	end
	result["uiRewardGoodEvil"] = netStreamValue:ReadInt()
	result["uiRoleDispositionRewardSize"] = netStreamValue:ReadInt()
	local uiRoleDispositionRewardSize = result["uiRoleDispositionRewardSize"]
		result["auiRoleDispositionRole"] = {}
	for i = 0,uiRoleDispositionRewardSize or -1 do
		if i >= uiRoleDispositionRewardSize then
			break
		end
		result["auiRoleDispositionRole"][i] = netStreamValue:ReadInt()
	end
	local uiRoleDispositionRewardSize = result["uiRoleDispositionRewardSize"]
		result["auiRoleDispositionValue"] = {}
	for i = 0,uiRoleDispositionRewardSize or -1 do
		if i >= uiRoleDispositionRewardSize then
			break
		end
		result["auiRoleDispositionValue"][i] = netStreamValue:ReadInt()
	end
	result["uiClanDispositionRewardSize"] = netStreamValue:ReadInt()
	local uiClanDispositionRewardSize = result["uiClanDispositionRewardSize"]
		result["auiClanDispositionClan"] = {}
	for i = 0,uiClanDispositionRewardSize or -1 do
		if i >= uiClanDispositionRewardSize then
			break
		end
		result["auiClanDispositionClan"][i] = netStreamValue:ReadInt()
	end
	local uiClanDispositionRewardSize = result["uiClanDispositionRewardSize"]
		result["auiClanDispositionValue"] = {}
	for i = 0,uiClanDispositionRewardSize or -1 do
		if i >= uiClanDispositionRewardSize then
			break
		end
		result["auiClanDispositionValue"][i] = netStreamValue:ReadInt()
	end
	result["uiCityDispositionRewardSize"] = netStreamValue:ReadInt()
	local uiCityDispositionRewardSize = result["uiCityDispositionRewardSize"]
		result["auiCityDispositionCity"] = {}
	for i = 0,uiCityDispositionRewardSize or -1 do
		if i >= uiCityDispositionRewardSize then
			break
		end
		result["auiCityDispositionCity"][i] = netStreamValue:ReadInt()
	end
	local uiCityDispositionRewardSize = result["uiCityDispositionRewardSize"]
		result["auiCityDispositionValue"] = {}
	for i = 0,uiCityDispositionRewardSize or -1 do
		if i >= uiCityDispositionRewardSize then
			break
		end
		result["auiCityDispositionValue"][i] = netStreamValue:ReadInt()
	end
	result["uiRoleCardReward"] = netStreamValue:ReadInt()
	result["bGetRoleCardReward"] = netStreamValue:ReadInt()
	result["uiTaskLevel"] = netStreamValue:ReadInt()
	result["uiTaskDifficulty"] = netStreamValue:ReadInt()
	result["uiCustomKeyDyDataSize"] = netStreamValue:ReadInt()
	local uiCustomKeyDyDataSize = result["uiCustomKeyDyDataSize"]
		result["auiCustomKeyDyDataKeyList"] = {}
	for i = 0,uiCustomKeyDyDataSize or -1 do
		if i >= uiCustomKeyDyDataSize then
			break
		end
		result["auiCustomKeyDyDataKeyList"][i] = netStreamValue:ReadInt()
	end
	local uiCustomKeyDyDataSize = result["uiCustomKeyDyDataSize"]
		result["auiCustomKeyDyDataValueList"] = {}
	for i = 0,uiCustomKeyDyDataSize or -1 do
		if i >= uiCustomKeyDyDataSize then
			break
		end
		result["auiCustomKeyDyDataValueList"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_TaskComplete(netStreamValue)
	local result = { ["uiID"] = 0,["uiTaskProgressType"] = 0,["uiTaskDesc"] = 0,["uiFinalDispositionDeltaNums"] = 0,["auiFinalDispositionDeltaRole"] = nil,["aiFinalDispositionDeltaValue"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiTaskProgressType"] = netStreamValue:ReadInt()
	result["uiTaskDesc"] = netStreamValue:ReadInt()
	result["uiFinalDispositionDeltaNums"] = netStreamValue:ReadInt()
	local uiFinalDispositionDeltaNums = result["uiFinalDispositionDeltaNums"]
		result["auiFinalDispositionDeltaRole"] = {}
	for i = 0,uiFinalDispositionDeltaNums or -1 do
		if i >= uiFinalDispositionDeltaNums then
			break
		end
		result["auiFinalDispositionDeltaRole"][i] = netStreamValue:ReadInt()
	end
	local uiFinalDispositionDeltaNums = result["uiFinalDispositionDeltaNums"]
		result["aiFinalDispositionDeltaValue"] = {}
	for i = 0,uiFinalDispositionDeltaNums or -1 do
		if i >= uiFinalDispositionDeltaNums then
			break
		end
		result["aiFinalDispositionDeltaValue"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_TaskRemove(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_EnterBigMap(netStreamValue)
	local result = { ["uiTemp"] = 0,} 
	result["uiTemp"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ShopItem(netStreamValue)
	local result = { ["uiFlag"] = 0,["uiShopID"] = 0,["uiSize"] = 0,["akShopItems"] = nil,} 
	result["uiFlag"] = netStreamValue:ReadInt()
	result["uiShopID"] = netStreamValue:ReadInt()
	result["uiSize"] = netStreamValue:ReadInt()
	result["akShopItems"] = {}
		local uiSize = result["uiSize"]
	for i = 0,uiSize or -1 do
		if i >= uiSize then
			break
		end
		local tempakShopItems = { ["uiShopItemID"] = nil,["uiNum"] = nil,["uiPrice"] = nil,} 
		tempakShopItems["uiShopItemID"] = netStreamValue:ReadInt()
		tempakShopItems["uiNum"] = netStreamValue:ReadInt()
		tempakShopItems["uiPrice"] = netStreamValue:ReadInt()
		result["akShopItems"][i] = tempakShopItems
	end
	return result
end

function Decode_SeGC_Display_Disposition(netStreamValue)
	local result = { ["iNums"] = 0,["akDispositions"] = nil,} 
	result["iNums"] = netStreamValue:ReadInt()
	result["akDispositions"] = {}
		local iNums = result["iNums"]
	for i = 0,iNums or -1 do
		if i >= iNums then
			break
		end
		local tempakDispositions = { ["iNums"] = 0,["uiFromTypeID"] = 0,["auiToTypeIDList"] = nil,["aiValueList"] = nil,} 
		tempakDispositions["iNums"] = netStreamValue:ReadInt()
		tempakDispositions["uiFromTypeID"] = netStreamValue:ReadInt()
		local iNums = tempakDispositions["iNums"]
			tempakDispositions["auiToTypeIDList"] = {}
		for j = 0,iNums or -1 do
			if j >= iNums then
				break
			end
			tempakDispositions["auiToTypeIDList"][j] = netStreamValue:ReadInt()
		end
		local iNums = tempakDispositions["iNums"]
			tempakDispositions["aiValueList"] = {}
		for j = 0,iNums or -1 do
			if j >= iNums then
				break
			end
			tempakDispositions["aiValueList"][j] = netStreamValue:ReadInt()
		end
		result["akDispositions"][i] = tempakDispositions
	end
	return result
end

function Decode_SeGC_Display_CreateMainRole(netStreamValue)
	local result = { ["iNum"] = 0,["akRoles"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akRoles"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRoles = { ["uiTypeID"] = 0,["uiChild"] = 0,["uiRank"] = 0,["uiAttrCount"] = 0,["akAttrs"] = nil,["uiGifts"] = 0,["uiUnlock"] = 0,} 
		tempakRoles["uiTypeID"] = netStreamValue:ReadInt()
		tempakRoles["uiChild"] = netStreamValue:ReadInt()
		tempakRoles["uiRank"] = netStreamValue:ReadInt()
		tempakRoles["uiAttrCount"] = netStreamValue:ReadInt()
		local uiAttrCount = tempakRoles["uiAttrCount"]
		tempakRoles["akAttrs"] = {}
		for j = 0,uiAttrCount or -1 do
			if j >= uiAttrCount then
				break
			end
			local tempakAttrs = { ["uiAttrType"] = 0,["iAttrValue"] = 0,} 
			tempakAttrs["uiAttrType"] = netStreamValue:ReadInt()
			tempakAttrs["iAttrValue"] = netStreamValue:ReadInt()
			tempakRoles["akAttrs"][j] = tempakAttrs
		end
		tempakRoles["uiGifts"] = {}
		for j = 0,SSD_MAX_ROLE_GIFT or -1 do
			if j >= SSD_MAX_ROLE_GIFT then
				break
			end
			tempakRoles["uiGifts"][j] = netStreamValue:ReadInt()
		end
		tempakRoles["uiUnlock"] = {}
		for j = 0,SSD_MAX_ROLE_SKIN or -1 do
			if j >= SSD_MAX_ROLE_SKIN then
				break
			end
			tempakRoles["uiUnlock"][j] = netStreamValue:ReadInt()
		end
		result["akRoles"][i] = tempakRoles
	end
	return result
end

function Decode_SeGC_Display_CreateBabyRole(netStreamValue)
	local result = { ["iNum"] = 0,["akRoles"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akRoles"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRoles = { ["uiTypeID"] = 0,["uiBabyStateID"] = 0,["uiChild"] = 0,["uiAttrCount"] = 0,["akAttrs"] = nil,["uiGifts"] = 0,["uiUnlock"] = 0,} 
		tempakRoles["uiTypeID"] = netStreamValue:ReadInt()
		tempakRoles["uiBabyStateID"] = netStreamValue:ReadInt()
		tempakRoles["uiChild"] = netStreamValue:ReadInt()
		tempakRoles["uiAttrCount"] = netStreamValue:ReadInt()
		local uiAttrCount = tempakRoles["uiAttrCount"]
		tempakRoles["akAttrs"] = {}
		for j = 0,uiAttrCount or -1 do
			if j >= uiAttrCount then
				break
			end
			local tempakAttrs = { ["uiAttrType"] = 0,["iAttrValue"] = 0,} 
			tempakAttrs["uiAttrType"] = netStreamValue:ReadInt()
			tempakAttrs["iAttrValue"] = netStreamValue:ReadInt()
			tempakRoles["akAttrs"][j] = tempakAttrs
		end
		tempakRoles["uiGifts"] = {}
		for j = 0,SSD_MAX_ROLE_GIFT or -1 do
			if j >= SSD_MAX_ROLE_GIFT then
				break
			end
			tempakRoles["uiGifts"][j] = netStreamValue:ReadInt()
		end
		tempakRoles["uiUnlock"] = {}
		for j = 0,SSD_MAX_ROLE_SKIN or -1 do
			if j >= SSD_MAX_ROLE_SKIN then
				break
			end
			tempakRoles["uiUnlock"][j] = netStreamValue:ReadInt()
		end
		result["akRoles"][i] = tempakRoles
	end
	return result
end

function Decode_SeGC_DisplayCityData(netStreamValue)
	local result = { ["iNum"] = 0,["akCitys"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akCitys"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakCitys = { ["uiCityID"] = 0,["uiWeatherID"] = 0,["uiState"] = 0,["iNum"] = 0,["akCityEvents"] = nil,["iCityDispo"] = 0,["uiTimerCount"] = 0,["auiTimers"] = nil,} 
		tempakCitys["uiCityID"] = netStreamValue:ReadInt()
		tempakCitys["uiWeatherID"] = netStreamValue:ReadInt()
		tempakCitys["uiState"] = netStreamValue:ReadInt()
		tempakCitys["iNum"] = netStreamValue:ReadInt()
		local iNum = tempakCitys["iNum"]
		tempakCitys["akCityEvents"] = {}
		for j = 0,iNum or -1 do
			if j >= iNum then
				break
			end
			local tempakCityEvents = { ["uiPos"] = nil,["uiType"] = nil,["uiTag"] = nil,["uiEx"] = nil,["uiTask"] = nil,} 
			tempakCityEvents["uiPos"] = netStreamValue:ReadInt()
			tempakCityEvents["uiType"] = netStreamValue:ReadInt()
			tempakCityEvents["uiTag"] = netStreamValue:ReadInt()
			tempakCityEvents["uiEx"] = netStreamValue:ReadInt()
			tempakCityEvents["uiTask"] = netStreamValue:ReadInt()
			tempakCitys["akCityEvents"][j] = tempakCityEvents
		end
		tempakCitys["iCityDispo"] = netStreamValue:ReadInt()
		tempakCitys["uiTimerCount"] = netStreamValue:ReadInt()
		local uiTimerCount = tempakCitys["uiTimerCount"]
			tempakCitys["auiTimers"] = {}
		for j = 0,uiTimerCount or -1 do
			if j >= uiTimerCount then
				break
			end
			tempakCitys["auiTimers"][j] = netStreamValue:ReadInt()
		end
		result["akCitys"][i] = tempakCitys
	end
	return result
end

function Decode_SeGC_DisplayCityMove(netStreamValue)
	local result = { ["uiSrcCityID"] = 0,["uiDstCityID"] = 0,["uiEventSrcCityID"] = 0,["uiEventDstCityID"] = 0,["uiLastMoveDstCityID"] = 0,["uiRandomCityMoveNpcCount"] = 0,["akRandomCityMoveNpcInfos"] = nil,} 
	result["uiSrcCityID"] = netStreamValue:ReadInt()
	result["uiDstCityID"] = netStreamValue:ReadInt()
	result["uiEventSrcCityID"] = netStreamValue:ReadInt()
	result["uiEventDstCityID"] = netStreamValue:ReadInt()
	result["uiLastMoveDstCityID"] = netStreamValue:ReadInt()
	result["uiRandomCityMoveNpcCount"] = netStreamValue:ReadInt()
	result["akRandomCityMoveNpcInfos"] = {}
		local uiRandomCityMoveNpcCount = result["uiRandomCityMoveNpcCount"]
	for i = 0,uiRandomCityMoveNpcCount or -1 do
		if i >= uiRandomCityMoveNpcCount then
			break
		end
		local tempakRandomCityMoveNpcInfos = { ["uiRoleID"] = 0,["uiSrcCityID"] = 0,["uiDstCityID"] = 0,["uiDstMapID"] = 0,} 
		tempakRandomCityMoveNpcInfos["uiRoleID"] = netStreamValue:ReadInt()
		tempakRandomCityMoveNpcInfos["uiSrcCityID"] = netStreamValue:ReadInt()
		tempakRandomCityMoveNpcInfos["uiDstCityID"] = netStreamValue:ReadInt()
		tempakRandomCityMoveNpcInfos["uiDstMapID"] = netStreamValue:ReadInt()
		result["akRandomCityMoveNpcInfos"][i] = tempakRandomCityMoveNpcInfos
	end
	return result
end

function Decode_SeGC_Display_RandomGift(netStreamValue)
	local result = { ["uiGifts"] = nil,} 
	result["uiGifts"] = {}
	for i = 0,SSD_RANDOMGIFT_COUNT or -1 do
		if i >= SSD_RANDOMGIFT_COUNT then
			break
		end
		result["uiGifts"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_RandomWishRewardPool(netStreamValue)
	local result = { ["uiWishRewards"] = nil,} 
	result["uiWishRewards"] = {}
	for i = 0,SSD_RANDOMWISHTTASKREWARD_COUNT or -1 do
		if i >= SSD_RANDOMWISHTTASKREWARD_COUNT then
			break
		end
		result["uiWishRewards"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_ChooseWishRewards(netStreamValue)
	local result = { ["uiWishReward"] = 0,["uiCode"] = 0,} 
	result["uiWishReward"] = netStreamValue:ReadInt()
	result["uiCode"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ExecutePlot(netStreamValue)
	local result = { ["uiTaskID"] = 0,["uiPlotCount"] = 0,["auiPlotID"] = nil,} 
	result["uiTaskID"] = netStreamValue:ReadInt()
	result["uiPlotCount"] = netStreamValue:ReadInt()
	local uiPlotCount = result["uiPlotCount"]
		result["auiPlotID"] = {}
	for i = 0,uiPlotCount or -1 do
		if i >= uiPlotCount then
			break
		end
		result["auiPlotID"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_ExecuteCustomPlot(netStreamValue)
	local result = { ["uiTaskID"] = 0,["uiPlotType"] = nil,["sPlotParam1"] = nil,["sPlotParam2"] = nil,["sPlotParam3"] = nil,["sPlotParam4"] = nil,["sPlotParam5"] = nil,["sPlotParam6"] = nil,["sPlotParam7"] = nil,["sPlotParam8"] = nil,["sPlotParam9"] = nil,["sPlotParam10"] = nil,} 
	result["uiTaskID"] = netStreamValue:ReadInt()
	result["uiPlotType"] = netStreamValue:ReadInt()
	result["sPlotParam1"] = netStreamValue:ReadString()
	result["sPlotParam2"] = netStreamValue:ReadString()
	result["sPlotParam3"] = netStreamValue:ReadString()
	result["sPlotParam4"] = netStreamValue:ReadString()
	result["sPlotParam5"] = netStreamValue:ReadString()
	result["sPlotParam6"] = netStreamValue:ReadString()
	result["sPlotParam7"] = netStreamValue:ReadString()
	result["sPlotParam8"] = netStreamValue:ReadString()
	result["sPlotParam9"] = netStreamValue:ReadString()
	result["sPlotParam10"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_DisplayMapAdvLoots(netStreamValue)
	local result = { ["iNum"] = 0,["akAdvLootInfos"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akAdvLootInfos"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakAdvLootInfos = { ["uiID"] = 0,["uiSiteType"] = 0,["uiSiteID"] = 0,["uiAdvLootID"] = 0,["uiAdvLootType"] = 0,["uiNum"] = 0,} 
		tempakAdvLootInfos["uiID"] = netStreamValue:ReadInt()
		tempakAdvLootInfos["uiSiteType"] = netStreamValue:ReadInt()
		tempakAdvLootInfos["uiSiteID"] = netStreamValue:ReadInt()
		tempakAdvLootInfos["uiAdvLootID"] = netStreamValue:ReadInt()
		tempakAdvLootInfos["uiAdvLootType"] = netStreamValue:ReadInt()
		tempakAdvLootInfos["uiNum"] = netStreamValue:ReadInt()
		result["akAdvLootInfos"][i] = tempakAdvLootInfos
	end
	return result
end

function Decode_SeGC_Display_MazeUpdate(netStreamValue)
	local result = { ["iNum"] = 0,["akMazeDatas"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akMazeDatas"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakMazeDatas = { ["uiID"] = 0,["uiTypeID"] = 0,["uiCurAreaIndex"] = 0,["uiCurPosRow"] = 0,["uiCurPosColumn"] = 0,["iBuffCount"] = 0,["auiBuffIDs"] = nil,["iAreaCount"] = 0,["auiAreaIDs"] = nil,} 
		tempakMazeDatas["uiID"] = netStreamValue:ReadInt()
		tempakMazeDatas["uiTypeID"] = netStreamValue:ReadInt()
		tempakMazeDatas["uiCurAreaIndex"] = netStreamValue:ReadInt()
		tempakMazeDatas["uiCurPosRow"] = netStreamValue:ReadInt()
		tempakMazeDatas["uiCurPosColumn"] = netStreamValue:ReadInt()
		tempakMazeDatas["iBuffCount"] = netStreamValue:ReadInt()
		local iBuffCount = tempakMazeDatas["iBuffCount"]
		tempakMazeDatas["auiBuffIDs"] = {}
		for j = 0,iBuffCount or -1 do
			if j >= iBuffCount then
				break
			end
			local tempauiBuffIDs = { ["iBuffTypeID"] = 0,["iLayer"] = 0,} 
			tempauiBuffIDs["iBuffTypeID"] = netStreamValue:ReadInt()
			tempauiBuffIDs["iLayer"] = netStreamValue:ReadInt()
			tempakMazeDatas["auiBuffIDs"][j] = tempauiBuffIDs
		end
		tempakMazeDatas["iAreaCount"] = netStreamValue:ReadInt()
		local iAreaCount = tempakMazeDatas["iAreaCount"]
			tempakMazeDatas["auiAreaIDs"] = {}
		for j = 0,iAreaCount or -1 do
			if j >= iAreaCount then
				break
			end
			tempakMazeDatas["auiAreaIDs"][j] = netStreamValue:ReadInt()
		end
		result["akMazeDatas"][i] = tempakMazeDatas
	end
	return result
end

function Decode_SeGC_Display_MazeCardUpdate(netStreamValue)
	local result = { ["iNum"] = 0,["akMazeCardDatas"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akMazeCardDatas"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakMazeCardDatas = { ["uiID"] = 0,["uiTypeID"] = 0,["uiNameID"] = 0,["uiArtSettingID"] = 0,["uiNeverAutoMove"] = 0,["uiNeverAutoTrigger"] = 0,["uiPlotID"] = 0,["uiRoleID"] = nil,["kCardItem"] = nil,["uiUnlockGiftType"] = nil,["uiUnlockGiftLevel"] = nil,["uiClickAudio"] = nil,["uiCardType"] = nil,["uiCardSecondType"] = nil,["uiNeedResetTreasure"] = nil,["uiTaskID"] = nil,} 
		tempakMazeCardDatas["uiID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiTypeID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiNameID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiArtSettingID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiNeverAutoMove"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiNeverAutoTrigger"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiPlotID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiRoleID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["kCardItem"] = {}
		tempakMazeCardDatas["kCardItem"]["uiNameID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["kCardItem"]["uiModelID"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiUnlockGiftType"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiUnlockGiftLevel"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiClickAudio"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiCardType"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiCardSecondType"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiNeedResetTreasure"] = netStreamValue:ReadInt()
		tempakMazeCardDatas["uiTaskID"] = netStreamValue:ReadInt()
		result["akMazeCardDatas"][i] = tempakMazeCardDatas
	end
	return result
end

function Decode_SeGC_Display_MazeAreaUpdate(netStreamValue)
	local result = { ["iNum"] = 0,["akMazeAreaDatas"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akMazeAreaDatas"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakMazeAreaDatas = { ["uiID"] = 0,["uiTypeID"] = 0,["iMazeGridCount"] = 0,["auiMazeGridIDs"] = nil,["uiTemplateTerrainID"] = 0,} 
		tempakMazeAreaDatas["uiID"] = netStreamValue:ReadInt()
		tempakMazeAreaDatas["uiTypeID"] = netStreamValue:ReadInt()
		tempakMazeAreaDatas["iMazeGridCount"] = netStreamValue:ReadInt()
		local iMazeGridCount = tempakMazeAreaDatas["iMazeGridCount"]
			tempakMazeAreaDatas["auiMazeGridIDs"] = {}
		for j = 0,iMazeGridCount or -1 do
			if j >= iMazeGridCount then
				break
			end
			tempakMazeAreaDatas["auiMazeGridIDs"][j] = netStreamValue:ReadInt()
		end
		tempakMazeAreaDatas["uiTemplateTerrainID"] = netStreamValue:ReadInt()
		result["akMazeAreaDatas"][i] = tempakMazeAreaDatas
	end
	return result
end

function Decode_SeGC_Display_MazeGridUpdate(netStreamValue)
	local result = { ["iNum"] = 0,["akMazeGridDatas"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akMazeGridDatas"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakMazeGridDatas = { ["uiID"] = 0,["uiRow"] = 0,["uiColumn"] = 0,["eFirstType"] = 0,["eSecondType"] = 0,["uiCardID"] = 0,["uiBaseCardTypeID"] = 0,["bCanReplace"] = 0,["bHasTriggered"] = 0,["bHasExplored"] = 0,["bIsUnlock"] = 0,["uiEventRoleID"] = 0,} 
		tempakMazeGridDatas["uiID"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["uiRow"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["uiColumn"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["eFirstType"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["eSecondType"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["uiCardID"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["uiBaseCardTypeID"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["bCanReplace"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["bHasTriggered"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["bHasExplored"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["bIsUnlock"] = netStreamValue:ReadInt()
		tempakMazeGridDatas["uiEventRoleID"] = netStreamValue:ReadInt()
		result["akMazeGridDatas"][i] = tempakMazeGridDatas
	end
	return result
end

function Decode_SeGC_Display_MazeUnlockGridChoice(netStreamValue)
	local result = { ["uiGiftType"] = 0,["uiGiftLevel"] = 0,["uiCurGiftLevel"] = 0,} 
	result["uiGiftType"] = netStreamValue:ReadInt()
	result["uiGiftLevel"] = netStreamValue:ReadInt()
	result["uiCurGiftLevel"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MazeUnlockGridSuccess(netStreamValue)
	local result = { ["uiGiftType"] = 0,["uiRow"] = 0,["uiColumn"] = 0,["uiRoleID"] = 0,} 
	result["uiGiftType"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MazeMove(netStreamValue)
	local result = { ["uiMazeID"] = 0,["uiAreaIndex"] = 0,["uiCurRow"] = 0,["uiCurColumn"] = 0,["uiDestRow"] = 0,["uiDestColumn"] = 0,} 
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiCurRow"] = netStreamValue:ReadInt()
	result["uiCurColumn"] = netStreamValue:ReadInt()
	result["uiDestRow"] = netStreamValue:ReadInt()
	result["uiDestColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MazeMoveToNewArea(netStreamValue)
	local result = { ["uiMazeID"] = 0,["uiAreaIndex"] = 0,} 
	result["uiMazeID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_DynamicAdvLootUpdate(netStreamValue)
	local result = { ["iSize"] = 0,["akDynamicAdvLoot"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	result["akDynamicAdvLoot"] = {}
		local iSize = result["iSize"]
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		local tempakDynamicAdvLoot = { ["uiID"] = 0,["uiDataTypeID"] = 0,["uiAdvLootType"] = 0,["uiNum"] = 0,} 
		tempakDynamicAdvLoot["uiID"] = netStreamValue:ReadInt()
		tempakDynamicAdvLoot["uiDataTypeID"] = netStreamValue:ReadInt()
		tempakDynamicAdvLoot["uiAdvLootType"] = netStreamValue:ReadInt()
		tempakDynamicAdvLoot["uiNum"] = netStreamValue:ReadInt()
		result["akDynamicAdvLoot"][i] = tempakDynamicAdvLoot
	end
	return result
end

function Decode_SeGC_Display_ClearInteractState(netStreamValue)
	local result = { ["uiFree"] = 0,} 
	result["uiFree"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_TriggerAdvGift(netStreamValue)
	local result = { ["uiAdvGiftType"] = 0,["uiItemTypeID"] = 0,["uiCoinCount"] = 0,} 
	result["uiAdvGiftType"] = netStreamValue:ReadInt()
	result["uiItemTypeID"] = netStreamValue:ReadInt()
	result["uiCoinCount"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_InCompleteBookBox(netStreamValue)
	local result = { ["uiTotalInCompleteTextNum"] = 0,["iNum"] = 0,["akRecord"] = nil,} 
	result["uiTotalInCompleteTextNum"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	result["akRecord"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRecord = { ["dwTypeID"] = 0,["dwDreamLandTime"] = 0,["dwArriveMaxLvl"] = 0,["dwAddInCompleteBookNum"] = 0,["dwAddInCompleteTextNum"] = 0,} 
		tempakRecord["dwTypeID"] = netStreamValue:ReadInt()
		tempakRecord["dwDreamLandTime"] = netStreamValue:ReadInt()
		tempakRecord["dwArriveMaxLvl"] = netStreamValue:ReadInt()
		tempakRecord["dwAddInCompleteBookNum"] = netStreamValue:ReadInt()
		tempakRecord["dwAddInCompleteTextNum"] = netStreamValue:ReadInt()
		result["akRecord"][i] = tempakRecord
	end
	return result
end

function Decode_SeGC_Display_EnterCity(netStreamValue)
	local result = { ["uiCityID"] = 0,} 
	result["uiCityID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_EmBattleMartialUpdate(netStreamValue)
	local result = { ["uiRoleUID"] = 0,["iNum"] = 0,["akEmBattleMartialInfo"] = nil,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	result["akEmBattleMartialInfo"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakEmBattleMartialInfo = { ["dwUID"] = 0,["dwTypeID"] = 0,["dwIndex"] = 0,} 
		tempakEmBattleMartialInfo["dwUID"] = netStreamValue:ReadInt()
		tempakEmBattleMartialInfo["dwTypeID"] = netStreamValue:ReadInt()
		tempakEmBattleMartialInfo["dwIndex"] = netStreamValue:ReadInt()
		result["akEmBattleMartialInfo"][i] = tempakEmBattleMartialInfo
	end
	return result
end

function Decode_SeGC_Display_ShowForeground(netStreamValue)
	local result = { ["iSize"] = 0,["auiMapEffectID"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	local iSize = result["iSize"]
		result["auiMapEffectID"] = {}
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		result["auiMapEffectID"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_UpdateUnlockDisguise(netStreamValue)
	local result = { ["iSize"] = 0,["auiDisguiseItemIDs"] = nil,} 
	result["iSize"] = netStreamValue:ReadInt()
	local iSize = result["iSize"]
		result["auiDisguiseItemIDs"] = {}
	for i = 0,iSize or -1 do
		if i >= iSize then
			break
		end
		result["auiDisguiseItemIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_FinalBattleUpdateInfo(netStreamValue)
	local result = { ["iCurRound"] = 0,["uiState"] = 0,["uiCurFBCityID"] = 0,["uiCurEnemyID"] = 0,["iRestTeammatesSize"] = 0,["auiRestTeammatesIDs"] = 0,["iAntiJammaCount"] = 0,} 
	result["iCurRound"] = netStreamValue:ReadInt()
	result["uiState"] = netStreamValue:ReadInt()
	result["uiCurFBCityID"] = netStreamValue:ReadInt()
	result["uiCurEnemyID"] = netStreamValue:ReadInt()
	result["iRestTeammatesSize"] = netStreamValue:ReadInt()
	local iRestTeammatesSize = result["iRestTeammatesSize"]
		result["auiRestTeammatesIDs"] = {}
	for i = 0,iRestTeammatesSize or -1 do
		if i >= iRestTeammatesSize then
			break
		end
		result["auiRestTeammatesIDs"][i] = netStreamValue:ReadInt()
	end
	result["iAntiJammaCount"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_FinalBattleUpdateCity(netStreamValue)
	local result = { ["uiFinalBattleCityID"] = 0,["uiState"] = 0,["iAliveFriendSize"] = 0,["auiAliveFriendIDs"] = 0,["iDeadFriendSize"] = 0,["auiDeadFriendIDs"] = 0,["iAliveEnemySize"] = 0,["auiAliveEnemyIDs"] = 0,["iDeadEnemySize"] = 0,["auiDeadEnemyIDs"] = 0,["iCurFriendHP"] = 0,["iCurEnemyHP"] = 0,["bGotReward"] = 0,} 
	result["uiFinalBattleCityID"] = netStreamValue:ReadInt()
	result["uiState"] = netStreamValue:ReadInt()
	result["iAliveFriendSize"] = netStreamValue:ReadInt()
	local iAliveFriendSize = result["iAliveFriendSize"]
		result["auiAliveFriendIDs"] = {}
	for i = 0,iAliveFriendSize or -1 do
		if i >= iAliveFriendSize then
			break
		end
		result["auiAliveFriendIDs"][i] = netStreamValue:ReadInt()
	end
	result["iDeadFriendSize"] = netStreamValue:ReadInt()
	local iDeadFriendSize = result["iDeadFriendSize"]
		result["auiDeadFriendIDs"] = {}
	for i = 0,iDeadFriendSize or -1 do
		if i >= iDeadFriendSize then
			break
		end
		result["auiDeadFriendIDs"][i] = netStreamValue:ReadInt()
	end
	result["iAliveEnemySize"] = netStreamValue:ReadInt()
	local iAliveEnemySize = result["iAliveEnemySize"]
		result["auiAliveEnemyIDs"] = {}
	for i = 0,iAliveEnemySize or -1 do
		if i >= iAliveEnemySize then
			break
		end
		result["auiAliveEnemyIDs"][i] = netStreamValue:ReadInt()
	end
	result["iDeadEnemySize"] = netStreamValue:ReadInt()
	local iDeadEnemySize = result["iDeadEnemySize"]
		result["auiDeadEnemyIDs"] = {}
	for i = 0,iDeadEnemySize or -1 do
		if i >= iDeadEnemySize then
			break
		end
		result["auiDeadEnemyIDs"][i] = netStreamValue:ReadInt()
	end
	result["iCurFriendHP"] = netStreamValue:ReadInt()
	result["iCurEnemyHP"] = netStreamValue:ReadInt()
	result["bGotReward"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_Clan_Eliminate_Show(netStreamValue)
	local result = { ["uiID"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ShowDataEndRecord(netStreamValue)
	local result = { ["uiType"] = 0,["uiID"] = 0,["iValue1"] = 0,["iValue2"] = 0,["iValue3"] = 0,} 
	result["uiType"] = netStreamValue:ReadInt()
	result["uiID"] = netStreamValue:ReadInt()
	result["iValue1"] = netStreamValue:ReadInt()
	result["iValue2"] = netStreamValue:ReadInt()
	result["iValue3"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_HighTowerBaseInfo(netStreamValue)
	local result = { ["bNormalUnlock"] = nil,["bBloodUnlock"] = nil,["bRegimentUnlock"] = nil,["uiNormalHistoryStage"] = 0,["uiBloodHistoryStage"] = 0,["uiRegimentHistoryStage"] = 0,["uiCurBloodStage"] = 0,} 
	result["bNormalUnlock"] = netStreamValue:ReadByte()
	result["bBloodUnlock"] = netStreamValue:ReadByte()
	result["bRegimentUnlock"] = netStreamValue:ReadByte()
	result["uiNormalHistoryStage"] = netStreamValue:ReadInt()
	result["uiBloodHistoryStage"] = netStreamValue:ReadInt()
	result["uiRegimentHistoryStage"] = netStreamValue:ReadInt()
	result["uiCurBloodStage"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_HighTowerRestRole(netStreamValue)
	local result = { ["iNum"] = 0,["auiRestRoles"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	local iNum = result["iNum"]
		result["auiRestRoles"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["auiRestRoles"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_AIInfo(netStreamValue)
	local result = { ["uiRoleID"] = 0,["curStrategy"] = 0,["customNum"] = 0,["iNum"] = 0,["actionList"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["curStrategy"] = netStreamValue:ReadByte()
	result["customNum"] = netStreamValue:ReadByte()
	result["iNum"] = netStreamValue:ReadByte()
	local iNum = result["iNum"]
		result["actionList"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["actionList"][i] = netStreamValue:ReadDword64()
	end
	return result
end

function Decode_SeGC_Display_Battle_ShowEmbattleUI(netStreamValue)
	local result = { ["iRoundNum"] = nil,["iAllRoundNum"] = nil,["iCantChooseClan"] = nil,["bShowRound"] = nil,["bEvilEliminate"] = nil,} 
	result["iRoundNum"] = netStreamValue:ReadByte()
	result["iAllRoundNum"] = netStreamValue:ReadByte()
	result["iCantChooseClan"] = netStreamValue:ReadByte()
	result["bShowRound"] = netStreamValue:ReadByte()
	result["bEvilEliminate"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_Battle_Start(netStreamValue)
	local result = { ["iValueChangeFlag"] = 0,["iNum"] = 0,["akUnits"] = nil,["iAssistNum"] = 0,["akAssistUnits"] = nil,["iBattleTypeID"] = 0,["iBattleType"] = 0,["akUnitsTime"] = nil,["sFriendName"] = 'hero',["sEnemyName"] = 'hero',} 
	local iValueChangeFlag = netStreamValue:ReadInt()
	result["iValueChangeFlag"] = iValueChangeFlag
	if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
		result["iNum"] = netStreamValue:ReadByte()
	end
	result["akUnits"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnits = { ["iValueChangeFlag"] = 0,["uiUnitIndex"] = 0,["iGridX"] = 0,["iGridY"] = 0,["iMP"] = 0,["iHP"] = 0,["iMAXMP"] = 0,["iMAXHP"] = 0,["uiRoleID"] = 0,["uiTypeID"] = 0,["uiModleID"] = 0,["uiNameID"] = 0,["uiFamilyNameID"] = 0,["uiFirstNameID"] = 0,["iAssistFlag"] = 0,["iFace"] = 1,["eCamp"] = SE_INVALID,["iEquipItemNum"] = 0,["akEquipItem"] = nil,["iSex"] = 0,["kRoleFaceData"] = nil,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakUnits["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakUnits["uiUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakUnits["iGridX"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakUnits["iGridY"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakUnits["iMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakUnits["iHP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakUnits["iMAXMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakUnits["iMAXHP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakUnits["uiRoleID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakUnits["uiTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakUnits["uiModleID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakUnits["uiNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakUnits["uiFamilyNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakUnits["uiFirstNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakUnits["iAssistFlag"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
			tempakUnits["iFace"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakUnits["eCamp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakUnits["iEquipItemNum"] = netStreamValue:ReadByte()
		end
		local iEquipItemNum = tempakUnits["iEquipItemNum"]
		tempakUnits["akEquipItem"] = {}
		for j = 0,iEquipItemNum or -1 do
			if j >= iEquipItemNum then
				break
			end
			local tempakEquipItem = { ["iInstID"] = 0,["iTypeID"] = 0,["iEnhanceGrade"] = 0,} 
			tempakEquipItem["iInstID"] = netStreamValue:ReadInt()
			tempakEquipItem["iTypeID"] = netStreamValue:ReadInt()
			tempakEquipItem["iEnhanceGrade"] = netStreamValue:ReadInt()
			tempakUnits["akEquipItem"][j] = tempakEquipItem
		end
		if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
			tempakUnits["iSex"] = netStreamValue:ReadByte()
		end
		tempakUnits["kRoleFaceData"] = {}
		tempakUnits["kRoleFaceData"]["uiHat"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiBack"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiHairBack"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiBody"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiFace"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiEyebrow"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiEye"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiMouth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiNose"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiForeheadAdornment"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiFacialAdornment"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiHairFront"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiModelID"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiSex"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiCGSex"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiRoleID"] = netStreamValue:ReadInt()
		result["akUnits"][i] = tempakUnits
	end
	if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
		result["iAssistNum"] = netStreamValue:ReadByte()
	end
	result["akAssistUnits"] = {}
		local iAssistNum = result["iAssistNum"]
	for i = 0,iAssistNum or -1 do
		if i >= iAssistNum then
			break
		end
		local tempakAssistUnits = { ["iValueChangeFlag"] = 0,["uiTypeID"] = 0,["eCamp"] = SE_INVALID,["bPet"] = 0,["uiLevel"] = 0,["uiMoedlID"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadByte()
		tempakAssistUnits["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakAssistUnits["uiTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakAssistUnits["eCamp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakAssistUnits["bPet"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakAssistUnits["uiLevel"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakAssistUnits["uiMoedlID"] = netStreamValue:ReadInt()
		end
		result["akAssistUnits"][i] = tempakAssistUnits
	end
	if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
		result["iBattleTypeID"] = netStreamValue:ReadInt()
	end
	if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
		result["iBattleType"] = netStreamValue:ReadInt()
	end
	result["akUnitsTime"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnitsTime = { ["uiUnitIndex"] = 0,["fMoveTime"] = 0,["fOptNeedTime"] = 0,} 
		tempakUnitsTime["uiUnitIndex"] = netStreamValue:ReadInt()
		tempakUnitsTime["fMoveTime"] = netStreamValue:ReadInt()
		tempakUnitsTime["fOptNeedTime"] = netStreamValue:ReadInt()
		result["akUnitsTime"][i] = tempakUnitsTime
	end
	result["sFriendName"] = netStreamValue:ReadString()
	result["sEnemyName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_Battle_UpdateUnit(netStreamValue)
	local result = { ["iNum"] = nil,["akUnits"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	result["akUnits"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnits = { ["iValueChangeFlag"] = 0,["uiUnitIndex"] = 0,["iGridX"] = 0,["iGridY"] = 0,["iMP"] = 0,["iHP"] = 0,["iMAXMP"] = 0,["iMAXHP"] = 0,["iRoundHP"] = 0,["iRoundMP"] = 0,["iShield"] = 0,["iAssistFlag"] = 0,["iFace"] = 1,["eMaxAttackType"] = 0,["iMaxAttack"] = 0,["iDefend"] = 0,["iMoveValue"] = 0,["iMoveDistance"] = SSD_BATTLE_INIT_MOVE,["iBuffNum"] = 0,["akBuffData"] = nil,["iChuanTouCiShu"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakUnits["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakUnits["uiUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakUnits["iGridX"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakUnits["iGridY"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakUnits["iMP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakUnits["iHP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakUnits["iMAXMP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakUnits["iMAXHP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakUnits["iRoundHP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakUnits["iRoundMP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakUnits["iShield"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakUnits["iAssistFlag"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakUnits["iFace"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakUnits["eMaxAttackType"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakUnits["iMaxAttack"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
			tempakUnits["iDefend"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakUnits["iMoveValue"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakUnits["iMoveDistance"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 17) == ( 1 << 17) then
			tempakUnits["iBuffNum"] = netStreamValue:ReadInt()
		end
		local iBuffNum = tempakUnits["iBuffNum"]
		tempakUnits["akBuffData"] = {}
		for j = 0,iBuffNum or -1 do
			if j >= iBuffNum then
				break
			end
			local tempakBuffData = { ["iBuffIndex"] = 0,["iBuffTypeID"] = 0,["iLayerNum"] = 0,["iRoundNum"] = 0,} 
			tempakBuffData["iBuffIndex"] = netStreamValue:ReadInt()
			tempakBuffData["iBuffTypeID"] = netStreamValue:ReadInt()
			tempakBuffData["iLayerNum"] = netStreamValue:ReadInt()
			tempakBuffData["iRoundNum"] = netStreamValue:ReadInt()
			tempakUnits["akBuffData"][j] = tempakBuffData
		end
		if (iValueChangeFlag & 1 << 19) == ( 1 << 19) then
			tempakUnits["iChuanTouCiShu"] = netStreamValue:ReadInt()
		end
		result["akUnits"][i] = tempakUnits
	end
	return result
end

function Decode_SeGC_Display_Battle_CreateUnit(netStreamValue)
	local result = { ["iNum"] = nil,["akUnits"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	result["akUnits"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnits = { ["iValueChangeFlag"] = 0,["uiUnitIndex"] = 0,["iGridX"] = 0,["iGridY"] = 0,["iMP"] = 0,["iHP"] = 0,["iMAXMP"] = 0,["iMAXHP"] = 0,["uiRoleID"] = 0,["uiTypeID"] = 0,["uiModleID"] = 0,["uiNameID"] = 0,["uiFamilyNameID"] = 0,["uiFirstNameID"] = 0,["iAssistFlag"] = 0,["iFace"] = 1,["eCamp"] = SE_INVALID,["iEquipItemNum"] = 0,["akEquipItem"] = nil,["iSex"] = 0,["kRoleFaceData"] = nil,} 
		local iValueChangeFlag = netStreamValue:ReadInt()
		tempakUnits["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakUnits["uiUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakUnits["iGridX"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakUnits["iGridY"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakUnits["iMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakUnits["iHP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakUnits["iMAXMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakUnits["iMAXHP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakUnits["uiRoleID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakUnits["uiTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakUnits["uiModleID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakUnits["uiNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakUnits["uiFamilyNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakUnits["uiFirstNameID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakUnits["iAssistFlag"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
			tempakUnits["iFace"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakUnits["eCamp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakUnits["iEquipItemNum"] = netStreamValue:ReadByte()
		end
		local iEquipItemNum = tempakUnits["iEquipItemNum"]
		tempakUnits["akEquipItem"] = {}
		for j = 0,iEquipItemNum or -1 do
			if j >= iEquipItemNum then
				break
			end
			local tempakEquipItem = { ["iInstID"] = 0,["iTypeID"] = 0,["iEnhanceGrade"] = 0,} 
			tempakEquipItem["iInstID"] = netStreamValue:ReadInt()
			tempakEquipItem["iTypeID"] = netStreamValue:ReadInt()
			tempakEquipItem["iEnhanceGrade"] = netStreamValue:ReadInt()
			tempakUnits["akEquipItem"][j] = tempakEquipItem
		end
		if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
			tempakUnits["iSex"] = netStreamValue:ReadByte()
		end
		tempakUnits["kRoleFaceData"] = {}
		tempakUnits["kRoleFaceData"]["uiHat"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiBack"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiHairBack"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiBody"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiFace"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiEyebrow"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiEye"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiMouth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiNose"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiForeheadAdornment"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiFacialAdornment"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiHairFront"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyebrowLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iEyeLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iNoseLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthWidth"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthHeight"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["iMouthLocation"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiModelID"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiSex"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiCGSex"] = netStreamValue:ReadInt()
		tempakUnits["kRoleFaceData"]["uiRoleID"] = netStreamValue:ReadInt()
		result["akUnits"][i] = tempakUnits
	end
	return result
end

function Decode_SeGC_Display_Battle_UpdateCombo(netStreamValue)
	local result = { ["aComboInfo"] = nil,} 
	result["aComboInfo"] = {["uiUnitIndex"] = 0,["iComboNum"] = 0,["aiComboBaseID"] = nil,}
		result["aComboInfo"]["uiUnitIndex"] = netStreamValue:ReadInt()
		result["aComboInfo"]["iComboNum"] = netStreamValue:ReadByte()
		local iComboNum = result["aComboInfo"]["iComboNum"]
		result["aComboInfo"]["aiComboBaseID"] = {}
	for i = 0,iComboNum or -1 do
		if i >= iComboNum then
			break
		end
		local tempaiComboBaseID = { ["uiComboID"] = 0,["iCount"] = 0,} 
		tempaiComboBaseID["uiComboID"] = netStreamValue:ReadInt()
		tempaiComboBaseID["iCount"] = netStreamValue:ReadByte()
		result["aComboInfo"]["aiComboBaseID"][i] = tempaiComboBaseID
	end
	return result
end

function Decode_SeGC_Display_Battle_ObserveUnit(netStreamValue)
	local result = { ["akUnit"] = nil,} 
	result["akUnit"] = {["iValueChangeFlag"] = 0,["uiUnitIndex"] = 0,["iMAXMP"] = 0,["iMAXHP"] = 0,["iDefend"] = 0,["iMoveValue"] = 0,["iBuffNum"] = 0,["akBuffData"] = nil,["aiAttrs"] = nil,["uiLevel"] = 0,["iGoodEvil"] = 0,["iRank"] = 0,["iClan"] = 0,["akUnitsMartial"] = nil,}
		local iValueChangeFlag = netStreamValue:ReadInt()
		result["akUnit"]["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			result["akUnit"]["uiUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			result["akUnit"]["iMAXMP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			result["akUnit"]["iMAXHP"] = netStreamValue:ReadDword64()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			result["akUnit"]["iDefend"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			result["akUnit"]["iMoveValue"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			result["akUnit"]["iBuffNum"] = netStreamValue:ReadByte()
		end
	local iBuffNum = result["akUnit"]["iBuffNum"]
		result["akUnit"]["akBuffData"] = {}
	for i = 0,iBuffNum or -1 do
		if i >= iBuffNum then
			break
		end
			result["akUnit"]["akBuffData"][i] = netStreamValue:ReadInt()
		end
	result["akUnit"]["aiAttrs"] = {}
	for i = 0,SSD_MAX_ROLE_GUANCA_NUMS or -1 do
		if i >= SSD_MAX_ROLE_GUANCA_NUMS then
			break
		end
			result["akUnit"]["aiAttrs"][i] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			result["akUnit"]["uiLevel"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			result["akUnit"]["iGoodEvil"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			result["akUnit"]["iRank"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			result["akUnit"]["iClan"] = netStreamValue:ReadInt()
		end
		result["akUnit"]["akUnitsMartial"] = {}
		result["akUnit"]["akUnitsMartial"]["iSkillNum"] = netStreamValue:ReadByte()
		local iSkillNum = result["akUnit"]["akUnitsMartial"]["iSkillNum"]
		result["akUnit"]["akUnitsMartial"]["akMartial"] = {}
	for i = 0,iSkillNum or -1 do
		if i >= iSkillNum then
			break
		end
		local tempakMartial = { ["uiMartialIndex"] = 0,["uiMartialID"] = 0,["uiMartialItemID"] = 0,["uiMartialLevel"] = 0,["uiRangeLevel"] = 0,["uiDamageValue"] = 0,["uiPower"] = 0,["uiPowerBase"] = 0,["uiPowerPercent"] = 0,["uiCostMP"] = 0,["eStateFalg"] = 0,["uiSkillEvolution"] = 0,["eParamInfo"] = 0,["uiColdTime"] = 0,["uiRoleUID"] = 0,} 
		tempakMartial["uiMartialIndex"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialID"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialItemID"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialLevel"] = netStreamValue:ReadByte()
		tempakMartial["uiRangeLevel"] = netStreamValue:ReadByte()
		tempakMartial["uiDamageValue"] = netStreamValue:ReadInt()
		tempakMartial["uiPower"] = netStreamValue:ReadInt()
		tempakMartial["uiPowerBase"] = netStreamValue:ReadInt()
		tempakMartial["uiPowerPercent"] = netStreamValue:ReadInt()
		tempakMartial["uiCostMP"] = netStreamValue:ReadInt()
		tempakMartial["eStateFalg"] = netStreamValue:ReadInt()
		tempakMartial["uiSkillEvolution"] = netStreamValue:ReadInt()
		tempakMartial["eParamInfo"] = netStreamValue:ReadInt()
		tempakMartial["uiColdTime"] = netStreamValue:ReadByte()
		tempakMartial["uiRoleUID"] = netStreamValue:ReadInt()
		result["akUnit"]["akUnitsMartial"]["akMartial"][i] = tempakMartial
	end
	return result
end

function Decode_SeGC_Display_Battle_BuffDesc(netStreamValue)
	local result = { ["iNum"] = nil,["akUnits"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	result["akUnits"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnits = { ["iBuffIndex"] = 0,["iDescLangID"] = 0,["iParam1"] = 0,["iParam2"] = 0,["iDescType"] = 0,} 
		tempakUnits["iBuffIndex"] = netStreamValue:ReadInt()
		tempakUnits["iDescLangID"] = netStreamValue:ReadInt()
		tempakUnits["iParam1"] = netStreamValue:ReadInt()
		tempakUnits["iParam2"] = netStreamValue:ReadInt()
		tempakUnits["iDescType"] = netStreamValue:ReadByte()
		result["akUnits"][i] = tempakUnits
	end
	return result
end

function Decode_SeGC_Display_Battle_UpdateRound(netStreamValue)
	local result = { ["iRound"] = nil,} 
	result["iRound"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_Battle_AutoBattle(netStreamValue)
	local result = { ["bCloseAuto"] = nil,} 
	result["bCloseAuto"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_Battle_Check(netStreamValue)
	local result = { ["iResult"] = 0,} 
	result["iResult"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_Battle_UpdateOptUnit(netStreamValue)
	local result = { ["uiUnitIndex"] = nil,["iRound"] = nil,["iFlag"] = nil,["iNum"] = nil,["akUnitsTime"] = nil,["akUnitsMartial"] = nil,} 
	result["uiUnitIndex"] = netStreamValue:ReadInt()
	result["iRound"] = netStreamValue:ReadByte()
	result["iFlag"] = netStreamValue:ReadByte()
	result["iNum"] = netStreamValue:ReadByte()
	result["akUnitsTime"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakUnitsTime = { ["uiUnitIndex"] = 0,["fMoveTime"] = 0,["fOptNeedTime"] = 0,} 
		tempakUnitsTime["uiUnitIndex"] = netStreamValue:ReadInt()
		tempakUnitsTime["fMoveTime"] = netStreamValue:ReadInt()
		tempakUnitsTime["fOptNeedTime"] = netStreamValue:ReadInt()
		result["akUnitsTime"][i] = tempakUnitsTime
	end
	result["akUnitsMartial"] = {["iSkillNum"] = 0,["akMartial"] = nil,}
		result["akUnitsMartial"]["iSkillNum"] = netStreamValue:ReadByte()
		local iSkillNum = result["akUnitsMartial"]["iSkillNum"]
		result["akUnitsMartial"]["akMartial"] = {}
	for i = 0,iSkillNum or -1 do
		if i >= iSkillNum then
			break
		end
		local tempakMartial = { ["uiMartialIndex"] = 0,["uiMartialID"] = 0,["uiMartialItemID"] = 0,["uiMartialLevel"] = 0,["uiRangeLevel"] = 0,["uiDamageValue"] = 0,["uiPower"] = 0,["uiPowerBase"] = 0,["uiPowerPercent"] = 0,["uiCostMP"] = 0,["eStateFalg"] = 0,["uiSkillEvolution"] = 0,["eParamInfo"] = 0,["uiColdTime"] = 0,["uiRoleUID"] = 0,} 
		tempakMartial["uiMartialIndex"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialID"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialItemID"] = netStreamValue:ReadInt()
		tempakMartial["uiMartialLevel"] = netStreamValue:ReadByte()
		tempakMartial["uiRangeLevel"] = netStreamValue:ReadByte()
		tempakMartial["uiDamageValue"] = netStreamValue:ReadInt()
		tempakMartial["uiPower"] = netStreamValue:ReadInt()
		tempakMartial["uiPowerBase"] = netStreamValue:ReadInt()
		tempakMartial["uiPowerPercent"] = netStreamValue:ReadInt()
		tempakMartial["uiCostMP"] = netStreamValue:ReadInt()
		tempakMartial["eStateFalg"] = netStreamValue:ReadInt()
		tempakMartial["uiSkillEvolution"] = netStreamValue:ReadInt()
		tempakMartial["eParamInfo"] = netStreamValue:ReadInt()
		tempakMartial["uiColdTime"] = netStreamValue:ReadByte()
		tempakMartial["uiRoleUID"] = netStreamValue:ReadInt()
		result["akUnitsMartial"]["akMartial"][i] = tempakMartial
	end
	return result
end

function Decode_SeGC_Display_Battle_GameEnd(netStreamValue)
	local result = { ["iValueChangeFlag"] = 0,["akEndData"] = nil,} 
	local iValueChangeFlag = netStreamValue:ReadByte()
	result["iValueChangeFlag"] = iValueChangeFlag
	result["akEndData"] = {["iValueChangeFlag"] = 0,["iTypeID"] = 0,["iEndScore"] = 0,["eFlag"] = 0,["iScoreNum"] = 0,["uiTeamExp"] = 0,["uiMartialExp"] = 0,["uiResultAddExp"] = 0,["uiLevelAddExp"] = 0,["aiScoreType"] = nil,["aiScoreCount"] = nil,["aiScore"] = nil,["iAwardNum"] = 0,["asAward"] = nil,}
		local iValueChangeFlag = netStreamValue:ReadInt()
		result["akEndData"]["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			result["akEndData"]["iTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			result["akEndData"]["iEndScore"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			result["akEndData"]["eFlag"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			result["akEndData"]["iScoreNum"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			result["akEndData"]["uiTeamExp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			result["akEndData"]["uiMartialExp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			result["akEndData"]["uiResultAddExp"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			result["akEndData"]["uiLevelAddExp"] = netStreamValue:ReadInt()
		end
	local iScoreNum = result["akEndData"]["iScoreNum"]
		result["akEndData"]["aiScoreType"] = {}
	for i = 0,iScoreNum or -1 do
		if i >= iScoreNum then
			break
		end
			result["akEndData"]["aiScoreType"][i] = netStreamValue:ReadInt()
		end
	local iScoreNum = result["akEndData"]["iScoreNum"]
		result["akEndData"]["aiScoreCount"] = {}
	for i = 0,iScoreNum or -1 do
		if i >= iScoreNum then
			break
		end
			result["akEndData"]["aiScoreCount"][i] = netStreamValue:ReadInt()
		end
	local iScoreNum = result["akEndData"]["iScoreNum"]
		result["akEndData"]["aiScore"] = {}
	for i = 0,iScoreNum or -1 do
		if i >= iScoreNum then
			break
		end
			result["akEndData"]["aiScore"][i] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			result["akEndData"]["iAwardNum"] = netStreamValue:ReadByte()
		end
		local iAwardNum = result["akEndData"]["iAwardNum"]
		result["akEndData"]["asAward"] = {}
	for i = 0,iAwardNum or -1 do
		if i >= iAwardNum then
			break
		end
		local tempasAward = { ["iValueChangeFlag"] = 0,["uiItemID"] = 0,["uiNums"] = 0,["eType"] = 0,} 
		local iValueChangeFlag = netStreamValue:ReadByte()
		tempasAward["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempasAward["uiItemID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempasAward["uiNums"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempasAward["eType"] = netStreamValue:ReadInt()
		end
		result["akEndData"]["asAward"][i] = tempasAward
	end
	return result
end

function Decode_SeGC_Click_Battle_OperateUnit(netStreamValue)
	local result = { ["uiUnitIndex"] = 0,["iGridX"] = 0,["iGridY"] = 0,["uiSkillIndex"] = 0,["iSkillPosX"] = 0,["iSkillPosY"] = 0,["iSelectPosX"] = 0,["iSelectPosY"] = 0,} 
	result["uiUnitIndex"] = netStreamValue:ReadInt()
	result["iGridX"] = netStreamValue:ReadByte()
	result["iGridY"] = netStreamValue:ReadByte()
	result["uiSkillIndex"] = netStreamValue:ReadInt()
	result["iSkillPosX"] = netStreamValue:ReadByte()
	result["iSkillPosY"] = netStreamValue:ReadByte()
	result["iSelectPosX"] = netStreamValue:ReadByte()
	result["iSelectPosY"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Click_Battle_GameEnd(netStreamValue)
	local result = { ["eFlag"] = nil,} 
	result["eFlag"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Click_Battle_Auto(netStreamValue)
	local result = { ["uiUnitIndex"] = 0,} 
	result["uiUnitIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Battle_OBSERVE(netStreamValue)
	local result = { ["uiUnitIndex"] = 0,} 
	result["uiUnitIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Battle_WheelWar_Result(netStreamValue)
	local result = { ["bStart"] = nil,["uiClanID"] = 0,} 
	result["bStart"] = netStreamValue:ReadByte()
	result["uiClanID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_HurtInfo(netStreamValue)
	local result = { ["iValueChangeFlag"] = 0,["iNum"] = 0,["akBattleLog"] = nil,} 
	local iValueChangeFlag = netStreamValue:ReadByte()
	result["iValueChangeFlag"] = iValueChangeFlag
	if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
		result["iNum"] = netStreamValue:ReadInt()
	end
	result["akBattleLog"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakBattleLog = { ["iValueChangeFlag"] = 0,["eEvent"] = 0,["iOwnerUnitIndex"] = 0,["iOwnerMartialIndex"] = 0,["iSkillTypeID"] = 0,["iBuffIndex"] = 0,["iBuffTypeID"] = 0,["iBuffDamage"] = 0,["iSourceUnitIndex"] = 0,["iSourceMartialIndex"] = 0,["iCastPosX"] = -1,["iCastPosY"] = -1,["iMoveX"] = -1,["iMoveY"] = -1,["iSpendMP"] = 0,["iAddMP"] = 0,["iAddHP"] = 0,["iSpendItemID"] = 0,["iLianJiCount"] = 100,["eSkillEventType"] = BSET_Null,["iBuffNum"] = 0,["akBuffData"] = nil,["iPlotNum"] = 0,["akPlotData"] = nil,["iHeJiTargetNum"] = 0,["aiHeJiTargetUnit"] = nil,["iSkillDamageData"] = 0,["akSkillDamageData"] = nil,["iMutilTag"] = 0,["bDeath"] = 0,["iCallDiscipleIndex"] = 0,["iPetNum"] = 0,["aiPetID"] = nil,} 
		local iValueChangeFlag = netStreamValue:ReadDword64()
		tempakBattleLog["iValueChangeFlag"] = iValueChangeFlag
		if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakBattleLog["eEvent"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakBattleLog["iOwnerUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakBattleLog["iOwnerMartialIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakBattleLog["iSkillTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakBattleLog["iBuffIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakBattleLog["iBuffTypeID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakBattleLog["iBuffDamage"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakBattleLog["iSourceUnitIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakBattleLog["iSourceMartialIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakBattleLog["iCastPosX"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakBattleLog["iCastPosY"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakBattleLog["iMoveX"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakBattleLog["iMoveY"] = netStreamValue:ReadChar()
		end
		if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakBattleLog["iSpendMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
			tempakBattleLog["iAddMP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakBattleLog["iAddHP"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakBattleLog["iSpendItemID"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 17) == ( 1 << 17) then
			tempakBattleLog["iLianJiCount"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
			tempakBattleLog["eSkillEventType"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 19) == ( 1 << 19) then
			tempakBattleLog["iBuffNum"] = netStreamValue:ReadInt()
		end
		local iBuffNum = tempakBattleLog["iBuffNum"]
		tempakBattleLog["akBuffData"] = {}
		for j = 0,iBuffNum or -1 do
			if j >= iBuffNum then
				break
			end
			local tempakBuffData = { ["iValueChangeFlag"] = 0,["iOwnUnitIndex"] = 0,["eEventType"] = 0,["iBuffIndex"] = 0,["iBuffTypeID"] = 0,["iLayerNum"] = 0,["iRoundNum"] = 0,["iFlag"] = SBHBT_NULL,} 
			local iValueChangeFlag = netStreamValue:ReadByte()
		tempakBuffData["iValueChangeFlag"] = iValueChangeFlag
			if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakBuffData["iOwnUnitIndex"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakBuffData["eEventType"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakBuffData["iBuffIndex"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakBuffData["iBuffTypeID"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakBuffData["iLayerNum"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakBuffData["iRoundNum"] = netStreamValue:ReadByte()
		end
			if (iValueChangeFlag & 1 << 6) == ( 1 << 6) then
			tempakBuffData["iFlag"] = netStreamValue:ReadInt()
		end
			tempakBattleLog["akBuffData"][j] = tempakBuffData
		end
		if (iValueChangeFlag & 1 << 21) == ( 1 << 21) then
			tempakBattleLog["iPlotNum"] = netStreamValue:ReadByte()
		end
		local iPlotNum = tempakBattleLog["iPlotNum"]
		tempakBattleLog["akPlotData"] = {}
		for j = 0,iPlotNum or -1 do
			if j >= iPlotNum then
				break
			end
			local tempakPlotData = { ["eEventType"] = 0,["iPlotTaskID"] = 0,["iPlotID"] = 0,["PlotType"] = 0,["Param1"] = 0,["Param2"] = 0,["Param3"] = 0,["Param4"] = 0,["Param5"] = 0,} 
			tempakPlotData["eEventType"] = netStreamValue:ReadInt()
			tempakPlotData["iPlotTaskID"] = netStreamValue:ReadInt()
			tempakPlotData["iPlotID"] = netStreamValue:ReadInt()
			tempakPlotData["PlotType"] = netStreamValue:ReadInt()
			tempakPlotData["Param1"] = netStreamValue:ReadInt()
			tempakPlotData["Param2"] = netStreamValue:ReadInt()
			tempakPlotData["Param3"] = netStreamValue:ReadInt()
			tempakPlotData["Param4"] = netStreamValue:ReadInt()
			tempakPlotData["Param5"] = netStreamValue:ReadInt()
			tempakBattleLog["akPlotData"][j] = tempakPlotData
		end
		if (iValueChangeFlag & 1 << 23) == ( 1 << 23) then
			tempakBattleLog["iHeJiTargetNum"] = netStreamValue:ReadByte()
		end
		local iHeJiTargetNum = tempakBattleLog["iHeJiTargetNum"]
			tempakBattleLog["aiHeJiTargetUnit"] = {}
		for j = 0,iHeJiTargetNum or -1 do
			if j >= iHeJiTargetNum then
				break
			end
			tempakBattleLog["aiHeJiTargetUnit"][j] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 25) == ( 1 << 25) then
			tempakBattleLog["iSkillDamageData"] = netStreamValue:ReadByte()
		end
		local iSkillDamageData = tempakBattleLog["iSkillDamageData"]
		tempakBattleLog["akSkillDamageData"] = {}
		for j = 0,iSkillDamageData or -1 do
			if j >= iSkillDamageData then
				break
			end
			local tempakSkillDamageData = { ["iValueChangeFlag"] = 0,["iTargetUnitIndex"] = 0,["iFinalDamageValue"] = 0,["iFinalMPDamageValue"] = 0,["iFinalHPAddValue"] = 0,["iFinalValueFlag"] = 0,["iDuoDuanNum"] = 0,["aiFinalNumberAddValue"] = nil,["iLeechValue"] = 0,["iShieldValue"] = 0,["iReboundDamageValue"] = 0,["eSkillDataType"] = 1,["eExtraFlag"] = BDEF_NULL,["iJituiX"] = 100,["iJituiY"] = 100,["iYuanhuX"] = -1,["iYuanhuY"] = -1,["iExtraFinalDamageAddValue"] = 0,["iExtraFinalDamageAddPer"] = 0,["iExtraFinalHPAddValue"] = 0,["iExtraFinalHPAddPer"] = 0,["iBaseDamageValue"] = 0,["iBaseHPAddValue"] = 0,["iNumberAddPer"] = 0,["iNumberAddValue"] = 0,["iCurNumberAddValue"] = 0,["eSpecialFlag"] = 0,["iAddPassTime"] = 0,["iDodge"] = 0,} 
			local iValueChangeFlag = netStreamValue:ReadInt()
		tempakSkillDamageData["iValueChangeFlag"] = iValueChangeFlag
			if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakSkillDamageData["iTargetUnitIndex"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakSkillDamageData["iFinalDamageValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakSkillDamageData["iFinalMPDamageValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 3) == ( 1 << 3) then
			tempakSkillDamageData["iFinalHPAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 4) == ( 1 << 4) then
			tempakSkillDamageData["iFinalValueFlag"] = netStreamValue:ReadByte()
		end
			if (iValueChangeFlag & 1 << 5) == ( 1 << 5) then
			tempakSkillDamageData["iDuoDuanNum"] = netStreamValue:ReadInt()
		end
				local iDuoDuanNum = tempakSkillDamageData["iDuoDuanNum"]
				tempakSkillDamageData["aiFinalNumberAddValue"] = {}
			for k = 0,iDuoDuanNum or -1 do
				if k >= iDuoDuanNum then
					break
				end
			tempakSkillDamageData["aiFinalNumberAddValue"][k] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 7) == ( 1 << 7) then
			tempakSkillDamageData["iLeechValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 8) == ( 1 << 8) then
			tempakSkillDamageData["iShieldValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 9) == ( 1 << 9) then
			tempakSkillDamageData["iReboundDamageValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 10) == ( 1 << 10) then
			tempakSkillDamageData["eSkillDataType"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 11) == ( 1 << 11) then
			tempakSkillDamageData["eExtraFlag"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 12) == ( 1 << 12) then
			tempakSkillDamageData["iJituiX"] = netStreamValue:ReadByte()
		end
			if (iValueChangeFlag & 1 << 13) == ( 1 << 13) then
			tempakSkillDamageData["iJituiY"] = netStreamValue:ReadByte()
		end
			if (iValueChangeFlag & 1 << 14) == ( 1 << 14) then
			tempakSkillDamageData["iYuanhuX"] = netStreamValue:ReadChar()
		end
			if (iValueChangeFlag & 1 << 15) == ( 1 << 15) then
			tempakSkillDamageData["iYuanhuY"] = netStreamValue:ReadChar()
		end
			if (iValueChangeFlag & 1 << 16) == ( 1 << 16) then
			tempakSkillDamageData["iExtraFinalDamageAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 17) == ( 1 << 17) then
			tempakSkillDamageData["iExtraFinalDamageAddPer"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 18) == ( 1 << 18) then
			tempakSkillDamageData["iExtraFinalHPAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 19) == ( 1 << 19) then
			tempakSkillDamageData["iExtraFinalHPAddPer"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 20) == ( 1 << 20) then
			tempakSkillDamageData["iBaseDamageValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 21) == ( 1 << 21) then
			tempakSkillDamageData["iBaseHPAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 22) == ( 1 << 22) then
			tempakSkillDamageData["iNumberAddPer"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 23) == ( 1 << 23) then
			tempakSkillDamageData["iNumberAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 24) == ( 1 << 24) then
			tempakSkillDamageData["iCurNumberAddValue"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 25) == ( 1 << 25) then
			tempakSkillDamageData["eSpecialFlag"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 26) == ( 1 << 26) then
			tempakSkillDamageData["iAddPassTime"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 27) == ( 1 << 27) then
			tempakSkillDamageData["iDodge"] = netStreamValue:ReadInt()
		end
			tempakBattleLog["akSkillDamageData"][j] = tempakSkillDamageData
		end
		if (iValueChangeFlag & 1 << 27) == ( 1 << 27) then
			tempakBattleLog["iMutilTag"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 28) == ( 1 << 28) then
			tempakBattleLog["bDeath"] = netStreamValue:ReadByte()
		end
		if (iValueChangeFlag & 1 << 29) == ( 1 << 29) then
			tempakBattleLog["iCallDiscipleIndex"] = netStreamValue:ReadInt()
		end
		if (iValueChangeFlag & 1 << 30) == ( 1 << 30) then
			tempakBattleLog["iPetNum"] = netStreamValue:ReadByte()
		end
		local iPetNum = tempakBattleLog["iPetNum"]
			tempakBattleLog["aiPetID"] = {}
		for j = 0,iPetNum or -1 do
			if j >= iPetNum then
				break
			end
			tempakBattleLog["aiPetID"][j] = netStreamValue:ReadInt()
		end
		result["akBattleLog"][i] = tempakBattleLog
	end
	return result
end

function Decode_SeGC_Display_Battle_UpdateTreasureBox(netStreamValue)
	local result = { ["iNum"] = 0,["akBattleLog"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	result["akBattleLog"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakBattleLog = { ["iGridX"] = 0,["iGridY"] = 0,["uiDropTypeID"] = 0,["uiLevel"] = 0,["iFlag"] = 0,["iNum"] = 0,["akReward"] = nil,} 
		tempakBattleLog["iGridX"] = netStreamValue:ReadInt()
		tempakBattleLog["iGridY"] = netStreamValue:ReadInt()
		tempakBattleLog["uiDropTypeID"] = netStreamValue:ReadInt()
		tempakBattleLog["uiLevel"] = netStreamValue:ReadInt()
		tempakBattleLog["iFlag"] = netStreamValue:ReadInt()
		tempakBattleLog["iNum"] = netStreamValue:ReadInt()
		local iNum = tempakBattleLog["iNum"]
		tempakBattleLog["akReward"] = {}
		for j = 0,iNum or -1 do
			if j >= iNum then
				break
			end
			local tempakReward = { ["iValueChangeFlag"] = 0,["uiItemID"] = 0,["uiNums"] = 0,["eType"] = 0,} 
			local iValueChangeFlag = netStreamValue:ReadByte()
		tempakReward["iValueChangeFlag"] = iValueChangeFlag
			if (iValueChangeFlag & 1 << 0) == ( 1 << 0) then
			tempakReward["uiItemID"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 1) == ( 1 << 1) then
			tempakReward["uiNums"] = netStreamValue:ReadInt()
		end
			if (iValueChangeFlag & 1 << 2) == ( 1 << 2) then
			tempakReward["eType"] = netStreamValue:ReadInt()
		end
			tempakBattleLog["akReward"][j] = tempakReward
		end
		result["akBattleLog"][i] = tempakBattleLog
	end
	return result
end

function Decode_SeGC_Click_Battle_Check(netStreamValue)
	local result = { ["ccount"] = 0,["scount"] = 0,} 
	result["ccount"] = netStreamValue:ReadInt()
	result["scount"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_CallHelpBackInfo(netStreamValue)
	local result = { ["isSuccess"] = 0,["reason"] = 0,} 
	result["isSuccess"] = netStreamValue:ReadInt()
	result["reason"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Inviteable_Update(netStreamValue)
	local result = { ["uiRoleTypeID"] = 0,["uiInviteable"] = 0,} 
	result["uiRoleTypeID"] = netStreamValue:ReadInt()
	result["uiInviteable"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_NPC_Interact_Beg(netStreamValue)
	local result = { ["uiRoleID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_NPC_Interact_Random_Items(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiItemID"] = 0,["iNum"] = 0,["iItemP"] = 0,["iTreasureP"] = 0,["iRandomItemNum"] = nil,["eInteractType"] = NPCIT_UNKNOW,["auiRoleItem"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	result["iItemP"] = netStreamValue:ReadByte()
	result["iTreasureP"] = netStreamValue:ReadByte()
	result["iRandomItemNum"] = netStreamValue:ReadInt()
	result["eInteractType"] = netStreamValue:ReadInt()
	local iRandomItemNum = result["iRandomItemNum"]
		result["auiRoleItem"] = {}
	for i = 0,iRandomItemNum or -1 do
		if i >= iRandomItemNum then
			break
		end
		result["auiRoleItem"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_MapUpdate(netStreamValue)
	local result = { ["uiMapID"] = 0,["kMapData"] = nil,} 
	result["uiMapID"] = netStreamValue:ReadInt()
	result["kMapData"] = {["iRoleCount"] = 0,["auiRoleIDs"] = 0,["uiNameID"] = 0,["sBuildingImg"] = nil,["uiBuildingType"] = 0,["bCanShow"] = nil,["bCanReturn"] = nil,}
		result["kMapData"]["iRoleCount"] = netStreamValue:ReadInt()
	local iRoleCount = result["kMapData"]["iRoleCount"]
		result["kMapData"]["auiRoleIDs"] = {}
	for i = 0,iRoleCount or -1 do
		if i >= iRoleCount then
			break
		end
			result["kMapData"]["auiRoleIDs"][i] = netStreamValue:ReadInt()
		end
		result["kMapData"]["uiNameID"] = netStreamValue:ReadInt()
		result["kMapData"]["sBuildingImg"] = netStreamValue:ReadString()
		result["kMapData"]["uiBuildingType"] = netStreamValue:ReadInt()
		result["kMapData"]["bCanShow"] = netStreamValue:ReadByte()
		result["kMapData"]["bCanReturn"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_NPC_Interact_Give_Gift(netStreamValue)
	local result = { ["uiSrcRoleID"] = 0,["uiDstRoleID"] = 0,["iResoult"] = 0,} 
	result["uiSrcRoleID"] = netStreamValue:ReadInt()
	result["uiDstRoleID"] = netStreamValue:ReadInt()
	result["iResoult"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Interact_Date_Update(netStreamValue)
	local result = { ["uiRoleID"] = 0,["eInteractType"] = 0,["uiTimes"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["eInteractType"] = netStreamValue:ReadInt()
	result["uiTimes"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Interact_RefreshTimes_Update(netStreamValue)
	local result = { ["uiPlayerBehaviorType"] = 0,["uiRefreshTimes"] = 0,} 
	result["uiPlayerBehaviorType"] = netStreamValue:ReadInt()
	result["uiRefreshTimes"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Choose_TiGuan(netStreamValue)
	local result = { ["uiID"] = 0,["uiIsAbandom"] = 0,["uiIsBranch"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiIsAbandom"] = netStreamValue:ReadInt()
	result["uiIsBranch"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_CLICK_START_CLAN_ELIMINATE(netStreamValue)
	local result = { ["uiID"] = 0,} 
	result["uiID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_LimitShop_Action(netStreamValue)
	local result = { ["uiType"] = 0,["uiIfSuc"] = 0,["uiBeginTime"] = 0,["uistate"] = 0,} 
	result["uiType"] = netStreamValue:ReadInt()
	result["uiIfSuc"] = netStreamValue:ReadInt()
	result["uiBeginTime"] = netStreamValue:ReadInt()
	result["uistate"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Select_Zhuazhou(netStreamValue)
	local result = { ["uiAnswerID"] = 0,} 
	result["uiAnswerID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Add_Clan_Delegation_Task(netStreamValue)
	local result = { ["uiClanBaseID"] = 0,} 
	result["uiClanBaseID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Add_City_Delegation_Task(netStreamValue)
	local result = { ["uiCityBaseID"] = 0,} 
	result["uiCityBaseID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Add_Interact_Option(netStreamValue)
	local result = { ["kInteractOption"] = nil,} 
	result["kInteractOption"] = {["uiChoiceLangID"] = 0,["uiLockLangID"] = 0,["uiRoleTypeID"] = 0,["uiMapID"] = 0,["uiConditionID"] = 0,["bIsLock"] = 0,["uiMazeTypeID"] = 0,["uiAreaIndex"] = 0,["uiCardID"] = 0,["uiRow"] = 0,["uiColumn"] = 0,["eInteractType"] = 0,["uiTaskID"] = 0,}
		result["kInteractOption"]["uiChoiceLangID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiLockLangID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiRoleTypeID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiMapID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiConditionID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["bIsLock"] = netStreamValue:ReadByte()
		result["kInteractOption"]["uiMazeTypeID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiAreaIndex"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiCardID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiRow"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiColumn"] = netStreamValue:ReadInt()
		result["kInteractOption"]["eInteractType"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiTaskID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Remove_Interact_Option(netStreamValue)
	local result = { ["kInteractOption"] = nil,} 
	result["kInteractOption"] = {["uiChoiceLangID"] = 0,["uiLockLangID"] = 0,["uiRoleTypeID"] = 0,["uiMapID"] = 0,["uiConditionID"] = 0,["bIsLock"] = 0,["uiMazeTypeID"] = 0,["uiAreaIndex"] = 0,["uiCardID"] = 0,["uiRow"] = 0,["uiColumn"] = 0,["eInteractType"] = 0,["uiTaskID"] = 0,}
		result["kInteractOption"]["uiChoiceLangID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiLockLangID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiRoleTypeID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiMapID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiConditionID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["bIsLock"] = netStreamValue:ReadByte()
		result["kInteractOption"]["uiMazeTypeID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiAreaIndex"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiCardID"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiRow"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiColumn"] = netStreamValue:ReadInt()
		result["kInteractOption"]["eInteractType"] = netStreamValue:ReadInt()
		result["kInteractOption"]["uiTaskID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_CloseGiveGift(netStreamValue)
	local result = { ["uiFreeID"] = nil,} 
	result["uiFreeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Update_Role_Select_Event(netStreamValue)
	local result = { ["uiRoleTypeID"] = 0,["uiMapTypeID"] = 0,["uiMazeTypeID"] = 0,["uiAreaIndex"] = 0,["uiCardTypeID"] = 0,["uiRow"] = 0,["uiColumn"] = 0,} 
	result["uiRoleTypeID"] = netStreamValue:ReadInt()
	result["uiMapTypeID"] = netStreamValue:ReadInt()
	result["uiMazeTypeID"] = netStreamValue:ReadInt()
	result["uiAreaIndex"] = netStreamValue:ReadInt()
	result["uiCardTypeID"] = netStreamValue:ReadInt()
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_PlayMazeRoleAnim(netStreamValue)
	local result = { ["uiRow"] = nil,["uiColumn"] = nil,["uiAnimType"] = nil,["bIsLoop"] = nil,["bNeedRecover"] = nil,} 
	result["uiRow"] = netStreamValue:ReadInt()
	result["uiColumn"] = netStreamValue:ReadInt()
	result["uiAnimType"] = netStreamValue:ReadInt()
	result["bIsLoop"] = netStreamValue:ReadByte()
	result["bNeedRecover"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_ShowMazeRoleBubble(netStreamValue)
	local result = { ["uiContentLangID"] = nil,["uiRoleID"] = nil,} 
	result["uiContentLangID"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MazeEnemyEscape(netStreamValue)
	local result = { ["uiGridID"] = nil,["uiRoleExp"] = nil,["uiMartialExp"] = nil,} 
	result["uiGridID"] = netStreamValue:ReadInt()
	result["uiRoleExp"] = netStreamValue:ReadInt()
	result["uiMartialExp"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Update_TitleID(netStreamValue)
	local result = { ["uiTitleID"] = nil,["uiUsed"] = nil,} 
	result["uiTitleID"] = netStreamValue:ReadInt()
	result["uiUsed"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Custom_Plot(netStreamValue)
	local result = { ["uiPlotType"] = 0,["uiRoleID"] = 0,["uiLanguage"] = 0,["iParamSize"] = 0,["auiCustomIDs"] = nil,} 
	result["uiPlotType"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiLanguage"] = netStreamValue:ReadInt()
	result["iParamSize"] = netStreamValue:ReadInt()
	local iParamSize = result["iParamSize"]
		result["auiCustomIDs"] = {}
	for i = 0,iParamSize or -1 do
		if i >= iParamSize then
			break
		end
		result["auiCustomIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_Dynamics_Toast(netStreamValue)
	local result = { ["uiLanguage"] = 0,["iParamSize"] = 0,["auiCustomIDs"] = nil,} 
	result["uiLanguage"] = netStreamValue:ReadInt()
	result["iParamSize"] = netStreamValue:ReadInt()
	local iParamSize = result["iParamSize"]
		result["auiCustomIDs"] = {}
	for i = 0,iParamSize or -1 do
		if i >= iParamSize then
			break
		end
		result["auiCustomIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Click_ChangeSubRole(netStreamValue)
	local result = { ["uiRoleUID"] = 0,["uiSubRoleTypeID"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	result["uiSubRoleTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_BreakDispLimit(netStreamValue)
	local result = { ["uiRoleUID"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_ConsultClose(netStreamValue)
	local result = { ["uiRoleUID"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_LeaveTeam(netStreamValue)
	local result = { ["uiRoleUID"] = 0,} 
	result["uiRoleUID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_UnLeaveable_Update(netStreamValue)
	local result = { ["iNum"] = nil,["auiRoleID"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	local iNum = result["iNum"]
		result["auiRoleID"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["auiRoleID"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_Display_UpdateChoiceInfo(netStreamValue)
	local result = { ["uiChoiceLangID"] = 0,["uiTextLangID"] = 0,["uiRoleBaseID"] = 0,["uiCustomModelID"] = 0,["acPlayerName"] = nil,["bIsLocked"] = nil,["bIsImportantChoice"] = nil,["uiTaskID"] = 0,} 
	result["uiChoiceLangID"] = netStreamValue:ReadInt()
	result["uiTextLangID"] = netStreamValue:ReadInt()
	result["uiRoleBaseID"] = netStreamValue:ReadInt()
	result["uiCustomModelID"] = netStreamValue:ReadInt()
	result["acPlayerName"] = netStreamValue:ReadString()
	result["bIsLocked"] = netStreamValue:ReadByte()
	result["bIsImportantChoice"] = netStreamValue:ReadByte()
	result["uiTaskID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ShowChoiceWindow(netStreamValue)
	local result = { ["uiTaskID"] = 0,} 
	result["uiTaskID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ClearChoiceInfo(netStreamValue)
	local result = { ["uiTaskID"] = 0,} 
	result["uiTaskID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Start_Guide(netStreamValue)
	local result = { ["uiGuideID"] = 0,} 
	result["uiGuideID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_RedKnife_Update(netStreamValue)
	local result = { ["uiID"] = nil,["uiCuiLian"] = nil,["uiItemID"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiCuiLian"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_RedKnife_Delete(netStreamValue)
	local result = { ["uiID"] = nil,["uiItemID"] = nil,} 
	result["uiID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_End(netStreamValue)
	local result = { ["uiParam"] = 0,} 
	result["uiParam"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Clan_Join(netStreamValue)
	local result = { ["uiRoleTypeID"] = 0,["uiClanTypeID"] = 0,} 
	result["uiRoleTypeID"] = netStreamValue:ReadInt()
	result["uiClanTypeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Clan_Info_Update(netStreamValue)
	local result = { ["kClanEliminate"] = nil,} 
	result["kClanEliminate"] = {["uiClanTypeID"] = 0,["uiClanDisplayState"] = 0,["uiClanState"] = 0,["iClanDisposition"] = 0,}
		result["kClanEliminate"]["uiClanTypeID"] = netStreamValue:ReadInt()
		result["kClanEliminate"]["uiClanDisplayState"] = netStreamValue:ReadInt()
		result["kClanEliminate"]["uiClanState"] = netStreamValue:ReadInt()
		result["kClanEliminate"]["iClanDisposition"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Clan_Enter(netStreamValue)
	local result = { ["uiClanID"] = 0,} 
	result["uiClanID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Clan_Mission_Start(netStreamValue)
	local result = { ["uiClanID"] = 0,} 
	result["uiClanID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Clan_Mission_Select_Role(netStreamValue)
	local result = { ["uiClanID"] = 0,["uiRoleID"] = 0,} 
	result["uiClanID"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_Clan_Martial_Learn(netStreamValue)
	local result = { ["uiClanID"] = 0,["uiMartialID"] = 0,["uiConditionID"] = 0,} 
	result["uiClanID"] = netStreamValue:ReadInt()
	result["uiMartialID"] = netStreamValue:ReadInt()
	result["uiConditionID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Clan_Branch_Info_Update(netStreamValue)
	local result = { ["kClanBranch"] = nil,} 
	result["kClanBranch"] = {["uiClanTypeID"] = 0,["uiClanNameID"] = 0,["iDonateNum"] = 0,["uiClanCityID"] = 0,["uiClanState"] = 0,["uiClanTreasureID"] = 0,}
		result["kClanBranch"]["uiClanTypeID"] = netStreamValue:ReadInt()
		result["kClanBranch"]["uiClanNameID"] = netStreamValue:ReadInt()
		result["kClanBranch"]["iDonateNum"] = netStreamValue:ReadInt()
		result["kClanBranch"]["uiClanCityID"] = netStreamValue:ReadInt()
		result["kClanBranch"]["uiClanState"] = netStreamValue:ReadInt()
		result["kClanBranch"]["uiClanTreasureID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Clan_Branch_Result(netStreamValue)
	local result = { ["iResult"] = nil,} 
	result["iResult"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_AIInfo(netStreamValue)
	local result = { ["uiRoleID"] = nil,["iIndex"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["iIndex"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_UploadAIInfo(netStreamValue)
	local result = { ["uiRoleID"] = nil,["iIndex"] = nil,["iNum"] = 0,["actionList"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["iIndex"] = netStreamValue:ReadByte()
	result["iNum"] = netStreamValue:ReadByte()
	local iNum = result["iNum"]
		result["actionList"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["actionList"][i] = netStreamValue:ReadDword64()
	end
	return result
end

function Decode_SeGC_Click_UpdateRoleEmbattle(netStreamValue)
	local result = { ["iID"] = nil,["iRound"] = nil,["iNum"] = nil,["akRoleEmbattle"] = nil,} 
	result["iID"] = netStreamValue:ReadByte()
	result["iRound"] = netStreamValue:ReadByte()
	result["iNum"] = netStreamValue:ReadByte()
	result["akRoleEmbattle"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRoleEmbattle = { ["uiRoleID"] = 0,["iID"] = 0,["iRound"] = 0,["iGridX"] = 0,["iGridY"] = 0,["eFlag"] = INVALID,["bPet"] = false,["uiFlag"] = 0,} 
		tempakRoleEmbattle["uiRoleID"] = netStreamValue:ReadInt()
		tempakRoleEmbattle["iID"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iRound"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iGridX"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iGridY"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["eFlag"] = netStreamValue:ReadInt()
		tempakRoleEmbattle["bPet"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["uiFlag"] = netStreamValue:ReadInt()
		result["akRoleEmbattle"][i] = tempakRoleEmbattle
	end
	return result
end

function Decode_SeGC_Display_UpdateRoleEmbattleRet(netStreamValue)
	local result = { ["iID"] = nil,["iRound"] = nil,["bSuccess"] = nil,} 
	result["iID"] = netStreamValue:ReadByte()
	result["iRound"] = netStreamValue:ReadByte()
	result["bSuccess"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_InitRoleEmbattle(netStreamValue)
	local result = { ["iNum"] = nil,["akRoleEmbattle"] = nil,} 
	result["iNum"] = netStreamValue:ReadByte()
	result["akRoleEmbattle"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRoleEmbattle = { ["uiRoleID"] = 0,["iID"] = 0,["iRound"] = 0,["iGridX"] = 0,["iGridY"] = 0,["eFlag"] = INVALID,["bPet"] = false,["uiFlag"] = 0,} 
		tempakRoleEmbattle["uiRoleID"] = netStreamValue:ReadInt()
		tempakRoleEmbattle["iID"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iRound"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iGridX"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["iGridY"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["eFlag"] = netStreamValue:ReadInt()
		tempakRoleEmbattle["bPet"] = netStreamValue:ReadByte()
		tempakRoleEmbattle["uiFlag"] = netStreamValue:ReadInt()
		result["akRoleEmbattle"][i] = tempakRoleEmbattle
	end
	return result
end

function Decode_SeGC_UpdateRanklist(netStreamValue)
	local result = { ["iNum"] = 0,["akRanklistInfos"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akRanklistInfos"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRanklistInfos = { ["uiRankID"] = 0,["uiScore"] = 0,["bIsAdd"] = 0,} 
		tempakRanklistInfos["uiRankID"] = netStreamValue:ReadInt()
		tempakRanklistInfos["uiScore"] = netStreamValue:ReadInt()
		tempakRanklistInfos["bIsAdd"] = netStreamValue:ReadByte()
		result["akRanklistInfos"][i] = tempakRanklistInfos
	end
	return result
end

function Decode_SeGC_DispalyBabyState(netStreamValue)
	local result = { ["uiBabyRoleID"] = nil,["kBabyInfo"] = nil,} 
	result["uiBabyRoleID"] = netStreamValue:ReadInt()
	result["kBabyInfo"] = {["uiStateID"] = 0,["uiBabyID"] = 0,["uiFatherID"] = 0,["uiMotherID"] = 0,["uiBirthday"] = 0,["uiState"] = 0,["uiNextLearnTime"] = 0,["acPlayerName"] = nil,["uiMasterNum"] = 0,["auiMasters"] = nil,}
		result["kBabyInfo"]["uiStateID"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiBabyID"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiFatherID"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiMotherID"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiBirthday"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiState"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["uiNextLearnTime"] = netStreamValue:ReadInt()
		result["kBabyInfo"]["acPlayerName"] = netStreamValue:ReadString()
		result["kBabyInfo"]["uiMasterNum"] = netStreamValue:ReadInt()
	local uiMasterNum = result["kBabyInfo"]["uiMasterNum"]
		result["kBabyInfo"]["auiMasters"] = {}
	for i = 0,uiMasterNum or -1 do
		if i >= uiMasterNum then
			break
		end
			result["kBabyInfo"]["auiMasters"][i] = netStreamValue:ReadInt()
		end
	return result
end

function Decode_SeGC_ArenaBattleCalc(netStreamValue)
	local result = { ["kCalcInfo"] = nil,} 
	result["kCalcInfo"] = {["uiMatchType"] = 0,["uiMatchID"] = 0,["uiRoundID"] = 0,["uiBattleID"] = 0,["uiPlyID1"] = 0,["uiPlyID2"] = 0,["uiBuffTypeID"] = 0,["uiArenaTypeID"] = 0,["uiEnemyArenaTypeID"] = 0,["iPly1PkDataCount"] = 0,["iPly2PkDataCount"] = 0,["akPly1PkData"] = nil,["akPly2PkData"] = nil,}
		result["kCalcInfo"]["uiMatchType"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiMatchID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiRoundID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiBattleID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiPlyID1"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["uiPlyID2"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["uiBuffTypeID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiArenaTypeID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiEnemyArenaTypeID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["iPly1PkDataCount"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["iPly2PkDataCount"] = netStreamValue:ReadInt()
		local iPly1PkDataCount = result["kCalcInfo"]["iPly1PkDataCount"]
		result["kCalcInfo"]["akPly1PkData"] = {}
	for i = 0,iPly1PkDataCount or -1 do
		if i >= iPly1PkDataCount then
			break
		end
		local tempakPly1PkData = { ["iPkDataFlag"] = 0,["iDataSize"] = 0,["akData"] = nil,} 
		tempakPly1PkData["iPkDataFlag"] = netStreamValue:ReadByte()
		tempakPly1PkData["iDataSize"] = netStreamValue:ReadInt()
		local iDataSize = tempakPly1PkData["iDataSize"]
			tempakPly1PkData["akData"] = {}
		for j = 0,iDataSize or -1 do
			if j >= iDataSize then
				break
			end
			tempakPly1PkData["akData"][j] = netStreamValue:ReadByte()
		end
		result["kCalcInfo"]["akPly1PkData"][i] = tempakPly1PkData
	end
		local iPly2PkDataCount = result["kCalcInfo"]["iPly2PkDataCount"]
		result["kCalcInfo"]["akPly2PkData"] = {}
	for i = 0,iPly2PkDataCount or -1 do
		if i >= iPly2PkDataCount then
			break
		end
		local tempakPly2PkData = { ["iPkDataFlag"] = 0,["iDataSize"] = 0,["akData"] = nil,} 
		tempakPly2PkData["iPkDataFlag"] = netStreamValue:ReadByte()
		tempakPly2PkData["iDataSize"] = netStreamValue:ReadInt()
		local iDataSize = tempakPly2PkData["iDataSize"]
			tempakPly2PkData["akData"] = {}
		for j = 0,iDataSize or -1 do
			if j >= iDataSize then
				break
			end
			tempakPly2PkData["akData"][j] = netStreamValue:ReadByte()
		end
		result["kCalcInfo"]["akPly2PkData"][i] = tempakPly2PkData
	end
	return result
end

function Decode_SeGC_ArenaBattleCalcResult(netStreamValue)
	local result = { ["uiSeqID"] = 0,["bEndPakcet"] = false,["kResultInfo"] = nil,} 
	result["uiSeqID"] = netStreamValue:ReadDword64()
	result["bEndPakcet"] = netStreamValue:ReadByte()
	result["kResultInfo"] = {["uiMatchType"] = 0,["uiMatchID"] = 0,["uiRoundID"] = 0,["uiBattleID"] = 0,["uiPlyID1"] = 0,["uiPlyID2"] = 0,["aiClan1"] = 0,["aiClan2"] = 0,["uiWinnerID"] = 0,["iRecordDataSize"] = 0,["akRecordData"] = nil,}
		result["kResultInfo"]["uiMatchType"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiMatchID"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiRoundID"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiBattleID"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiPlyID1"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["uiPlyID2"] = netStreamValue:ReadDword64()
	result["kResultInfo"]["aiClan1"] = {}
	for i = 0,SSD_MAX_ARENA_ROLE_SIZE or -1 do
		if i >= SSD_MAX_ARENA_ROLE_SIZE then
			break
		end
			result["kResultInfo"]["aiClan1"][i] = netStreamValue:ReadInt()
		end
	result["kResultInfo"]["aiClan2"] = {}
	for i = 0,SSD_MAX_ARENA_ROLE_SIZE or -1 do
		if i >= SSD_MAX_ARENA_ROLE_SIZE then
			break
		end
			result["kResultInfo"]["aiClan2"][i] = netStreamValue:ReadInt()
		end
		result["kResultInfo"]["uiWinnerID"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["iRecordDataSize"] = netStreamValue:ReadInt()
	result["kResultInfo"]["akRecordData"] = {}
	for i = 0,SSD_MAX_ARENA_RECORD_DATA_ALL_MAX_SIZE or -1 do
		if i >= SSD_MAX_ARENA_RECORD_DATA_ALL_MAX_SIZE then
			break
		end
			result["kResultInfo"]["akRecordData"][i] = netStreamValue:ReadByte()
		end
	return result
end

function Decode_SeGC_ChallengePlatRoleCalc(netStreamValue)
	local result = { ["kCalcInfo"] = nil,} 
	result["kCalcInfo"] = {["uiClientID1"] = 0,["uiPlyID1"] = 0,["uiPlyID2"] = 0,["uiModelID2"] = 0,["uiMeridian2"] = 0,["acPly1Name"] = nil,["acPly2Name"] = nil,["iPly1PkDataCount"] = 0,["iPly2PkDataCount"] = 0,["akPly1PkData"] = nil,["akPly2PkData"] = nil,["uiBattleID"] = 0,["uiMatchType"] = 0,}
		result["kCalcInfo"]["uiClientID1"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiPlyID1"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["uiPlyID2"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["uiModelID2"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiMeridian2"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["acPly1Name"] = netStreamValue:ReadString()
		result["kCalcInfo"]["acPly2Name"] = netStreamValue:ReadString()
		result["kCalcInfo"]["iPly1PkDataCount"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["iPly2PkDataCount"] = netStreamValue:ReadInt()
		local iPly1PkDataCount = result["kCalcInfo"]["iPly1PkDataCount"]
		result["kCalcInfo"]["akPly1PkData"] = {}
	for i = 0,iPly1PkDataCount or -1 do
		if i >= iPly1PkDataCount then
			break
		end
		local tempakPly1PkData = { ["iPkDataFlag"] = 0,["iDataSize"] = 0,["akData"] = nil,} 
		tempakPly1PkData["iPkDataFlag"] = netStreamValue:ReadByte()
		tempakPly1PkData["iDataSize"] = netStreamValue:ReadInt()
		local iDataSize = tempakPly1PkData["iDataSize"]
			tempakPly1PkData["akData"] = {}
		for j = 0,iDataSize or -1 do
			if j >= iDataSize then
				break
			end
			tempakPly1PkData["akData"][j] = netStreamValue:ReadByte()
		end
		result["kCalcInfo"]["akPly1PkData"][i] = tempakPly1PkData
	end
		local iPly2PkDataCount = result["kCalcInfo"]["iPly2PkDataCount"]
		result["kCalcInfo"]["akPly2PkData"] = {}
	for i = 0,iPly2PkDataCount or -1 do
		if i >= iPly2PkDataCount then
			break
		end
		local tempakPly2PkData = { ["iPkDataFlag"] = 0,["iDataSize"] = 0,["akData"] = nil,} 
		tempakPly2PkData["iPkDataFlag"] = netStreamValue:ReadByte()
		tempakPly2PkData["iDataSize"] = netStreamValue:ReadInt()
		local iDataSize = tempakPly2PkData["iDataSize"]
			tempakPly2PkData["akData"] = {}
		for j = 0,iDataSize or -1 do
			if j >= iDataSize then
				break
			end
			tempakPly2PkData["akData"][j] = netStreamValue:ReadByte()
		end
		result["kCalcInfo"]["akPly2PkData"][i] = tempakPly2PkData
	end
		result["kCalcInfo"]["uiBattleID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiMatchType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_GiveUpChallengePlatRoleCalc(netStreamValue)
	local result = { ["defPlayerID"] = 0,} 
	result["defPlayerID"] = netStreamValue:ReadDword64()
	return result
end

function Decode_SeGC_ZmBattleCalc(netStreamValue)
	local result = { ["kCalcInfo"] = nil,} 
	result["kCalcInfo"] = {["nRoomId"] = 0,["uiRoundID"] = 0,["uiBattleID"] = 0,["uiFightID"] = 0,["kPlayerInfo1"] = nil,["kPlayerInfo2"] = nil,["iFreezeCardNum"] = 0,["akFreezeCardData"] = nil,}
		result["kCalcInfo"]["nRoomId"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["uiRoundID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiBattleID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["uiFightID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo1"] = {}
		result["kCalcInfo"]["kPlayerInfo1"]["defPlayerID"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["kPlayerInfo1"]["acPlayerName"] = netStreamValue:ReadString()
		result["kCalcInfo"]["kPlayerInfo1"]["akCardData"] = {}
	for i = 0,SSD_MAX_ZM_BATTLE_CARD_SIZE or -1 do
		if i >= SSD_MAX_ZM_BATTLE_CARD_SIZE then
			break
		end
		local tempakCardData = { ["dwBaseId"] = 0,["dwLv"] = 0,["dwId"] = 0,["dwEquipId"] = 0,["wX"] = 0,["wY"] = 0,} 
		tempakCardData["dwBaseId"] = netStreamValue:ReadInt()
		tempakCardData["dwLv"] = netStreamValue:ReadInt()
		tempakCardData["dwId"] = netStreamValue:ReadInt()
		tempakCardData["dwEquipId"] = netStreamValue:ReadInt()
		tempakCardData["wX"] = netStreamValue:ReadShort()
		tempakCardData["wY"] = netStreamValue:ReadShort()
		result["kCalcInfo"]["kPlayerInfo1"]["akCardData"][i] = tempakCardData
	end
		result["kCalcInfo"]["kPlayerInfo1"]["akEquipData"] = {}
	for i = 0,SSD_MAX_ZM_BATTLE_CARD_SIZE or -1 do
		if i >= SSD_MAX_ZM_BATTLE_CARD_SIZE then
			break
		end
		local tempakEquipData = { ["dwBaseId"] = 0,["dwLv"] = 0,["dwId"] = 0,} 
		tempakEquipData["dwBaseId"] = netStreamValue:ReadInt()
		tempakEquipData["dwLv"] = netStreamValue:ReadInt()
		tempakEquipData["dwId"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo1"]["akEquipData"][i] = tempakEquipData
	end
		result["kCalcInfo"]["kPlayerInfo1"]["dwClan"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo1"]["dwBuffID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo1"]["dwClanBuffID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo1"]["dwClanBuffCount"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo2"] = {}
		result["kCalcInfo"]["kPlayerInfo2"]["defPlayerID"] = netStreamValue:ReadDword64()
		result["kCalcInfo"]["kPlayerInfo2"]["acPlayerName"] = netStreamValue:ReadString()
		result["kCalcInfo"]["kPlayerInfo2"]["akCardData"] = {}
	for i = 0,SSD_MAX_ZM_BATTLE_CARD_SIZE or -1 do
		if i >= SSD_MAX_ZM_BATTLE_CARD_SIZE then
			break
		end
		local tempakCardData = { ["dwBaseId"] = 0,["dwLv"] = 0,["dwId"] = 0,["dwEquipId"] = 0,["wX"] = 0,["wY"] = 0,} 
		tempakCardData["dwBaseId"] = netStreamValue:ReadInt()
		tempakCardData["dwLv"] = netStreamValue:ReadInt()
		tempakCardData["dwId"] = netStreamValue:ReadInt()
		tempakCardData["dwEquipId"] = netStreamValue:ReadInt()
		tempakCardData["wX"] = netStreamValue:ReadShort()
		tempakCardData["wY"] = netStreamValue:ReadShort()
		result["kCalcInfo"]["kPlayerInfo2"]["akCardData"][i] = tempakCardData
	end
		result["kCalcInfo"]["kPlayerInfo2"]["akEquipData"] = {}
	for i = 0,SSD_MAX_ZM_BATTLE_CARD_SIZE or -1 do
		if i >= SSD_MAX_ZM_BATTLE_CARD_SIZE then
			break
		end
		local tempakEquipData = { ["dwBaseId"] = 0,["dwLv"] = 0,["dwId"] = 0,} 
		tempakEquipData["dwBaseId"] = netStreamValue:ReadInt()
		tempakEquipData["dwLv"] = netStreamValue:ReadInt()
		tempakEquipData["dwId"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo2"]["akEquipData"][i] = tempakEquipData
	end
		result["kCalcInfo"]["kPlayerInfo2"]["dwClan"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo2"]["dwBuffID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo2"]["dwClanBuffID"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["kPlayerInfo2"]["dwClanBuffCount"] = netStreamValue:ReadInt()
		result["kCalcInfo"]["iFreezeCardNum"] = netStreamValue:ReadInt()
	local iFreezeCardNum = result["kCalcInfo"]["iFreezeCardNum"]
		result["kCalcInfo"]["akFreezeCardData"] = {}
	for i = 0,iFreezeCardNum or -1 do
		if i >= iFreezeCardNum then
			break
		end
			result["kCalcInfo"]["akFreezeCardData"][i] = netStreamValue:ReadInt()
		end
	return result
end

function Decode_SeGC_ZmBattleCalcResult(netStreamValue)
	local result = { ["kResultInfo"] = nil,} 
	result["kResultInfo"] = {["nRoomId"] = 0,["uiRoundID"] = 0,["uiBattleID"] = 0,["uiPlyID1"] = 0,["uiPlyID2"] = 0,["uiWinnerID"] = 0,["iRecordDataSize"] = 0,["akRecordData"] = nil,}
		result["kResultInfo"]["nRoomId"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["uiRoundID"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiBattleID"] = netStreamValue:ReadInt()
		result["kResultInfo"]["uiPlyID1"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["uiPlyID2"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["uiWinnerID"] = netStreamValue:ReadDword64()
		result["kResultInfo"]["iRecordDataSize"] = netStreamValue:ReadInt()
	result["kResultInfo"]["akRecordData"] = {}
	for i = 0,SSD_MAX_ARENA_RECORD_DATA_MAX_SIZE or -1 do
		if i >= SSD_MAX_ARENA_RECORD_DATA_MAX_SIZE then
			break
		end
			result["kResultInfo"]["akRecordData"][i] = netStreamValue:ReadByte()
		end
	return result
end

function Decode_SeGC_Display_DuelRole(netStreamValue)
	local result = { ["uiResult"] = nil,["uiMapID"] = nil,["uiRoleID"] = nil,} 
	result["uiResult"] = netStreamValue:ReadInt()
	result["uiMapID"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ShowChooseRole(netStreamValue)
	local result = { ["uiParam1"] = 0,} 
	result["uiParam1"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_ArenaBattleBigCmdPack(netStreamValue)
	local result = { ["kBatchData"] = nil,} 
	result["kBatchData"] = {["uiTotalSize"] = 0,["uiBatchIdx"] = 0,["uiBatchSize"] = nil,["akData"] = nil,}
		result["kBatchData"]["uiTotalSize"] = netStreamValue:ReadInt()
		result["kBatchData"]["uiBatchIdx"] = netStreamValue:ReadInt()
		result["kBatchData"]["uiBatchSize"] = netStreamValue:ReadInt()
	local uiBatchSize = result["kBatchData"]["uiBatchSize"]
		result["kBatchData"]["akData"] = {}
	for i = 0,uiBatchSize or -1 do
		if i >= uiBatchSize then
			break
		end
			result["kBatchData"]["akData"][i] = netStreamValue:ReadByte()
		end
	return result
end

function Decode_SeGC_StartShareLimitShop(netStreamValue)
	local result = { ["uiParam1"] = 0,["uiParam2"] = 0,} 
	result["uiParam1"] = netStreamValue:ReadInt()
	result["uiParam2"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_RoleLearnSecretBookMartial(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiItemID"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiItemID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_DiffDropUpdate(netStreamValue)
	local result = { ["iNum"] = 0,["akSaveData"] = nil,} 
	result["iNum"] = netStreamValue:ReadInt()
	result["akSaveData"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakSaveData = { ["uiTypeID"] = 0,["uiAccumulateTime"] = 0,["uiRoundFinish"] = 0,} 
		tempakSaveData["uiTypeID"] = netStreamValue:ReadInt()
		tempakSaveData["uiAccumulateTime"] = netStreamValue:ReadShort()
		tempakSaveData["uiRoundFinish"] = netStreamValue:ReadInt()
		result["akSaveData"][i] = tempakSaveData
	end
	return result
end

function Decode_SeGC_Display_ForceWeekEnd(netStreamValue)
	local result = { ["uiFree"] = 0,} 
	result["uiFree"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_RoleChallengeSelectRole(netStreamValue)
	local result = { ["uiRoleID"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_MartialStrong(netStreamValue)
	local result = { ["uiRoleID"] = nil,["uiMartialTypeID"] = nil,["uiLevel"] = nil,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiMartialTypeID"] = netStreamValue:ReadInt()
	result["uiLevel"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_MartialStrong(netStreamValue)
	local result = { ["iResult"] = 0,["uiRoleID"] = nil,["uiMartialTypeID"] = nil,["uiLevel"] = nil,} 
	result["iResult"] = netStreamValue:ReadInt()
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiMartialTypeID"] = netStreamValue:ReadInt()
	result["uiLevel"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Click_MakeMartialSecret(netStreamValue)
	local result = { ["uiMartialID"] = nil,} 
	result["uiMartialID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_MakeMartialSecret(netStreamValue)
	local result = { ["iResult"] = 0,} 
	result["iResult"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ResDropActivity(netStreamValue)
	local result = { ["iNum"] = 0,["aiOpenActivities"] = nil,["iTaskNum"] = 0,["aiExchangeNum"] = nil,["bIsNew"] = false,["iAddMeridianExp"] = 0,} 
	result["iNum"] = netStreamValue:ReadInt()
	local iNum = result["iNum"]
		result["aiOpenActivities"] = {}
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		result["aiOpenActivities"][i] = netStreamValue:ReadInt()
	end
	result["iTaskNum"] = netStreamValue:ReadInt()
	local iTaskNum = result["iTaskNum"]
		result["aiExchangeNum"] = {}
	for i = 0,iTaskNum or -1 do
		if i >= iTaskNum then
			break
		end
		result["aiExchangeNum"][i] = netStreamValue:ReadInt()
	end
	result["bIsNew"] = netStreamValue:ReadByte()
	result["iAddMeridianExp"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_CollectActivityExchangeRes(netStreamValue)
	local result = { ["bRes"] = nil,["uiCollectActivityID"] = 0,["uiExchangeNum"] = 0,} 
	result["bRes"] = netStreamValue:ReadByte()
	result["uiCollectActivityID"] = netStreamValue:ReadInt()
	result["uiExchangeNum"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_UpdateSameThreadPlayerInfo(netStreamValue)
	local result = { ["uiPlayerID"] = nil,["uiModelID"] = nil,["uiPetID"] = nil,["bIsUnlockHouse"] = nil,["acOpenID"] = nil,["acVOpenID"] = nil,["acPlayerName"] = nil,} 
	result["uiPlayerID"] = netStreamValue:ReadInt()
	result["uiModelID"] = netStreamValue:ReadInt()
	result["uiPetID"] = netStreamValue:ReadInt()
	result["bIsUnlockHouse"] = netStreamValue:ReadByte()
	result["acOpenID"] = netStreamValue:ReadString()
	result["acVOpenID"] = netStreamValue:ReadString()
	result["acPlayerName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_NoticeClientFightPlayer(netStreamValue)
	local result = { ["uiPlayerID"] = nil,["uiModelID"] = nil,["acPlayerName"] = nil,} 
	result["uiPlayerID"] = netStreamValue:ReadInt()
	result["uiModelID"] = netStreamValue:ReadInt()
	result["acPlayerName"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_NoticeClientAddFriend(netStreamValue)
	local result = { ["uiFriendPlayerID"] = nil,["acOpenID"] = nil,["acVOpenID"] = nil,} 
	result["uiFriendPlayerID"] = netStreamValue:ReadInt()
	result["acOpenID"] = netStreamValue:ReadString()
	result["acVOpenID"] = netStreamValue:ReadString()
	return result
end

function Decode_SeGC_Display_LevelUP(netStreamValue)
	local result = { ["uiRoleID"] = 0,["uiMartialID"] = 0,["uiOldLevel"] = 0,["uiNewLevel"] = 0,["bHasNewAttr"] = 0,} 
	result["uiRoleID"] = netStreamValue:ReadInt()
	result["uiMartialID"] = netStreamValue:ReadInt()
	result["uiOldLevel"] = netStreamValue:ReadInt()
	result["uiNewLevel"] = netStreamValue:ReadInt()
	result["bHasNewAttr"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_Display_ClearAllChoiceInfo(netStreamValue)
	local result = { ["uiTemp"] = 0,} 
	result["uiTemp"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_ShowCommonEmbattle(netStreamValue)
	local result = { ["uiType"] = nil,} 
	result["uiType"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_CommonEmbattleResult(netStreamValue)
	local result = { ["bSubmit"] = nil,} 
	result["bSubmit"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_DisplayUpdateCustomAdvLoot(netStreamValue)
	local result = { ["uiTaskEventID"] = nil,["bEnable"] = false,} 
	result["uiTaskEventID"] = netStreamValue:ReadInt()
	result["bEnable"] = netStreamValue:ReadByte()
	return result
end

function Decode_SeGC_ClickPickCustomAdvLoot(netStreamValue)
	local result = { ["uiCount"] = 0,["auiTaskEventIDs"] = nil,} 
	result["uiCount"] = netStreamValue:ReadInt()
	local uiCount = result["uiCount"]
		result["auiTaskEventIDs"] = {}
	for i = 0,uiCount or -1 do
		if i >= uiCount then
			break
		end
		result["auiTaskEventIDs"][i] = netStreamValue:ReadInt()
	end
	return result
end

function Decode_SeGC_DisplayAutoBattleTestReplay(netStreamValue)
	local result = { ["uiBattleID"] = 0,["defPlayerID"] = 0,["winPlayerID"] = 0,["dwTotalSize"] = 0,["uiBatchIdx"] = 0,["iBatchSize"] = 0,["akData"] = nil,} 
	result["uiBattleID"] = netStreamValue:ReadInt()
	result["defPlayerID"] = netStreamValue:ReadDword64()
	result["winPlayerID"] = netStreamValue:ReadDword64()
	result["dwTotalSize"] = netStreamValue:ReadInt()
	result["uiBatchIdx"] = netStreamValue:ReadInt()
	result["iBatchSize"] = netStreamValue:ReadInt()
	local iBatchSize = result["iBatchSize"]
		result["akData"] = {}
	for i = 0,iBatchSize or -1 do
		if i >= iBatchSize then
			break
		end
		result["akData"][i] = netStreamValue:ReadByte()
	end
	return result
end

function Decode_SeGC_ShowDialog(netStreamValue)
	local result = { ["uiDialogType"] = 0,["uiTitle"] = 0,["uiContent"] = 0,["uiTask"] = 0,["uiTaskRet"] = 0,["uiTaskRet2"] = 0,} 
	result["uiDialogType"] = netStreamValue:ReadInt()
	result["uiTitle"] = netStreamValue:ReadInt()
	result["uiContent"] = netStreamValue:ReadInt()
	result["uiTask"] = netStreamValue:ReadInt()
	result["uiTaskRet"] = netStreamValue:ReadInt()
	result["uiTaskRet2"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_RoleFaceOperate(netStreamValue)
	local result = { ["eOprType"] = SRFT_NULL,["uiParam"] = 0,["kRoleFaceData"] = nil,} 
	result["eOprType"] = netStreamValue:ReadInt()
	result["uiParam"] = netStreamValue:ReadInt()
	result["kRoleFaceData"] = {["uiHat"] = 0,["uiBack"] = 0,["uiHairBack"] = 0,["uiBody"] = 0,["uiFace"] = 0,["uiEyebrow"] = 0,["uiEye"] = 0,["uiMouth"] = 0,["uiNose"] = 0,["uiForeheadAdornment"] = 0,["uiFacialAdornment"] = 0,["uiHairFront"] = 0,["iEyebrowWidth"] = 0,["iEyebrowHeight"] = 0,["iEyebrowLocation"] = 0,["iEyeWidth"] = 0,["iEyeHeight"] = 0,["iEyeLocation"] = 0,["iNoseWidth"] = 0,["iNoseHeight"] = 0,["iNoseLocation"] = 0,["iMouthWidth"] = 0,["iMouthHeight"] = 0,["iMouthLocation"] = 0,["uiModelID"] = 0,["uiSex"] = 0,["uiCGSex"] = 0,["uiRoleID"] = 0,}
		result["kRoleFaceData"]["uiHat"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiBack"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiHairBack"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiBody"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiFace"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiEyebrow"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiEye"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiMouth"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiNose"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiForeheadAdornment"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiFacialAdornment"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiHairFront"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyebrowWidth"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyebrowHeight"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyebrowLocation"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyeWidth"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyeHeight"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iEyeLocation"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iNoseWidth"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iNoseHeight"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iNoseLocation"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iMouthWidth"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iMouthHeight"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["iMouthLocation"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiModelID"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiSex"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiCGSex"] = netStreamValue:ReadInt()
		result["kRoleFaceData"]["uiRoleID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_RoleFaceQuery(netStreamValue)
	local result = { ["uiScriptID"] = 0,["iNum"] = 0,["akRoleFaceData"] = nil,} 
	result["uiScriptID"] = netStreamValue:ReadInt()
	result["iNum"] = netStreamValue:ReadInt()
	result["akRoleFaceData"] = {}
		local iNum = result["iNum"]
	for i = 0,iNum or -1 do
		if i >= iNum then
			break
		end
		local tempakRoleFaceData = { ["uiHat"] = 0,["uiBack"] = 0,["uiHairBack"] = 0,["uiBody"] = 0,["uiFace"] = 0,["uiEyebrow"] = 0,["uiEye"] = 0,["uiMouth"] = 0,["uiNose"] = 0,["uiForeheadAdornment"] = 0,["uiFacialAdornment"] = 0,["uiHairFront"] = 0,["iEyebrowWidth"] = 0,["iEyebrowHeight"] = 0,["iEyebrowLocation"] = 0,["iEyeWidth"] = 0,["iEyeHeight"] = 0,["iEyeLocation"] = 0,["iNoseWidth"] = 0,["iNoseHeight"] = 0,["iNoseLocation"] = 0,["iMouthWidth"] = 0,["iMouthHeight"] = 0,["iMouthLocation"] = 0,["uiModelID"] = 0,["uiSex"] = 0,["uiCGSex"] = 0,["uiRoleID"] = 0,} 
		tempakRoleFaceData["uiHat"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiBack"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiHairBack"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiBody"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiFace"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiEyebrow"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiEye"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiMouth"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiNose"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiForeheadAdornment"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiFacialAdornment"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiHairFront"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyebrowWidth"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyebrowHeight"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyebrowLocation"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyeWidth"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyeHeight"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iEyeLocation"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iNoseWidth"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iNoseHeight"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iNoseLocation"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iMouthWidth"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iMouthHeight"] = netStreamValue:ReadInt()
		tempakRoleFaceData["iMouthLocation"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiModelID"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiSex"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiCGSex"] = netStreamValue:ReadInt()
		tempakRoleFaceData["uiRoleID"] = netStreamValue:ReadInt()
		result["akRoleFaceData"][i] = tempakRoleFaceData
	end
	return result
end

function Decode_SeGC_Display_RoleFaceResult(netStreamValue)
	local result = { ["eOprType"] = SRFT_NULL,["nResult"] = SRFT_SUCCEED,["uiScriptID"] = 0,["uiParam"] = 0,} 
	result["eOprType"] = netStreamValue:ReadInt()
	result["nResult"] = netStreamValue:ReadInt()
	result["uiScriptID"] = netStreamValue:ReadInt()
	result["uiParam"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Click_MazeEntry(netStreamValue)
	local result = { ["uiMazeID"] = 0,} 
	result["uiMazeID"] = netStreamValue:ReadInt()
	return result
end

function Decode_SeGC_Display_Disguise(netStreamValue)
	local result = { ["bRefresh"] = false,} 
	result["bRefresh"] = netStreamValue:ReadByte()
	return result
end

